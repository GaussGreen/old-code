/* -----------------------------------------------------------------
   -----------------------------------------------------------------

	FILE:		ICM_INTEGRATOR.CPP
	PROJECT:	UTIL
	
	DESCRIPTION:	Numerical Integrator

  -----------------------------------------------------------------

 	CREATION:	October 8, 2004

	LAST MODIF:	October 8, 2004
  -----------------------------------------------------------------
   
	ICM Library

		version 1.0
		developped by Laurent Jacquel

  -----------------------------------------------------------------
  ----------------------------------------------------------------- */


# include "icm_integrator.h"

// nclude <stdlib.h>
# include <memory.h>
# include <vector>
# include <map>

# include "ICMKernel\glob\icm_constants.h"
# include "ARMKernel\glob\expt.h"
# include "ICMKernel\util\icm_qmatrix.h"

# include "ICMKernel\glob\icm_maths.h"

using namespace std;


std::map<int,ICM_QMatrix<double> > ICM_Integrator::itsMap = std::map<int,ICM_QMatrix<double> >();

void ICM_Integrator::Init()
{
	itsIntegrationStep	= 20;
	itsLowBound		=	0.0;
	itsUpBound		=	0.0;

	itsIntegratorType = qGAUSS_HERMITE;

	itsX	=	NULL;
	itsW	=	NULL;
}

void ICM_Integrator::FullLoadValues()
{
	LoadValues(11);
	LoadValues(21);
	LoadValues(51);
	LoadValues(101);
	LoadValues(201);
	LoadValues(501);
	LoadValues(901);
	LoadValues(20);
	LoadValues(40);
	LoadValues(60);
	LoadValues(100);
}

void ICM_Integrator::LoadValues(const int& nb)
{
	std::map<int,ICM_QMatrix<double> >::const_iterator it = itsMap.find(nb); 
	if (it!=itsMap.end()) return; 

	bool status = true;
	int i,j;
	ICM_QMatrix<double> Matrix;
	
	Matrix.Resize(nb,2);

	switch (nb)
	{
	case 11:
	for (i=0;i<11;i++) {for (j=0;j<2;j++) {Matrix(i,j)= GaussLegendreCoeff_11[i][j];}}
	break;
	case 21:
	for (i=0;i<21;i++) {for (j=0;j<2;j++) {Matrix(i,j)= GaussLegendreCoeff_21[i][j];}}
	break;
	case 51:
	for (i=0;i<51;i++) {for (j=0;j<2;j++) {Matrix(i,j)= GaussLegendreCoeff_51[i][j];}}
	break;
	case 101:
	for (i=0;i<101;i++) {for (j=0;j<2;j++) {Matrix(i,j)= GaussLegendreCoeff_101[i][j];}}
	break;
	case 201:
	for (i=0;i<201;i++) {for (j=0;j<2;j++) {Matrix(i,j)= GaussLegendreCoeff_201[i][j];}}
	break;
	case 501:
	for (i=0;i<501;i++) {for (j=0;j<2;j++) {Matrix(i,j)= GaussLegendreCoeff_501[i][j];}}
	break;
	case 901:
	for (i=0;i<901;i++) {for (j=0;j<2;j++) {Matrix(i,j)= GaussLegendreCoeff_901[i][j];}}
	break;
	case 20:
	for (i=0;i<20;i++) {for (j=0;j<2;j++) {Matrix(i,j)= HermiteCoeff_20[i][j];}}
	break;
	case 40:
	for (i=0;i<40;i++) {for (j=0;j<2;j++) {Matrix(i,j)= HermiteCoeff_40[i][j];}}
	break;
	case 60:
	for (i=0;i<60;i++) {for (j=0;j<2;j++) {Matrix(i,j)= HermiteCoeff_60[i][j];}}
	break;
	case 100:
	for (i=0;i<100;i++) {for (j=0;j<2;j++) {Matrix(i,j)= HermiteCoeff_100[i][j];}}
	break;
	default:
	status = false;
	}

	if (status)
	{itsMap[nb]=Matrix;}
}


void ICM_Integrator::BitwiseCopy(const ICM_Integrator* src)
{
	itsIntegrationStep	=	src->itsIntegrationStep;
	itsLowBound		=	src->itsLowBound;
	itsUpBound		=	src->itsUpBound;

	itsIntegratorType	=	src->itsIntegratorType;

	if (itsX)
		delete[] itsX;
	if (src->itsX)
	{
		itsX = (double *)malloc(itsIntegrationStep*sizeof(double));
		if (itsX != NULL)
			memcpy(itsX, src->itsX, itsIntegrationStep*sizeof(double));
	}

	if (itsW)
		delete[] itsW;
	if (src->itsW)
	{
		itsW = (double *)malloc(itsIntegrationStep*sizeof(double));
		if (itsW != NULL)
			memcpy(itsW, src->itsW, itsIntegrationStep*sizeof(double));
	}
}


void ICM_Integrator::Copy(const ICM_Integrator* src)
{
	if (src != this)
		BitwiseCopy(src);
}


ICM_Integrator* ICM_Integrator :: Clone() const
{
    ICM_Integrator* theClone = new ICM_Integrator();

    theClone->Copy(this);

    return (theClone);
}

void ICM_Integrator::Reset()
{
	if (itsX)
		delete[] itsX;
	if (itsW)
		delete[] itsW;
}


void	ICM_Integrator :: GetAbscissaVector(DoubleVector& data)
{
	data.clear();
	data.resize(itsIntegrationStep);
	for (int i=0; i<itsIntegrationStep;i++)
		data[i]	=	itsX[i];
}

void	ICM_Integrator :: GetWeightVector(DoubleVector& data)
{
	data.clear();
	data.resize(itsIntegrationStep);
	for (int i=0; i<itsIntegrationStep;i++)
		data[i]	=	itsW[i];
}


ReturnCode  ICM_Integrator :: ComputeAbscissasAndWeightsGaussLegendre(const double& x1, 
																	  const double& x2, 
																	  const int& N)
/* Given the lower and upper limits of integration x1 and x2, and given N, this routine returns
arrays x[1..N] and w[1..N] of length N, containing the abscissas and weights of the Gauss-
Legendre N-point quadrature formula.*/

// int gauleg(double x1, double x2, double *x, double *w, int N)
{
	int m, j, i;
	double z1, z, xm, xl, pp, p3, p2, p1; //High precision is a good idea for this routine.

	if (N < 1) return RetNotOk;
	itsIntegrationStep	=	N;

	ICM_QMatrix<double> Matrix(itsIntegrationStep,2);

	if (itsX)
		delete[] itsX;
	itsX = (double *)malloc(N*sizeof(double));
	if (itsW)
		delete[] itsW;
	itsW = (double *)malloc(N*sizeof(double));

	m = (N+1)/2; //The roots are symmetric in the interval, so we only have to nd half of them. 
	xm = 0.5 * (x2 + x1);
	xl = 0.5 * (x2 - x1);

	//Loop over the desired roots.
	for (i=1;i<=m;i++) 
	{ 
		z=cos(3.141592654*(i-0.25)/(N+0.5));
		//Starting with the above approximation to the ith root, we enter the main loop of re nement by Newton's method.
		do 
		{
			p1=1.0;
			p2=0.0;

			//Loop up the recurrence relation to get the Legendre polynomial evaluated at z.
			for (j=1;j<=N;j++) 
			{ 
				p3 = p2;
				p2 = p1;
				p1 = ((2.0 * j-1.0) * z * p2 - (j - 1.0) * p3) / j;
			}

			//p1 is now the desired Legendre polynomial. We next compute pp, its derivative,
			//by a standard relation involving also p2, the polynomial of one lower order.
			pp = N * (z * p1 - p2) / (z * z - 1.0);
			z1 = z;
			z = z1 - p1 / pp; //Newton's method.
		} 
		while (fabs(z-z1) > ZEPS);

		Matrix(i-1,0) = itsX[i-1] = xm - xl * z;								//Scale the root to the desired interval,
		Matrix(N-i,0) = itsX[N-i] = xm + xl * z;							//and put in its symmetric counterpart.
		Matrix(i-1,1) = itsW[i-1] = 2.0 * xl / ((1.0 - z * z) * pp * pp);		//Compute the weight
		Matrix(N-i,1) = itsW[N-i] = itsW[i-1];									//and its symmetric counterpart.
	}

	itsMap[itsIntegrationStep]=Matrix;	

	return RetOk;
}


ReturnCode  ICM_Integrator :: ComputeAbscissasAndWeightsGaussHermite(const int& N)
{
	int i,its,j,m;
	double p1,p2,p3,pp,z,z1;	// High precision is a good idea for this routine.

	if (N < 1) return RetNotOk;
	itsIntegrationStep	=	N;

	ICM_QMatrix<double> Matrix(itsIntegrationStep,2);

	if (itsX)
		delete[] itsX;
	itsX = (double *)malloc(N*sizeof(double));
	if (itsW)
		delete[] itsW;
	itsW = (double *)malloc(N*sizeof(double));

	m=(N+1)/2;
	// The roots are symmetric about the origin, so we have to .nd only half of them.
	for (i=1;i<=m;i++)
	{			
		//	Loop over the desired roots.
		if (i == 1)
		{
			// Initial guess for the largest root.
			z=sqrt((double)(2*N+1))-1.85575*pow((double)(2*N+1),-0.16667);
		}
		else if (i == 2)
		{
			// Initial guess for the second largest root.
			z -= 1.14*pow((double)N,0.426)/z;
		}
		else if (i == 3)
		{
			// Initial guess for the third largest root.
			z=1.86*z-0.86*itsX[0];
		}
		else if (i == 4)
		{
			// Initial guess for the fourth largest root.
			z=1.91*z-0.91*itsX[1];
		}
		else
		{
			// Initial guess for the other roots.
			z=2.0*z-itsX[i-3];
		}

		for (its=1;its<=MAXIT_GH;its++)
		{
			// Refinement by Newton’s method.
			p1=PIM4_GH;
			p2=0.0;
			for (j=1;j<=N;j++)
			{
				// Loop up the recurrence relation to get
				// the Hermite polynomial evaluated at z.
				p3=p2;
				p2=p1;
				p1=z*sqrt(2.0/j)*p2-sqrt(((double)(j-1))/j)*p3;
			}
			// p1 is now the desired Hermite polynomial. We next compute pp, its derivative, by
			// the relation (4.5.21) using p2, the polynomial of one lower order.
			pp=sqrt((double)2*N)*p2;
			z1=z;
			z=z1-p1/pp;		// Newton’s formula.
			if (fabs(z-z1) <= EPS_GH) break;
		}

		if (its > MAXIT_GH) return NULL;	// too many iterations

		Matrix(i-1,0) = itsX[i-1]=z;					// Store the root
		Matrix(N-i,0) = itsX[N-i] = -z;			// and its symmetric counterpart.
		Matrix(i-1,1) = itsW[i-1]=2.0/(pp*pp);		// Compute the weight
		Matrix(N-i,1) = itsW[N-i]=itsW[i-1];			// and its symmetric counterpart.
	}
	
	itsMap[itsIntegrationStep]=Matrix;	

	return RetOk;
}


double	ICM_Integrator :: Integrate()
{
	return -1.0;
}



double ICM_Integrator::GaussLegendreCoeff_11[11][2] = { 
{0.010885670927, 0.027834283558},
{0.056468700116, 0.062790184732},
{0.134923997213, 0.093145105463},
{0.240451935397, 0.116596882296},
{0.365228422024, 0.131402272255},
{0.500000000000, 0.136462543389},
{0.634771577976, 0.131402272255},
{0.759548064603, 0.116596882296},
{0.865076002787, 0.093145105463},
{0.943531299884, 0.062790184732},
{0.989114329073, 0.027834283558}
};

double ICM_Integrator::GaussLegendreCoeff_21[21][2] = {
	{0.003123945690,	0.008008614129},
	{0.016386580717,	0.018476894870},
	{0.039950332925,	0.028567212713},
	{0.073318317708,	0.038050056814},
	{0.115780018262,	0.046722211728},
	{0.166430597901,	0.054398649584},
	{0.224190582056,	0.060915708027},
	{0.287828939896,	0.066134469317},
	{0.355989341599,	0.069943697396},
	{0.427219072920,	0.072262201995},
	{0.500000000000,	0.073040566825},
	{0.572780927080,	0.072262201995},
	{0.644010658401,	0.069943697396},
	{0.712171060104,	0.066134469317},
	{0.775809417944,	0.060915708027},
	{0.833569402099,	0.054398649584},
	{0.884219981738,	0.046722211728},
	{0.926681682292,	0.038050056814},
	{0.960049667075,	0.028567212713},
	{0.983613419283,	0.018476894870},
	{0.996876085310,	0.008008614129}
};


double ICM_Integrator::GaussLegendreCoeff_51[51][2] = { 
{0.000545004576, 0.001398403586},
{0.002869369782, 0.003250168889},
{0.007042004132, 0.005092595649},
{0.013048315990, 0.006916317003},
{0.020866075693, 0.008714357362},
{0.030466227999, 0.010479994201},
{0.041813068845, 0.012206650287},
{0.054864390985, 0.013887899297},
{0.069571644409, 0.015517485645},
{0.085880118088, 0.017089346602},
{0.103729143950, 0.018597634462},
{0.123052322757, 0.020036738143},
{0.143777771211, 0.021401303999},
{0.165828389412, 0.022686255704},
{0.189122147700, 0.023886813120},
{0.213572391824, 0.024998510075},
{0.239088165317, 0.026017210968},
{0.265574547857, 0.026939126157},
{0.292933008387, 0.027760826048},
{0.321061771656, 0.028479253860},
{0.349856196832, 0.029091736991},
{0.379209166776, 0.029595996961},
{0.409011486521, 0.029990157888},
{0.439152289491, 0.030272753467},
{0.469519449925, 0.030442732422},
{0.500000000000, 0.030499462421},
{0.530480550075, 0.030442732422},
{0.560847710509, 0.030272753467},
{0.590988513479, 0.029990157888},
{0.620790833224, 0.029595996961},
{0.650143803168, 0.029091736991},
{0.678938228344, 0.028479253860},
{0.707066991613, 0.027760826048},
{0.734425452143, 0.026939126157},
{0.760911834683, 0.026017210968},
{0.786427608176, 0.024998510075},
{0.810877852300, 0.023886813120},
{0.834171610588, 0.022686255704},
{0.856222228789, 0.021401303999},
{0.876947677243, 0.020036738143},
{0.896270856050, 0.018597634462},
{0.914119881912, 0.017089346602},
{0.930428355591, 0.015517485645},
{0.945135609015, 0.013887899297},
{0.958186931155, 0.012206650287},
{0.969533772001, 0.010479994201},
{0.979133924307, 0.008714357362},
{0.986951684010, 0.006916317003},
{0.992957995868, 0.005092595649},
{0.997130630218, 0.003250168889},
{0.999454995424, 0.001398403586},
};

double ICM_Integrator::GaussLegendreCoeff_101[101][2] = { 
{0.000140330235, 0.000360115853},
{0.000739244005, 0.000837946379},
{0.001816133605, 0.001315682437},
{0.003370206906, 0.001792219699},
{0.005400004562, 0.002267052505},
{0.007903589185, 0.002739717342},
{0.010878564857, 0.003209759135},
{0.014322082721, 0.003676726837},
{0.018230844583, 0.004140172813},
{0.022601106364, 0.004599652970},
{0.027428681798, 0.005054727090},
{0.032708946491, 0.005504959204},
{0.038436842377, 0.005949918001},
{0.044606882576, 0.006389177230},
{0.051213156654, 0.006822316103},
{0.058249336287, 0.007248919699},
{0.065708681333, 0.007668579360},
{0.073584046281, 0.008080893077},
{0.081867887102, 0.008485465885},
{0.090552268475, 0.008881910228},
{0.099628871390, 0.009269846341},
{0.109089001115, 0.009648902609},
{0.118923595525, 0.010018715922},
{0.129123233787, 0.010378932025},
{0.139678145379, 0.010729205858},
{0.150578219456, 0.011069201881},
{0.161813014529, 0.011398594404},
{0.173371768470, 0.011717067892},
{0.185243408824, 0.012024317270},
{0.197416563410, 0.012320048215},
{0.209879571220, 0.012603977438},
{0.222620493588, 0.012875832955},
{0.235627125624, 0.013135354347},
{0.248887007907, 0.013382293013},
{0.262387438422, 0.013616412402},
{0.276115484726, 0.013837488246},
{0.290057996333, 0.014045308768},
{0.304201617320, 0.014239674892},
{0.318532799111, 0.014420400429},
{0.333037813462, 0.014587312257},
{0.347702765611, 0.014740250487},
{0.362513607585, 0.014879068614},
{0.377456151660, 0.015003633660},
{0.392516083951, 0.015113826302},
{0.407678978123, 0.015209540983},
{0.422930309212, 0.015290686014},
{0.438255467535, 0.015357183665},
{0.453639772691, 0.015408970235},
{0.469068487619, 0.015445996118},
{0.484526832718, 0.015468225844},
{0.500000000000, 0.015475638120},
{0.515473167282, 0.015468225844},
{0.530931512381, 0.015445996118},
{0.546360227309, 0.015408970235},
{0.561744532465, 0.015357183665},
{0.577069690788, 0.015290686014},
{0.592321021877, 0.015209540983},
{0.607483916049, 0.015113826302},
{0.622543848340, 0.015003633660},
{0.637486392415, 0.014879068614},
{0.652297234389, 0.014740250487},
{0.666962186538, 0.014587312257},
{0.681467200889, 0.014420400429},
{0.695798382680, 0.014239674892},
{0.709942003667, 0.014045308768},
{0.723884515274, 0.013837488246},
{0.737612561578, 0.013616412402},
{0.751112992093, 0.013382293013},
{0.764372874376, 0.013135354347},
{0.777379506412, 0.012875832955},
{0.790120428780, 0.012603977438},
{0.802583436590, 0.012320048215},
{0.814756591176, 0.012024317270},
{0.826628231530, 0.011717067892},
{0.838186985471, 0.011398594404},
{0.849421780544, 0.011069201881},
{0.860321854621, 0.010729205858},
{0.870876766213, 0.010378932025},
{0.881076404475, 0.010018715922},
{0.890910998885, 0.009648902609},
{0.900371128610, 0.009269846341},
{0.909447731525, 0.008881910228},
{0.918132112898, 0.008485465885},
{0.926415953719, 0.008080893077},
{0.934291318667, 0.007668579360},
{0.941750663713, 0.007248919699},
{0.948786843346, 0.006822316103},
{0.955393117424, 0.006389177230},
{0.961563157623, 0.005949918001},
{0.967291053509, 0.005504959204},
{0.972571318202, 0.005054727090},
{0.977398893636, 0.004599652970},
{0.981769155417, 0.004140172813},
{0.985677917279, 0.003676726837},
{0.989121435143, 0.003209759135},
{0.992096410815, 0.002739717342},
{0.994599995438, 0.002267052505},
{0.996629793094, 0.001792219699},
{0.998183866395, 0.001315682437},
{0.999260755995, 0.000837946379},
{0.999859669765, 0.000360115853},
};


double ICM_Integrator::GaussLegendreCoeff_201[201][2] = { 
{ 0.000035608271	,0.000091238591	},
{ 0.000187608409	,0.000212683360	},
{ 0.000461029522	,0.000334136471	},
{ 0.000855865904	,0.000455516322	},
{ 0.001372029023	,0.000576787173	},
{ 0.002009395189	,0.000697918352	},
{ 0.002767810066	,0.000818880089	},
{ 0.003647089544	,0.000939642869	},
{ 0.004647020007	,0.001060177291	},
{ 0.005767358455	,0.001180454035	},
{ 0.007007832593	,0.001300443854	},
{ 0.008368140914	,0.001420117577	},
{ 0.009847952773	,0.001539446110	},
{ 0.011446908470	,0.001658400446	},
{ 0.013164619347	,0.001776951668	},
{ 0.015000667872	,0.001895070959	},
{ 0.016954607751	,0.002012729606	},
{ 0.019025964031	,0.002129899010	},
{ 0.021214233219	,0.002246550688	},
{ 0.023518883400	,0.002362656286	},
{ 0.025939354372	,0.002478187581	},
{ 0.028475057779	,0.002593116490	},
{ 0.031125377255	,0.002707415077	},
{ 0.033889668573	,0.002821055558	},
{ 0.036767259802	,0.002934010310	},
{ 0.039757451471	,0.003046251877	},
{ 0.042859516739	,0.003157752976	},
{ 0.046072701570	,0.003268486503	},
{ 0.049396224918	,0.003378425542	},
{ 0.052829278918	,0.003487543368	},
{ 0.056371029078	,0.003595813460	},
{ 0.060020614487	,0.003703209497	},
{ 0.063777148021	,0.003809705376	},
{ 0.067639716558	,0.003915275210	},
{ 0.071607381205	,0.004019893337	},
{ 0.075679177520	,0.004123534328	},
{ 0.079854115750	,0.004226172989	},
{ 0.084131181070	,0.004327784371	},
{ 0.088509333832	,0.004428343776	},
{ 0.092987509814	,0.004527826760	},
{ 0.097564620484	,0.004626209142	},
{ 0.102239553257	,0.004723467006	},
{ 0.107011171773	,0.004819576712	},
{ 0.111878316171	,0.004914514897	},
{ 0.116839803367	,0.005008258486	},
{ 0.121894427346	,0.005100784690	},
{ 0.127040959453	,0.005192071020	},
{ 0.132278148695	,0.005282095286	},
{ 0.137604722039	,0.005370835604	},
{ 0.143019384728	,0.005458270405	},
{ 0.148520820590	,0.005544378436	},
{ 0.154107692362	,0.005629138764	},
{ 0.159778642014	,0.005712530788	},
{ 0.165532291077	,0.005794534237	},
{ 0.171367240982	,0.005875129178	},
{ 0.177282073397	,0.005954296020	},
{ 0.183275350571	,0.006032015520	},
{ 0.189345615688	,0.006108268785	},
{ 0.195491393215	,0.006183037281	},
{ 0.201711189266	,0.006256302834	},
{ 0.208003491961	,0.006328047634	},
{ 0.214366771798	,0.006398254241	},
{ 0.220799482021	,0.006466905591	},
{ 0.227300058995	,0.006533984996	},
{ 0.233866922592	,0.006599476151	},
{ 0.240498476569	,0.006663363136	},
{ 0.247193108959	,0.006725630421	},
{ 0.253949192463	,0.006786262872	},
{ 0.260765084842	,0.006845245751	},
{ 0.267639129323	,0.006902564718	},
{ 0.274569654993	,0.006958205843	},
{ 0.281554977215	,0.007012155600	},
{ 0.288593398028	,0.007064400875	},
{ 0.295683206567	,0.007114928968	},
{ 0.302822679473	,0.007163727598	},
{ 0.310010081317	,0.007210784903	},
{ 0.317243665019	,0.007256089444	},
{ 0.324521672274	,0.007299630209	},
{ 0.331842333978	,0.007341396613	},
{ 0.339203870659	,0.007381368350	},
{ 0.346604492908	,0.007419556973	},
{ 0.354042401818	,0.007455942032	},
{ 0.361515789416	,0.007490514684	},
{ 0.369022839106	,0.007523266526	},
{ 0.376561726111	,0.007554189597	},
{ 0.384130617911	,0.007583276382	},
{ 0.391727674698	,0.007610519810	},
{ 0.399351049814	,0.007635913260	},
{ 0.406998890204	,0.007659450560	},
{ 0.414669336868	,0.007681125989	},
{ 0.422360525309	,0.007700934279	},
{ 0.430070585990	,0.007718870615	},
{ 0.437797644784	,0.007734930637	},
{ 0.445539823435	,0.007749110443	},
{ 0.453295240011	,0.007761406585	},
{ 0.461062009360	,0.007771816075	},
{ 0.468838243574	,0.007780336383	},
{ 0.476622052441	,0.007786965437	},
{ 0.484411543910	,0.007791701627	},
{ 0.492204824548	,0.007794543802	},
{ 0.500000000000	,0.007795491270	},
{ 0.507795175452	,0.007794543802	},
{ 0.515588456090	,0.007791701627	},
{ 0.523377947559	,0.007786965437	},
{ 0.531161756426	,0.007780336383	},
{ 0.538937990640	,0.007771816075	},
{ 0.546704759989	,0.007761406585	},
{ 0.554460176565	,0.007749110443	},
{ 0.562202355216	,0.007734930637	},
{ 0.569929414010	,0.007718870615	},
{ 0.577639474691	,0.007700934279	},
{ 0.585330663132	,0.007681125989	},
{ 0.593001109796	,0.007659450560	},
{ 0.600648950186	,0.007635913260	},
{ 0.608272325302	,0.007610519810	},
{ 0.615869382089	,0.007583276382	},
{ 0.623438273889	,0.007554189597	},
{ 0.630977160894	,0.007523266526	},
{ 0.638484210584	,0.007490514684	},
{ 0.645957598182	,0.007455942032	},
{ 0.653395507092	,0.007419556973	},
{ 0.660796129341	,0.007381368350	},
{ 0.668157666022	,0.007341396613	},
{ 0.675478327726	,0.007299630209	},
{ 0.682756334981	,0.007256089444	},
{ 0.689989918683	,0.007210784903	},
{ 0.697177320527	,0.007163727598	},
{ 0.704316793433	,0.007114928968	},
{ 0.711406601972	,0.007064400875	},
{ 0.718445022785	,0.007012155600	},
{ 0.725430345007	,0.006958205843	},
{ 0.732360870677	,0.006902564718	},
{ 0.739234915158	,0.006845245751	},
{ 0.746050807537	,0.006786262872	},
{ 0.752806891041	,0.006725630421	},
{ 0.759501523431	,0.006663363136	},
{ 0.766133077408	,0.006599476151	},
{ 0.772699941005	,0.006533984996	},
{ 0.779200517979	,0.006466905591	},
{ 0.785633228202	,0.006398254241	},
{ 0.791996508039	,0.006328047634	},
{ 0.798288810734	,0.006256302834	},
{ 0.804508606785	,0.006183037281	},
{ 0.810654384312	,0.006108268785	},
{ 0.816724649429	,0.006032015520	},
{ 0.822717926603	,0.005954296020	},
{ 0.828632759018	,0.005875129178	},
{ 0.834467708923	,0.005794534237	},
{ 0.840221357986	,0.005712530788	},
{ 0.845892307638	,0.005629138764	},
{ 0.851479179410	,0.005544378436	},
{ 0.856980615272	,0.005458270405	},
{ 0.862395277961	,0.005370835604	},
{ 0.867721851305	,0.005282095286	},
{ 0.872959040547	,0.005192071020	},
{ 0.878105572654	,0.005100784690	},
{ 0.883160196633	,0.005008258486	},
{ 0.888121683829	,0.004914514897	},
{ 0.892988828227	,0.004819576712	},
{ 0.897760446743	,0.004723467006	},
{ 0.902435379516	,0.004626209142	},
{ 0.907012490186	,0.004527826760	},
{ 0.911490666168	,0.004428343776	},
{ 0.915868818930	,0.004327784371	},
{ 0.920145884250	,0.004226172989	},
{ 0.924320822480	,0.004123534328	},
{ 0.928392618795	,0.004019893337	},
{ 0.932360283442	,0.003915275210	},
{ 0.936222851979	,0.003809705376	},
{ 0.939979385513	,0.003703209497	},
{ 0.943628970922	,0.003595813460	},
{ 0.947170721082	,0.003487543368	},
{ 0.950603775082	,0.003378425542	},
{ 0.953927298430	,0.003268486503	},
{ 0.957140483261	,0.003157752976	},
{ 0.960242548529	,0.003046251877	},
{ 0.963232740198	,0.002934010310	},
{ 0.966110331427	,0.002821055558	},
{ 0.968874622745	,0.002707415077	},
{ 0.971524942221	,0.002593116490	},
{ 0.974060645628	,0.002478187581	},
{ 0.976481116600	,0.002362656286	},
{ 0.978785766781	,0.002246550688	},
{ 0.980974035969	,0.002129899010	},
{ 0.983045392249	,0.002012729606	},
{ 0.984999332128	,0.001895070959	},
{ 0.986835380653	,0.001776951668	},
{ 0.988553091530	,0.001658400446	},
{ 0.990152047227	,0.001539446110	},
{ 0.991631859086	,0.001420117577	},
{ 0.992992167407	,0.001300443854	},
{ 0.994232641545	,0.001180454035	},
{ 0.995352979993	,0.001060177291	},
{ 0.996352910456	,0.000939642869	},
{ 0.997232189934	,0.000818880089	},
{ 0.997990604811	,0.000697918352	},
{ 0.998627970977	,0.000576787173	},
{ 0.999144134096	,0.000455516322	},
{ 0.999538970478	,0.000334136471	},
{ 0.999812391591	,0.000212683360	},
{ 0.999964391729	,0.000091238591	},
};



double ICM_Integrator::GaussLegendreCoeff_501[501][2] = { 
{ 0.000005744136	,0.000013637844	},
{ 0.000030287992	,0.000033807697	},
{ 0.000074437435	,0.000053611617	},
{ 0.000138203156	,0.000073318750	},
{ 0.000221584130	,0.000092985976	},
{ 0.000324577434	,0.000112631414	},
{ 0.000447179141	,0.000132262232	},
{ 0.000589384488	,0.000151881564	},
{ 0.000751187916	,0.000171490778	},
{ 0.000932583088	,0.000191090376	},
{ 0.001133562891	,0.000210680389	},
{ 0.001354119443	,0.000230260577	},
{ 0.001594244091	,0.000249830537	},
{ 0.001853927412	,0.000269389759	},
{ 0.002133159218	,0.000288937666	},
{ 0.002431928551	,0.000308473631	},
{ 0.002750223689	,0.000327996994	},
{ 0.003088032139	,0.000347507074	},
{ 0.003445340646	,0.000367003170	},
{ 0.003822135189	,0.000386484570	},
{ 0.004218400982	,0.000405950551	},
{ 0.004634122474	,0.000425400384	},
{ 0.005069283351	,0.000444833334	},
{ 0.005523866536	,0.000464248662	},
{ 0.005997854191	,0.000483645627	},
{ 0.006491227716	,0.000503023484	},
{ 0.007003967748	,0.000522381486	},
{ 0.007536054168	,0.000541718887	},
{ 0.008087466094	,0.000561034938	},
{ 0.008658181887	,0.000580328890	},
{ 0.009248179153	,0.000599599994	},
{ 0.009857434737	,0.000618847501	},
{ 0.010485924731	,0.000638070662	},
{ 0.011133624471	,0.000657268727	},
{ 0.011800508541	,0.000676440947	},
{ 0.012486550769	,0.000695586576	},
{ 0.013191724234	,0.000714704865	},
{ 0.013916001264	,0.000733795067	},
{ 0.014659353435	,0.000752856436	},
{ 0.015421751577	,0.000771888228	},
{ 0.016203165772	,0.000790889696	},
{ 0.017003565354	,0.000809860100	},
{ 0.017822918914	,0.000828798694	},
{ 0.018661194299	,0.000847704739	},
{ 0.019518358613	,0.000866577494	},
{ 0.020394378218	,0.000885416220	},
{ 0.021289218737	,0.000904220180	},
{ 0.022202845054	,0.000922988635	},
{ 0.023135221318	,0.000941720852	},
{ 0.024086310937	,0.000960416096	},
{ 0.025056076591	,0.000979073635	},
{ 0.026044480222	,0.000997692736	},
{ 0.027051483043	,0.001016272671	},
{ 0.028077045537	,0.001034812711	},
{ 0.029121127459	,0.001053312130	},
{ 0.030183687835	,0.001071770201	},
{ 0.031264684969	,0.001090186202	},
{ 0.032364076439	,0.001108559409	},
{ 0.033481819103	,0.001126889104	},
{ 0.034617869097	,0.001145174566	},
{ 0.035772181841	,0.001163415080	},
{ 0.036944712035	,0.001181609928	},
{ 0.038135413668	,0.001199758399	},
{ 0.039344240013	,0.001217859779	},
{ 0.040571143632	,0.001235913360	},
{ 0.041816076379	,0.001253918433	},
{ 0.043078989400	,0.001271874291	},
{ 0.044359833135	,0.001289780231	},
{ 0.045658557320	,0.001307635550	},
{ 0.046975110990	,0.001325439548	},
{ 0.048309442481	,0.001343191525	},
{ 0.049661499429	,0.001360890787	},
{ 0.051031228777	,0.001378536638	},
{ 0.052418576773	,0.001396128387	},
{ 0.053823488975	,0.001413665342	},
{ 0.055245910250	,0.001431146817	},
{ 0.056685784778	,0.001448572125	},
{ 0.058143056056	,0.001465940582	},
{ 0.059617666896	,0.001483251508	},
{ 0.061109559431	,0.001500504223	},
{ 0.062618675116	,0.001517698050	},
{ 0.064144954729	,0.001534832314	},
{ 0.065688338375	,0.001551906344	},
{ 0.067248765488	,0.001568919470	},
{ 0.068826174832	,0.001585871023	},
{ 0.070420504507	,0.001602760339	},
{ 0.072031691947	,0.001619586756	},
{ 0.073659673925	,0.001636349612	},
{ 0.075304386555	,0.001653048251	},
{ 0.076965765295	,0.001669682016	},
{ 0.078643744946	,0.001686250256	},
{ 0.080338259663	,0.001702752321	},
{ 0.082049242947	,0.001719187562	},
{ 0.083776627656	,0.001735555335	},
{ 0.085520346002	,0.001751854998	},
{ 0.087280329557	,0.001768085911	},
{ 0.089056509257	,0.001784247438	},
{ 0.090848815398	,0.001800338943	},
{ 0.092657177647	,0.001816359796	},
{ 0.094481525038	,0.001832309369	},
{ 0.096321785980	,0.001848187034	},
{ 0.098177888257	,0.001863992170	},
{ 0.100049759030	,0.001879724156	},
{ 0.101937324842	,0.001895382375	},
{ 0.103840511621	,0.001910966212	},
{ 0.105759244681	,0.001926475056	},
{ 0.107693448727	,0.001941908298	},
{ 0.109643047854	,0.001957265333	},
{ 0.111607965557	,0.001972545558	},
{ 0.113588124726	,0.001987748374	},
{ 0.115583447656	,0.002002873184	},
{ 0.117593856044	,0.002017919394	},
{ 0.119619270999	,0.002032886414	},
{ 0.121659613037	,0.002047773657	},
{ 0.123714802090	,0.002062580538	},
{ 0.125784757507	,0.002077306477	},
{ 0.127869398059	,0.002091950896	},
{ 0.129968641939	,0.002106513220	},
{ 0.132082406767	,0.002120992877	},
{ 0.134210609594	,0.002135389300	},
{ 0.136353166904	,0.002149701923	},
{ 0.138509994617	,0.002163930186	},
{ 0.140681008095	,0.002178073529	},
{ 0.142866122142	,0.002192131397	},
{ 0.145065251008	,0.002206103240	},
{ 0.147278308394	,0.002219988508	},
{ 0.149505207454	,0.002233786657	},
{ 0.151745860799	,0.002247497145	},
{ 0.154000180500	,0.002261119435	},
{ 0.156268078092	,0.002274652991	},
{ 0.158549464578	,0.002288097284	},
{ 0.160844250429	,0.002301451784	},
{ 0.163152345594	,0.002314715968	},
{ 0.165473659496	,0.002327889317	},
{ 0.167808101041	,0.002340971311	},
{ 0.170155578620	,0.002353961440	},
{ 0.172516000113	,0.002366859191	},
{ 0.174889272890	,0.002379664061	},
{ 0.177275303818	,0.002392375545	},
{ 0.179673999264	,0.002404993145	},
{ 0.182085265097	,0.002417516367	},
{ 0.184509006693	,0.002429944718	},
{ 0.186945128937	,0.002442277711	},
{ 0.189393536232	,0.002454514862	},
{ 0.191854132494	,0.002466655691	},
{ 0.194326821165	,0.002478699721	},
{ 0.196811505209	,0.002490646480	},
{ 0.199308087122	,0.002502495499	},
{ 0.201816468931	,0.002514246312	},
{ 0.204336552202	,0.002525898460	},
{ 0.206868238040	,0.002537451484	},
{ 0.209411427095	,0.002548904931	},
{ 0.211966019567	,0.002560258353	},
{ 0.214531915207	,0.002571511302	},
{ 0.217109013322	,0.002582663338	},
{ 0.219697212781	,0.002593714023	},
{ 0.222296412017	,0.002604662923	},
{ 0.224906509031	,0.002615509610	},
{ 0.227527401395	,0.002626253656	},
{ 0.230158986260	,0.002636894641	},
{ 0.232801160356	,0.002647432146	},
{ 0.235453819997	,0.002657865760	},
{ 0.238116861086	,0.002668195071	},
{ 0.240790179120	,0.002678419674	},
{ 0.243473669189	,0.002688539169	},
{ 0.246167225988	,0.002698553159	},
{ 0.248870743815	,0.002708461250	},
{ 0.251584116577	,0.002718263053	},
{ 0.254307237794	,0.002727958184	},
{ 0.257040000605	,0.002737546263	},
{ 0.259782297768	,0.002747026913	},
{ 0.262534021670	,0.002756399762	},
{ 0.265295064327	,0.002765664442	},
{ 0.268065317386	,0.002774820590	},
{ 0.270844672139	,0.002783867847	},
{ 0.273633019514	,0.002792805857	},
{ 0.276430250092	,0.002801634269	},
{ 0.279236254101	,0.002810352738	},
{ 0.282050921427	,0.002818960922	},
{ 0.284874141615	,0.002827458481	},
{ 0.287705803876	,0.002835845083	},
{ 0.290545797087	,0.002844120399	},
{ 0.293394009801	,0.002852284105	},
{ 0.296250330247	,0.002860335878	},
{ 0.299114646335	,0.002868275405	},
{ 0.301986845663	,0.002876102372	},
{ 0.304866815517	,0.002883816474	},
{ 0.307754442882	,0.002891417407	},
{ 0.310649614440	,0.002898904873	},
{ 0.313552216576	,0.002906278578	},
{ 0.316462135386	,0.002913538233	},
{ 0.319379256677	,0.002920683553	},
{ 0.322303465974	,0.002927714257	},
{ 0.325234648524	,0.002934630070	},
{ 0.328172689299	,0.002941430721	},
{ 0.331117473005	,0.002948115941	},
{ 0.334068884079	,0.002954685470	},
{ 0.337026806703	,0.002961139049	},
{ 0.339991124798	,0.002967476425	},
{ 0.342961722039	,0.002973697350	},
{ 0.345938481851	,0.002979801578	},
{ 0.348921287420	,0.002985788871	},
{ 0.351910021692	,0.002991658994	},
{ 0.354904567381	,0.002997411716	},
{ 0.357904806976	,0.003003046812	},
{ 0.360910622738	,0.003008564060	},
{ 0.363921896713	,0.003013963245	},
{ 0.366938510730	,0.003019244153	},
{ 0.369960346410	,0.003024406578	},
{ 0.372987285168	,0.003029450317	},
{ 0.376019208220	,0.003034375173	},
{ 0.379055996587	,0.003039180952	},
{ 0.382097531095	,0.003043867465	},
{ 0.385143692390	,0.003048434529	},
{ 0.388194360930	,0.003052881964	},
{ 0.391249417001	,0.003057209596	},
{ 0.394308740715	,0.003061417255	},
{ 0.397372212016	,0.003065504776	},
{ 0.400439710686	,0.003069471998	},
{ 0.403511116349	,0.003073318766	},
{ 0.406586308474	,0.003077044929	},
{ 0.409665166385	,0.003080650341	},
{ 0.412747569259	,0.003084134860	},
{ 0.415833396134	,0.003087498349	},
{ 0.418922525916	,0.003090740677	},
{ 0.422014837379	,0.003093861715	},
{ 0.425110209173	,0.003096861343	},
{ 0.428208519828	,0.003099739441	},
{ 0.431309647759	,0.003102495898	},
{ 0.434413471270	,0.003105130604	},
{ 0.437519868559	,0.003107643457	},
{ 0.440628717724	,0.003110034358	},
{ 0.443739896764	,0.003112303213	},
{ 0.446853283591	,0.003114449933	},
{ 0.449968756027	,0.003116474433	},
{ 0.453086191812	,0.003118376635	},
{ 0.456205468612	,0.003120156464	},
{ 0.459326464018	,0.003121813849	},
{ 0.462449055555	,0.003123348727	},
{ 0.465573120683	,0.003124761035	},
{ 0.468698536808	,0.003126050720	},
{ 0.471825181280	,0.003127217731	},
{ 0.474952931402	,0.003128262021	},
{ 0.478081664432	,0.003129183550	},
{ 0.481211257593	,0.003129982282	},
{ 0.484341588070	,0.003130658185	},
{ 0.487472533023	,0.003131211233	},
{ 0.490603969584	,0.003131641403	},
{ 0.493735774869	,0.003131948680	},
{ 0.496867825977	,0.003132133051	},
{ 0.500000000000	,0.003132194509	},
{ 0.503132174023	,0.003132133051	},
{ 0.506264225131	,0.003131948680	},
{ 0.509396030416	,0.003131641403	},
{ 0.512527466977	,0.003131211233	},
{ 0.515658411930	,0.003130658185	},
{ 0.518788742407	,0.003129982282	},
{ 0.521918335568	,0.003129183550	},
{ 0.525047068598	,0.003128262021	},
{ 0.528174818720	,0.003127217731	},
{ 0.531301463192	,0.003126050720	},
{ 0.534426879317	,0.003124761035	},
{ 0.537550944445	,0.003123348727	},
{ 0.540673535982	,0.003121813849	},
{ 0.543794531388	,0.003120156464	},
{ 0.546913808188	,0.003118376635	},
{ 0.550031243973	,0.003116474433	},
{ 0.553146716409	,0.003114449933	},
{ 0.556260103236	,0.003112303213	},
{ 0.559371282276	,0.003110034358	},
{ 0.562480131441	,0.003107643457	},
{ 0.565586528730	,0.003105130604	},
{ 0.568690352241	,0.003102495898	},
{ 0.571791480172	,0.003099739441	},
{ 0.574889790827	,0.003096861343	},
{ 0.577985162621	,0.003093861715	},
{ 0.581077474084	,0.003090740677	},
{ 0.584166603866	,0.003087498349	},
{ 0.587252430741	,0.003084134860	},
{ 0.590334833615	,0.003080650341	},
{ 0.593413691526	,0.003077044929	},
{ 0.596488883651	,0.003073318766	},
{ 0.599560289314	,0.003069471998	},
{ 0.602627787984	,0.003065504776	},
{ 0.605691259285	,0.003061417255	},
{ 0.608750582999	,0.003057209596	},
{ 0.611805639070	,0.003052881964	},
{ 0.614856307610	,0.003048434529	},
{ 0.617902468905	,0.003043867465	},
{ 0.620944003413	,0.003039180952	},
{ 0.623980791780	,0.003034375173	},
{ 0.627012714832	,0.003029450317	},
{ 0.630039653590	,0.003024406578	},
{ 0.633061489270	,0.003019244153	},
{ 0.636078103287	,0.003013963245	},
{ 0.639089377262	,0.003008564060	},
{ 0.642095193024	,0.003003046812	},
{ 0.645095432619	,0.002997411716	},
{ 0.648089978308	,0.002991658994	},
{ 0.651078712580	,0.002985788871	},
{ 0.654061518149	,0.002979801578	},
{ 0.657038277961	,0.002973697350	},
{ 0.660008875202	,0.002967476425	},
{ 0.662973193297	,0.002961139049	},
{ 0.665931115921	,0.002954685470	},
{ 0.668882526995	,0.002948115941	},
{ 0.671827310701	,0.002941430721	},
{ 0.674765351476	,0.002934630070	},
{ 0.677696534026	,0.002927714257	},
{ 0.680620743323	,0.002920683553	},
{ 0.683537864614	,0.002913538233	},
{ 0.686447783424	,0.002906278578	},
{ 0.689350385560	,0.002898904873	},
{ 0.692245557118	,0.002891417407	},
{ 0.695133184483	,0.002883816474	},
{ 0.698013154337	,0.002876102372	},
{ 0.700885353665	,0.002868275405	},
{ 0.703749669753	,0.002860335878	},
{ 0.706605990199	,0.002852284105	},
{ 0.709454202913	,0.002844120399	},
{ 0.712294196124	,0.002835845083	},
{ 0.715125858385	,0.002827458481	},
{ 0.717949078573	,0.002818960922	},
{ 0.720763745899	,0.002810352738	},
{ 0.723569749908	,0.002801634269	},
{ 0.726366980486	,0.002792805857	},
{ 0.729155327861	,0.002783867847	},
{ 0.731934682614	,0.002774820590	},
{ 0.734704935673	,0.002765664442	},
{ 0.737465978330	,0.002756399762	},
{ 0.740217702232	,0.002747026913	},
{ 0.742959999395	,0.002737546263	},
{ 0.745692762206	,0.002727958184	},
{ 0.748415883423	,0.002718263053	},
{ 0.751129256185	,0.002708461250	},
{ 0.753832774012	,0.002698553159	},
{ 0.756526330811	,0.002688539169	},
{ 0.759209820880	,0.002678419674	},
{ 0.761883138914	,0.002668195071	},
{ 0.764546180003	,0.002657865760	},
{ 0.767198839644	,0.002647432146	},
{ 0.769841013740	,0.002636894641	},
{ 0.772472598605	,0.002626253656	},
{ 0.775093490969	,0.002615509610	},
{ 0.777703587983	,0.002604662923	},
{ 0.780302787219	,0.002593714023	},
{ 0.782890986678	,0.002582663338	},
{ 0.785468084793	,0.002571511302	},
{ 0.788033980433	,0.002560258353	},
{ 0.790588572905	,0.002548904931	},
{ 0.793131761960	,0.002537451484	},
{ 0.795663447798	,0.002525898460	},
{ 0.798183531069	,0.002514246312	},
{ 0.800691912878	,0.002502495499	},
{ 0.803188494791	,0.002490646480	},
{ 0.805673178835	,0.002478699721	},
{ 0.808145867506	,0.002466655691	},
{ 0.810606463768	,0.002454514862	},
{ 0.813054871063	,0.002442277711	},
{ 0.815490993307	,0.002429944718	},
{ 0.817914734903	,0.002417516367	},
{ 0.820326000736	,0.002404993145	},
{ 0.822724696182	,0.002392375545	},
{ 0.825110727110	,0.002379664061	},
{ 0.827483999887	,0.002366859191	},
{ 0.829844421380	,0.002353961440	},
{ 0.832191898959	,0.002340971311	},
{ 0.834526340504	,0.002327889317	},
{ 0.836847654406	,0.002314715968	},
{ 0.839155749571	,0.002301451784	},
{ 0.841450535422	,0.002288097284	},
{ 0.843731921908	,0.002274652991	},
{ 0.845999819500	,0.002261119435	},
{ 0.848254139201	,0.002247497145	},
{ 0.850494792546	,0.002233786657	},
{ 0.852721691606	,0.002219988508	},
{ 0.854934748992	,0.002206103240	},
{ 0.857133877858	,0.002192131397	},
{ 0.859318991905	,0.002178073529	},
{ 0.861490005383	,0.002163930186	},
{ 0.863646833096	,0.002149701923	},
{ 0.865789390406	,0.002135389300	},
{ 0.867917593233	,0.002120992877	},
{ 0.870031358061	,0.002106513220	},
{ 0.872130601941	,0.002091950896	},
{ 0.874215242493	,0.002077306477	},
{ 0.876285197910	,0.002062580538	},
{ 0.878340386963	,0.002047773657	},
{ 0.880380729001	,0.002032886414	},
{ 0.882406143956	,0.002017919394	},
{ 0.884416552344	,0.002002873184	},
{ 0.886411875274	,0.001987748374	},
{ 0.888392034443	,0.001972545558	},
{ 0.890356952146	,0.001957265333	},
{ 0.892306551273	,0.001941908298	},
{ 0.894240755319	,0.001926475056	},
{ 0.896159488379	,0.001910966212	},
{ 0.898062675158	,0.001895382375	},
{ 0.899950240970	,0.001879724156	},
{ 0.901822111743	,0.001863992170	},
{ 0.903678214020	,0.001848187034	},
{ 0.905518474962	,0.001832309369	},
{ 0.907342822353	,0.001816359796	},
{ 0.909151184602	,0.001800338943	},
{ 0.910943490743	,0.001784247438	},
{ 0.912719670443	,0.001768085911	},
{ 0.914479653998	,0.001751854998	},
{ 0.916223372344	,0.001735555335	},
{ 0.917950757053	,0.001719187562	},
{ 0.919661740337	,0.001702752321	},
{ 0.921356255054	,0.001686250256	},
{ 0.923034234705	,0.001669682016	},
{ 0.924695613445	,0.001653048251	},
{ 0.926340326075	,0.001636349612	},
{ 0.927968308053	,0.001619586756	},
{ 0.929579495493	,0.001602760339	},
{ 0.931173825168	,0.001585871023	},
{ 0.932751234512	,0.001568919470	},
{ 0.934311661625	,0.001551906344	},
{ 0.935855045271	,0.001534832314	},
{ 0.937381324884	,0.001517698050	},
{ 0.938890440569	,0.001500504223	},
{ 0.940382333104	,0.001483251508	},
{ 0.941856943944	,0.001465940582	},
{ 0.943314215222	,0.001448572125	},
{ 0.944754089750	,0.001431146817	},
{ 0.946176511025	,0.001413665342	},
{ 0.947581423227	,0.001396128387	},
{ 0.948968771223	,0.001378536638	},
{ 0.950338500571	,0.001360890787	},
{ 0.951690557519	,0.001343191525	},
{ 0.953024889010	,0.001325439548	},
{ 0.954341442680	,0.001307635550	},
{ 0.955640166865	,0.001289780231	},
{ 0.956921010600	,0.001271874291	},
{ 0.958183923621	,0.001253918433	},
{ 0.959428856368	,0.001235913360	},
{ 0.960655759987	,0.001217859779	},
{ 0.961864586332	,0.001199758399	},
{ 0.963055287965	,0.001181609928	},
{ 0.964227818159	,0.001163415080	},
{ 0.965382130903	,0.001145174566	},
{ 0.966518180897	,0.001126889104	},
{ 0.967635923561	,0.001108559409	},
{ 0.968735315031	,0.001090186202	},
{ 0.969816312165	,0.001071770201	},
{ 0.970878872541	,0.001053312130	},
{ 0.971922954463	,0.001034812711	},
{ 0.972948516957	,0.001016272671	},
{ 0.973955519778	,0.000997692736	},
{ 0.974943923409	,0.000979073635	},
{ 0.975913689063	,0.000960416096	},
{ 0.976864778682	,0.000941720852	},
{ 0.977797154946	,0.000922988635	},
{ 0.978710781263	,0.000904220180	},
{ 0.979605621782	,0.000885416220	},
{ 0.980481641387	,0.000866577494	},
{ 0.981338805701	,0.000847704739	},
{ 0.982177081086	,0.000828798694	},
{ 0.982996434646	,0.000809860100	},
{ 0.983796834228	,0.000790889696	},
{ 0.984578248423	,0.000771888228	},
{ 0.985340646565	,0.000752856436	},
{ 0.986083998736	,0.000733795067	},
{ 0.986808275766	,0.000714704865	},
{ 0.987513449231	,0.000695586576	},
{ 0.988199491459	,0.000676440947	},
{ 0.988866375529	,0.000657268727	},
{ 0.989514075269	,0.000638070662	},
{ 0.990142565263	,0.000618847501	},
{ 0.990751820847	,0.000599599994	},
{ 0.991341818113	,0.000580328890	},
{ 0.991912533906	,0.000561034938	},
{ 0.992463945832	,0.000541718887	},
{ 0.992996032252	,0.000522381486	},
{ 0.993508772284	,0.000503023484	},
{ 0.994002145809	,0.000483645627	},
{ 0.994476133464	,0.000464248662	},
{ 0.994930716649	,0.000444833334	},
{ 0.995365877526	,0.000425400384	},
{ 0.995781599018	,0.000405950551	},
{ 0.996177864811	,0.000386484570	},
{ 0.996554659354	,0.000367003170	},
{ 0.996911967861	,0.000347507074	},
{ 0.997249776311	,0.000327996994	},
{ 0.997568071449	,0.000308473631	},
{ 0.997866840782	,0.000288937666	},
{ 0.998146072588	,0.000269389759	},
{ 0.998405755909	,0.000249830537	},
{ 0.998645880557	,0.000230260577	},
{ 0.998866437109	,0.000210680389	},
{ 0.999067416912	,0.000191090376	},
{ 0.999248812084	,0.000171490778	},
{ 0.999410615512	,0.000151881564	},
{ 0.999552820859	,0.000132262232	},
{ 0.999675422566	,0.000112631414	},
{ 0.999778415870	,0.000092985976	},
{ 0.999861796844	,0.000073318750	},
{ 0.999925562565	,0.000053611617	},
{ 0.999969712008	,0.000033807697	},
{ 0.999994255864	,0.000013637844	},
};

double ICM_Integrator::GaussLegendreCoeff_901[901][2] = { 
{ 0.000001777607	,0.000004220433	},
{ 0.000009373117	,0.000010462411	},
{ 0.000023036121	,0.000016591434	},
{ 0.000042770299	,0.000022690957	},
{ 0.000068575869	,0.000028778747	},
{ 0.000100452624	,0.000034860577	},
{ 0.000138400213	,0.000040938828	},
{ 0.000182418191	,0.000047014634	},
{ 0.000232506029	,0.000053088584	},
{ 0.000288663123	,0.000059160997	},
{ 0.000350888793	,0.000065232046	},
{ 0.000419182284	,0.000071301823	},
{ 0.000493542768	,0.000077370365	},
{ 0.000573969342	,0.000083437679	},
{ 0.000660461030	,0.000089503751	},
{ 0.000753016782	,0.000095568549	},
{ 0.000851635473	,0.000101632033	},
{ 0.000956315907	,0.000107694157	},
{ 0.001067056812	,0.000113754865	},
{ 0.001183856843	,0.000119814102	},
{ 0.001306714581	,0.000125871806	},
{ 0.001435628536	,0.000131927914	},
{ 0.001570597141	,0.000137982362	},
{ 0.001711618758	,0.000144035084	},
{ 0.001858691673	,0.000150086011	},
{ 0.002011814102	,0.000156135077	},
{ 0.002170984183	,0.000162182211	},
{ 0.002336199984	,0.000168227345	},
{ 0.002507459500	,0.000174270408	},
{ 0.002684760649	,0.000180311328	},
{ 0.002868101279	,0.000186350037	},
{ 0.003057479164	,0.000192386462	},
{ 0.003252892003	,0.000198420531	},
{ 0.003454337423	,0.000204452174	},
{ 0.003661812978	,0.000210481319	},
{ 0.003875316149	,0.000216507893	},
{ 0.004094844343	,0.000222531824	},
{ 0.004320394892	,0.000228553041	},
{ 0.004551965060	,0.000234571471	},
{ 0.004789552032	,0.000240587043	},
{ 0.005033152925	,0.000246599682	},
{ 0.005282764779	,0.000252609319	},
{ 0.005538384563	,0.000258615879	},
{ 0.005800009174	,0.000264619291	},
{ 0.006067635433	,0.000270619482	},
{ 0.006341260091	,0.000276616379	},
{ 0.006620879824	,0.000282609912	},
{ 0.006906491238	,0.000288600006	},
{ 0.007198090863	,0.000294586590	},
{ 0.007495675158	,0.000300569591	},
{ 0.007799240510	,0.000306548937	},
{ 0.008108783231	,0.000312524556	},
{ 0.008424299563	,0.000318496375	},
{ 0.008745785674	,0.000324464322	},
{ 0.009073237659	,0.000330428325	},
{ 0.009406651543	,0.000336388311	},
{ 0.009746023276	,0.000342344209	},
{ 0.010091348737	,0.000348295945	},
{ 0.010442623731	,0.000354243449	},
{ 0.010799843994	,0.000360186648	},
{ 0.011163005187	,0.000366125470	},
{ 0.011532102899	,0.000372059843	},
{ 0.011907132649	,0.000377989695	},
{ 0.012288089881	,0.000383914954	},
{ 0.012674969970	,0.000389835548	},
{ 0.013067768217	,0.000395751406	},
{ 0.013466479851	,0.000401662455	},
{ 0.013871100032	,0.000407568625	},
{ 0.014281623845	,0.000413469843	},
{ 0.014698046304	,0.000419366038	},
{ 0.015120362353	,0.000425257139	},
{ 0.015548566862	,0.000431143073	},
{ 0.015982654633	,0.000437023770	},
{ 0.016422620392	,0.000442899157	},
{ 0.016868458797	,0.000448769165	},
{ 0.017320164434	,0.000454633721	},
{ 0.017777731817	,0.000460492755	},
{ 0.018241155389	,0.000466346195	},
{ 0.018710429523	,0.000472193970	},
{ 0.019185548519	,0.000478036010	},
{ 0.019666506608	,0.000483872243	},
{ 0.020153297948	,0.000489702598	},
{ 0.020645916628	,0.000495527006	},
{ 0.021144356666	,0.000501345395	},
{ 0.021648612008	,0.000507157694	},
{ 0.022158676531	,0.000512963833	},
{ 0.022674544040	,0.000518763741	},
{ 0.023196208271	,0.000524557349	},
{ 0.023723662888	,0.000530344585	},
{ 0.024256901486	,0.000536125380	},
{ 0.024795917589	,0.000541899664	},
{ 0.025340704652	,0.000547667365	},
{ 0.025891256057	,0.000553428415	},
{ 0.026447565120	,0.000559182743	},
{ 0.027009625084	,0.000564930279	},
{ 0.027577429124	,0.000570670955	},
{ 0.028150970344	,0.000576404699	},
{ 0.028730241779	,0.000582131442	},
{ 0.029315236394	,0.000587851115	},
{ 0.029905947085	,0.000593563649	},
{ 0.030502366678	,0.000599268974	},
{ 0.031104487930	,0.000604967020	},
{ 0.031712303529	,0.000610657719	},
{ 0.032325806094	,0.000616341001	},
{ 0.032944988173	,0.000622016798	},
{ 0.033569842248	,0.000627685041	},
{ 0.034200360730	,0.000633345660	},
{ 0.034836535963	,0.000638998587	},
{ 0.035478360219	,0.000644643754	},
{ 0.036125825706	,0.000650281091	},
{ 0.036778924559	,0.000655910531	},
{ 0.037437648848	,0.000661532005	},
{ 0.038101990573	,0.000667145445	},
{ 0.038771941666	,0.000672750782	},
{ 0.039447493990	,0.000678347949	},
{ 0.040128639343	,0.000683936877	},
{ 0.040815369452	,0.000689517500	},
{ 0.041507675977	,0.000695089748	},
{ 0.042205550511	,0.000700653554	},
{ 0.042908984579	,0.000706208852	},
{ 0.043617969638	,0.000711755572	},
{ 0.044332497077	,0.000717293649	},
{ 0.045052558221	,0.000722823014	},
{ 0.045778144323	,0.000728343601	},
{ 0.046509246574	,0.000733855342	},
{ 0.047245856093	,0.000739358171	},
{ 0.047987963935	,0.000744852020	},
{ 0.048735561088	,0.000750336824	},
{ 0.049488638474	,0.000755812515	},
{ 0.050247186946	,0.000761279028	},
{ 0.051011197293	,0.000766736294	},
{ 0.051780660236	,0.000772184249	},
{ 0.052555566431	,0.000777622827	},
{ 0.053335906468	,0.000783051960	},
{ 0.054121670869	,0.000788471584	},
{ 0.054912850093	,0.000793881632	},
{ 0.055709434531	,0.000799282038	},
{ 0.056511414509	,0.000804672738	},
{ 0.057318780287	,0.000810053666	},
{ 0.058131522062	,0.000815424756	},
{ 0.058949629963	,0.000820785942	},
{ 0.059773094055	,0.000826137161	},
{ 0.060601904337	,0.000831478347	},
{ 0.061436050744	,0.000836809435	},
{ 0.062275523146	,0.000842130361	},
{ 0.063120311349	,0.000847441059	},
{ 0.063970405094	,0.000852741466	},
{ 0.064825794056	,0.000858031516	},
{ 0.065686467847	,0.000863311147	},
{ 0.066552416016	,0.000868580292	},
{ 0.067423628046	,0.000873838890	},
{ 0.068300093357	,0.000879086875	},
{ 0.069181801306	,0.000884324184	},
{ 0.070068741184	,0.000889550754	},
{ 0.070960902220	,0.000894766521	},
{ 0.071858273580	,0.000899971421	},
{ 0.072760844366	,0.000905165391	},
{ 0.073668603617	,0.000910348369	},
{ 0.074581540309	,0.000915520292	},
{ 0.075499643355	,0.000920681096	},
{ 0.076422901606	,0.000925830719	},
{ 0.077351303849	,0.000930969098	},
{ 0.078284838810	,0.000936096171	},
{ 0.079223495151	,0.000941211876	},
{ 0.080167261474	,0.000946316151	},
{ 0.081116126317	,0.000951408933	},
{ 0.082070078158	,0.000956490161	},
{ 0.083029105410	,0.000961559773	},
{ 0.083993196428	,0.000966617708	},
{ 0.084962339503	,0.000971663903	},
{ 0.085936522866	,0.000976698299	},
{ 0.086915734687	,0.000981720833	},
{ 0.087899963073	,0.000986731444	},
{ 0.088889196072	,0.000991730073	},
{ 0.089883421670	,0.000996716658	},
{ 0.090882627795	,0.001001691138	},
{ 0.091886802310	,0.001006653454	},
{ 0.092895933021	,0.001011603544	},
{ 0.093910007673	,0.001016541349	},
{ 0.094929013952	,0.001021466809	},
{ 0.095952939481	,0.001026379864	},
{ 0.096981771826	,0.001031280454	},
{ 0.098015498494	,0.001036168520	},
{ 0.099054106929	,0.001041044003	},
{ 0.100097584520	,0.001045906843	},
{ 0.101145918594	,0.001050756981	},
{ 0.102199096420	,0.001055594358	},
{ 0.103257105207	,0.001060418916	},
{ 0.104319932108	,0.001065230596	},
{ 0.105387564214	,0.001070029340	},
{ 0.106459988562	,0.001074815089	},
{ 0.107537192126	,0.001079587785	},
{ 0.108619161825	,0.001084347370	},
{ 0.109705884520	,0.001089093786	},
{ 0.110797347013	,0.001093826977	},
{ 0.111893536049	,0.001098546883	},
{ 0.112994438316	,0.001103253449	},
{ 0.114100040445	,0.001107946616	},
{ 0.115210329008	,0.001112626328	},
{ 0.116325290523	,0.001117292528	},
{ 0.117444911448	,0.001121945160	},
{ 0.118569178188	,0.001126584166	},
{ 0.119698077088	,0.001131209491	},
{ 0.120831594440	,0.001135821078	},
{ 0.121969716477	,0.001140418871	},
{ 0.123112429379	,0.001145002815	},
{ 0.124259719267	,0.001149572853	},
{ 0.125411572209	,0.001154128931	},
{ 0.126567974217	,0.001158670993	},
{ 0.127728911246	,0.001163198984	},
{ 0.128894369199	,0.001167712848	},
{ 0.130064333923	,0.001172212532	},
{ 0.131238791207	,0.001176697980	},
{ 0.132417726791	,0.001181169138	},
{ 0.133601126356	,0.001185625951	},
{ 0.134788975532	,0.001190068366	},
{ 0.135981259892	,0.001194496328	},
{ 0.137177964958	,0.001198909785	},
{ 0.138379076197	,0.001203308681	},
{ 0.139584579021	,0.001207692964	},
{ 0.140794458792	,0.001212062581	},
{ 0.142008700816	,0.001216417478	},
{ 0.143227290347	,0.001220757602	},
{ 0.144450212587	,0.001225082901	},
{ 0.145677452684	,0.001229393323	},
{ 0.146908995734	,0.001233688815	},
{ 0.148144826781	,0.001237969324	},
{ 0.149384930818	,0.001242234799	},
{ 0.150629292783	,0.001246485189	},
{ 0.151877897566	,0.001250720440	},
{ 0.153130730003	,0.001254940503	},
{ 0.154387774879	,0.001259145326	},
{ 0.155649016929	,0.001263334857	},
{ 0.156914440836	,0.001267509045	},
{ 0.158184031232	,0.001271667841	},
{ 0.159457772700	,0.001275811194	},
{ 0.160735649770	,0.001279939053	},
{ 0.162017646925	,0.001284051367	},
{ 0.163303748594	,0.001288148089	},
{ 0.164593939160	,0.001292229166	},
{ 0.165888202955	,0.001296294551	},
{ 0.167186524260	,0.001300344193	},
{ 0.168488887308	,0.001304378043	},
{ 0.169795276284	,0.001308396052	},
{ 0.171105675322	,0.001312398173	},
{ 0.172420068509	,0.001316384355	},
{ 0.173738439882	,0.001320354551	},
{ 0.175060773431	,0.001324308712	},
{ 0.176387053097	,0.001328246790	},
{ 0.177717262774	,0.001332168738	},
{ 0.179051386308	,0.001336074507	},
{ 0.180389407496	,0.001339964052	},
{ 0.181731310089	,0.001343837323	},
{ 0.183077077792	,0.001347694274	},
{ 0.184426694260	,0.001351534859	},
{ 0.185780143105	,0.001355359031	},
{ 0.187137407889	,0.001359166742	},
{ 0.188498472129	,0.001362957948	},
{ 0.189863319297	,0.001366732602	},
{ 0.191231932817	,0.001370490657	},
{ 0.192604296070	,0.001374232070	},
{ 0.193980392388	,0.001377956793	},
{ 0.195360205060	,0.001381664782	},
{ 0.196743717330	,0.001385355992	},
{ 0.198130912396	,0.001389030378	},
{ 0.199521773412	,0.001392687895	},
{ 0.200916283486	,0.001396328499	},
{ 0.202314425683	,0.001399952146	},
{ 0.203716183025	,0.001403558791	},
{ 0.205121538488	,0.001407148391	},
{ 0.206530475005	,0.001410720903	},
{ 0.207942975466	,0.001414276283	},
{ 0.209359022718	,0.001417814487	},
{ 0.210778599562	,0.001421335473	},
{ 0.212201688761	,0.001424839198	},
{ 0.213628273031	,0.001428325620	},
{ 0.215058335049	,0.001431794695	},
{ 0.216491857446	,0.001435246383	},
{ 0.217928822814	,0.001438680641	},
{ 0.219369213703	,0.001442097427	},
{ 0.220813012620	,0.001445496700	},
{ 0.222260202031	,0.001448878419	},
{ 0.223710764362	,0.001452242542	},
{ 0.225164681996	,0.001455589028	},
{ 0.226621937277	,0.001458917838	},
{ 0.228082512507	,0.001462228931	},
{ 0.229546389950	,0.001465522266	},
{ 0.231013551828	,0.001468797803	},
{ 0.232483980322	,0.001472055503	},
{ 0.233957657577	,0.001475295326	},
{ 0.235434565695	,0.001478517232	},
{ 0.236914686741	,0.001481721184	},
{ 0.238398002740	,0.001484907141	},
{ 0.239884495678	,0.001488075065	},
{ 0.241374147502	,0.001491224917	},
{ 0.242866940124	,0.001494356660	},
{ 0.244362855412	,0.001497470255	},
{ 0.245861875202	,0.001500565664	},
{ 0.247363981288	,0.001503642850	},
{ 0.248869155430	,0.001506701776	},
{ 0.250377379347	,0.001509742404	},
{ 0.251888634723	,0.001512764698	},
{ 0.253402903206	,0.001515768620	},
{ 0.254920166406	,0.001518754134	},
{ 0.256440405898	,0.001521721204	},
{ 0.257963603218	,0.001524669794	},
{ 0.259489739870	,0.001527599869	},
{ 0.261018797320	,0.001530511392	},
{ 0.262550756997	,0.001533404328	},
{ 0.264085600299	,0.001536278642	},
{ 0.265623308585	,0.001539134299	},
{ 0.267163863182	,0.001541971265	},
{ 0.268707245380	,0.001544789504	},
{ 0.270253436437	,0.001547588984	},
{ 0.271802417576	,0.001550369669	},
{ 0.273354169984	,0.001553131526	},
{ 0.274908674818	,0.001555874522	},
{ 0.276465913200	,0.001558598623	},
{ 0.278025866217	,0.001561303795	},
{ 0.279588514927	,0.001563990008	},
{ 0.281153840350	,0.001566657226	},
{ 0.282721823479	,0.001569305419	},
{ 0.284292445271	,0.001571934554	},
{ 0.285865686652	,0.001574544599	},
{ 0.287441528517	,0.001577135523	},
{ 0.289019951727	,0.001579707294	},
{ 0.290600937116	,0.001582259880	},
{ 0.292184465482	,0.001584793251	},
{ 0.293770517596	,0.001587307376	},
{ 0.295359074195	,0.001589802224	},
{ 0.296950115989	,0.001592277766	},
{ 0.298543623655	,0.001594733970	},
{ 0.300139577842	,0.001597170808	},
{ 0.301737959167	,0.001599588250	},
{ 0.303338748221	,0.001601986265	},
{ 0.304941925562	,0.001604364826	},
{ 0.306547471721	,0.001606723904	},
{ 0.308155367202	,0.001609063469	},
{ 0.309765592475	,0.001611383493	},
{ 0.311378127988	,0.001613683948	},
{ 0.312992954157	,0.001615964806	},
{ 0.314610051372	,0.001618226040	},
{ 0.316229399993	,0.001620467622	},
{ 0.317850980356	,0.001622689524	},
{ 0.319474772768	,0.001624891720	},
{ 0.321100757509	,0.001627074183	},
{ 0.322728914832	,0.001629236887	},
{ 0.324359224966	,0.001631379805	},
{ 0.325991668111	,0.001633502911	},
{ 0.327626224443	,0.001635606180	},
{ 0.329262874112	,0.001637689585	},
{ 0.330901597241	,0.001639753102	},
{ 0.332542373930	,0.001641796706	},
{ 0.334185184253	,0.001643820371	},
{ 0.335830008259	,0.001645824073	},
{ 0.337476825974	,0.001647807789	},
{ 0.339125617398	,0.001649771493	},
{ 0.340776362507	,0.001651715161	},
{ 0.342429041255	,0.001653638771	},
{ 0.344083633572	,0.001655542299	},
{ 0.345740119364	,0.001657425722	},
{ 0.347398478514	,0.001659289017	},
{ 0.349058690883	,0.001661132161	},
{ 0.350720736309	,0.001662955131	},
{ 0.352384594608	,0.001664757907	},
{ 0.354050245573	,0.001666540466	},
{ 0.355717668977	,0.001668302785	},
{ 0.357386844570	,0.001670044845	},
{ 0.359057752082	,0.001671766623	},
{ 0.360730371220	,0.001673468099	},
{ 0.362404681672	,0.001675149252	},
{ 0.364080663106	,0.001676810061	},
{ 0.365758295166	,0.001678450508	},
{ 0.367437557481	,0.001680070570	},
{ 0.369118429657	,0.001681670230	},
{ 0.370800891281	,0.001683249467	},
{ 0.372484921920	,0.001684808263	},
{ 0.374170501125	,0.001686346598	},
{ 0.375857608424	,0.001687864453	},
{ 0.377546223330	,0.001689361811	},
{ 0.379236325335	,0.001690838653	},
{ 0.380927893915	,0.001692294961	},
{ 0.382620908527	,0.001693730717	},
{ 0.384315348610	,0.001695145905	},
{ 0.386011193588	,0.001696540506	},
{ 0.387708422865	,0.001697914504	},
{ 0.389407015830	,0.001699267883	},
{ 0.391106951855	,0.001700600625	},
{ 0.392808210296	,0.001701912714	},
{ 0.394510770492	,0.001703204136	},
{ 0.396214611767	,0.001704474873	},
{ 0.397919713429	,0.001705724911	},
{ 0.399626054772	,0.001706954235	},
{ 0.401333615074	,0.001708162828	},
{ 0.403042373596	,0.001709350678	},
{ 0.404752309589	,0.001710517769	},
{ 0.406463402286	,0.001711664087	},
{ 0.408175630907	,0.001712789618	},
{ 0.409888974658	,0.001713894349	},
{ 0.411603412734	,0.001714978265	},
{ 0.413318924313	,0.001716041355	},
{ 0.415035488561	,0.001717083605	},
{ 0.416753084633	,0.001718105003	},
{ 0.418471691669	,0.001719105535	},
{ 0.420191288800	,0.001720085190	},
{ 0.421911855140	,0.001721043957	},
{ 0.423633369797	,0.001721981822	},
{ 0.425355811863	,0.001722898776	},
{ 0.427079160420	,0.001723794806	},
{ 0.428803394541	,0.001724669902	},
{ 0.430528493285	,0.001725524054	},
{ 0.432254435703	,0.001726357250	},
{ 0.433981200835	,0.001727169481	},
{ 0.435708767711	,0.001727960737	},
{ 0.437437115350	,0.001728731009	},
{ 0.439166222763	,0.001729480286	},
{ 0.440896068952	,0.001730208561	},
{ 0.442626632909	,0.001730915823	},
{ 0.444357893618	,0.001731602065	},
{ 0.446089830055	,0.001732267278	},
{ 0.447822421186	,0.001732911454	},
{ 0.449555645970	,0.001733534585	},
{ 0.451289483359	,0.001734136663	},
{ 0.453023912296	,0.001734717683	},
{ 0.454758911720	,0.001735277635	},
{ 0.456494460558	,0.001735816514	},
{ 0.458230537736	,0.001736334312	},
{ 0.459967122169	,0.001736831025	},
{ 0.461704192768	,0.001737306645	},
{ 0.463441728437	,0.001737761167	},
{ 0.465179708077	,0.001738194585	},
{ 0.466918110580	,0.001738606894	},
{ 0.468656914836	,0.001738998089	},
{ 0.470396099727	,0.001739368165	},
{ 0.472135644133	,0.001739717119	},
{ 0.473875526928	,0.001740044944	},
{ 0.475615726983	,0.001740351639	},
{ 0.477356223165	,0.001740637198	},
{ 0.479096994337	,0.001740901619	},
{ 0.480838019359	,0.001741144898	},
{ 0.482579277087	,0.001741367032	},
{ 0.484320746375	,0.001741568018	},
{ 0.486062406075	,0.001741747855	},
{ 0.487804235035	,0.001741906539	},
{ 0.489546212103	,0.001742044070	},
{ 0.491288316124	,0.001742160444	},
{ 0.493030525940	,0.001742255662	},
{ 0.494772820395	,0.001742329721	},
{ 0.496515178330	,0.001742382621	},
{ 0.498257578585	,0.001742414362	},
{ 0.500000000000	,0.001742424942	},
{ 0.501742421415	,0.001742414362	},
{ 0.503484821670	,0.001742382621	},
{ 0.505227179605	,0.001742329721	},
{ 0.506969474060	,0.001742255662	},
{ 0.508711683876	,0.001742160444	},
{ 0.510453787897	,0.001742044070	},
{ 0.512195764965	,0.001741906539	},
{ 0.513937593925	,0.001741747855	},
{ 0.515679253625	,0.001741568018	},
{ 0.517420722913	,0.001741367032	},
{ 0.519161980641	,0.001741144898	},
{ 0.520903005663	,0.001740901619	},
{ 0.522643776835	,0.001740637198	},
{ 0.524384273017	,0.001740351639	},
{ 0.526124473072	,0.001740044944	},
{ 0.527864355867	,0.001739717119	},
{ 0.529603900273	,0.001739368165	},
{ 0.531343085164	,0.001738998089	},
{ 0.533081889420	,0.001738606894	},
{ 0.534820291923	,0.001738194585	},
{ 0.536558271563	,0.001737761167	},
{ 0.538295807232	,0.001737306645	},
{ 0.540032877831	,0.001736831025	},
{ 0.541769462264	,0.001736334312	},
{ 0.543505539442	,0.001735816514	},
{ 0.545241088280	,0.001735277635	},
{ 0.546976087704	,0.001734717683	},
{ 0.548710516641	,0.001734136663	},
{ 0.550444354030	,0.001733534585	},
{ 0.552177578814	,0.001732911454	},
{ 0.553910169945	,0.001732267278	},
{ 0.555642106382	,0.001731602065	},
{ 0.557373367091	,0.001730915823	},
{ 0.559103931048	,0.001730208561	},
{ 0.560833777237	,0.001729480286	},
{ 0.562562884650	,0.001728731009	},
{ 0.564291232289	,0.001727960737	},
{ 0.566018799165	,0.001727169481	},
{ 0.567745564297	,0.001726357250	},
{ 0.569471506715	,0.001725524054	},
{ 0.571196605459	,0.001724669902	},
{ 0.572920839580	,0.001723794806	},
{ 0.574644188137	,0.001722898776	},
{ 0.576366630203	,0.001721981822	},
{ 0.578088144860	,0.001721043957	},
{ 0.579808711200	,0.001720085190	},
{ 0.581528308331	,0.001719105535	},
{ 0.583246915367	,0.001718105003	},
{ 0.584964511439	,0.001717083605	},
{ 0.586681075687	,0.001716041355	},
{ 0.588396587266	,0.001714978265	},
{ 0.590111025342	,0.001713894349	},
{ 0.591824369093	,0.001712789618	},
{ 0.593536597714	,0.001711664087	},
{ 0.595247690411	,0.001710517769	},
{ 0.596957626404	,0.001709350678	},
{ 0.598666384926	,0.001708162828	},
{ 0.600373945228	,0.001706954235	},
{ 0.602080286571	,0.001705724911	},
{ 0.603785388233	,0.001704474873	},
{ 0.605489229508	,0.001703204136	},
{ 0.607191789704	,0.001701912714	},
{ 0.608893048145	,0.001700600625	},
{ 0.610592984170	,0.001699267883	},
{ 0.612291577135	,0.001697914504	},
{ 0.613988806412	,0.001696540506	},
{ 0.615684651390	,0.001695145905	},
{ 0.617379091473	,0.001693730717	},
{ 0.619072106085	,0.001692294961	},
{ 0.620763674665	,0.001690838653	},
{ 0.622453776670	,0.001689361811	},
{ 0.624142391576	,0.001687864453	},
{ 0.625829498875	,0.001686346598	},
{ 0.627515078080	,0.001684808263	},
{ 0.629199108719	,0.001683249467	},
{ 0.630881570343	,0.001681670230	},
{ 0.632562442519	,0.001680070570	},
{ 0.634241704834	,0.001678450508	},
{ 0.635919336894	,0.001676810061	},
{ 0.637595318328	,0.001675149252	},
{ 0.639269628780	,0.001673468099	},
{ 0.640942247918	,0.001671766623	},
{ 0.642613155430	,0.001670044845	},
{ 0.644282331023	,0.001668302785	},
{ 0.645949754427	,0.001666540466	},
{ 0.647615405392	,0.001664757907	},
{ 0.649279263691	,0.001662955131	},
{ 0.650941309117	,0.001661132161	},
{ 0.652601521486	,0.001659289017	},
{ 0.654259880636	,0.001657425722	},
{ 0.655916366428	,0.001655542299	},
{ 0.657570958745	,0.001653638771	},
{ 0.659223637493	,0.001651715161	},
{ 0.660874382602	,0.001649771493	},
{ 0.662523174026	,0.001647807789	},
{ 0.664169991741	,0.001645824073	},
{ 0.665814815747	,0.001643820371	},
{ 0.667457626070	,0.001641796706	},
{ 0.669098402759	,0.001639753102	},
{ 0.670737125888	,0.001637689585	},
{ 0.672373775557	,0.001635606180	},
{ 0.674008331889	,0.001633502911	},
{ 0.675640775034	,0.001631379805	},
{ 0.677271085168	,0.001629236887	},
{ 0.678899242491	,0.001627074183	},
{ 0.680525227232	,0.001624891720	},
{ 0.682149019644	,0.001622689524	},
{ 0.683770600007	,0.001620467622	},
{ 0.685389948628	,0.001618226040	},
{ 0.687007045843	,0.001615964806	},
{ 0.688621872012	,0.001613683948	},
{ 0.690234407525	,0.001611383493	},
{ 0.691844632798	,0.001609063469	},
{ 0.693452528279	,0.001606723904	},
{ 0.695058074438	,0.001604364826	},
{ 0.696661251779	,0.001601986265	},
{ 0.698262040833	,0.001599588250	},
{ 0.699860422158	,0.001597170808	},
{ 0.701456376345	,0.001594733970	},
{ 0.703049884011	,0.001592277766	},
{ 0.704640925805	,0.001589802224	},
{ 0.706229482404	,0.001587307376	},
{ 0.707815534518	,0.001584793251	},
{ 0.709399062884	,0.001582259880	},
{ 0.710980048273	,0.001579707294	},
{ 0.712558471483	,0.001577135523	},
{ 0.714134313348	,0.001574544599	},
{ 0.715707554729	,0.001571934554	},
{ 0.717278176521	,0.001569305419	},
{ 0.718846159650	,0.001566657226	},
{ 0.720411485073	,0.001563990008	},
{ 0.721974133783	,0.001561303795	},
{ 0.723534086800	,0.001558598623	},
{ 0.725091325182	,0.001555874522	},
{ 0.726645830016	,0.001553131526	},
{ 0.728197582424	,0.001550369669	},
{ 0.729746563563	,0.001547588984	},
{ 0.731292754620	,0.001544789504	},
{ 0.732836136818	,0.001541971265	},
{ 0.734376691415	,0.001539134299	},
{ 0.735914399701	,0.001536278642	},
{ 0.737449243003	,0.001533404328	},
{ 0.738981202680	,0.001530511392	},
{ 0.740510260130	,0.001527599869	},
{ 0.742036396782	,0.001524669794	},
{ 0.743559594102	,0.001521721204	},
{ 0.745079833594	,0.001518754134	},
{ 0.746597096794	,0.001515768620	},
{ 0.748111365277	,0.001512764698	},
{ 0.749622620653	,0.001509742404	},
{ 0.751130844570	,0.001506701776	},
{ 0.752636018712	,0.001503642850	},
{ 0.754138124798	,0.001500565664	},
{ 0.755637144588	,0.001497470255	},
{ 0.757133059876	,0.001494356660	},
{ 0.758625852498	,0.001491224917	},
{ 0.760115504322	,0.001488075065	},
{ 0.761601997260	,0.001484907141	},
{ 0.763085313259	,0.001481721184	},
{ 0.764565434305	,0.001478517232	},
{ 0.766042342423	,0.001475295326	},
{ 0.767516019678	,0.001472055503	},
{ 0.768986448172	,0.001468797803	},
{ 0.770453610050	,0.001465522266	},
{ 0.771917487493	,0.001462228931	},
{ 0.773378062723	,0.001458917838	},
{ 0.774835318004	,0.001455589028	},
{ 0.776289235638	,0.001452242542	},
{ 0.777739797969	,0.001448878419	},
{ 0.779186987380	,0.001445496700	},
{ 0.780630786297	,0.001442097427	},
{ 0.782071177186	,0.001438680641	},
{ 0.783508142554	,0.001435246383	},
{ 0.784941664951	,0.001431794695	},
{ 0.786371726969	,0.001428325620	},
{ 0.787798311239	,0.001424839198	},
{ 0.789221400438	,0.001421335473	},
{ 0.790640977282	,0.001417814487	},
{ 0.792057024534	,0.001414276283	},
{ 0.793469524995	,0.001410720903	},
{ 0.794878461512	,0.001407148391	},
{ 0.796283816975	,0.001403558791	},
{ 0.797685574317	,0.001399952146	},
{ 0.799083716514	,0.001396328499	},
{ 0.800478226588	,0.001392687895	},
{ 0.801869087604	,0.001389030378	},
{ 0.803256282670	,0.001385355992	},
{ 0.804639794940	,0.001381664782	},
{ 0.806019607612	,0.001377956793	},
{ 0.807395703930	,0.001374232070	},
{ 0.808768067183	,0.001370490657	},
{ 0.810136680703	,0.001366732602	},
{ 0.811501527871	,0.001362957948	},
{ 0.812862592111	,0.001359166742	},
{ 0.814219856895	,0.001355359031	},
{ 0.815573305740	,0.001351534859	},
{ 0.816922922208	,0.001347694274	},
{ 0.818268689911	,0.001343837323	},
{ 0.819610592504	,0.001339964052	},
{ 0.820948613692	,0.001336074507	},
{ 0.822282737226	,0.001332168738	},
{ 0.823612946903	,0.001328246790	},
{ 0.824939226569	,0.001324308712	},
{ 0.826261560118	,0.001320354551	},
{ 0.827579931491	,0.001316384355	},
{ 0.828894324678	,0.001312398173	},
{ 0.830204723716	,0.001308396052	},
{ 0.831511112692	,0.001304378043	},
{ 0.832813475740	,0.001300344193	},
{ 0.834111797045	,0.001296294551	},
{ 0.835406060840	,0.001292229166	},
{ 0.836696251406	,0.001288148089	},
{ 0.837982353075	,0.001284051367	},
{ 0.839264350230	,0.001279939053	},
{ 0.840542227300	,0.001275811194	},
{ 0.841815968768	,0.001271667841	},
{ 0.843085559164	,0.001267509045	},
{ 0.844350983071	,0.001263334857	},
{ 0.845612225121	,0.001259145326	},
{ 0.846869269997	,0.001254940503	},
{ 0.848122102434	,0.001250720440	},
{ 0.849370707217	,0.001246485189	},
{ 0.850615069182	,0.001242234799	},
{ 0.851855173219	,0.001237969324	},
{ 0.853091004266	,0.001233688815	},
{ 0.854322547316	,0.001229393323	},
{ 0.855549787413	,0.001225082901	},
{ 0.856772709653	,0.001220757602	},
{ 0.857991299184	,0.001216417478	},
{ 0.859205541208	,0.001212062581	},
{ 0.860415420979	,0.001207692964	},
{ 0.861620923803	,0.001203308681	},
{ 0.862822035042	,0.001198909785	},
{ 0.864018740108	,0.001194496328	},
{ 0.865211024468	,0.001190068366	},
{ 0.866398873644	,0.001185625951	},
{ 0.867582273209	,0.001181169138	},
{ 0.868761208793	,0.001176697980	},
{ 0.869935666077	,0.001172212532	},
{ 0.871105630801	,0.001167712848	},
{ 0.872271088754	,0.001163198984	},
{ 0.873432025783	,0.001158670993	},
{ 0.874588427791	,0.001154128931	},
{ 0.875740280733	,0.001149572853	},
{ 0.876887570621	,0.001145002815	},
{ 0.878030283523	,0.001140418871	},
{ 0.879168405560	,0.001135821078	},
{ 0.880301922912	,0.001131209491	},
{ 0.881430821812	,0.001126584166	},
{ 0.882555088552	,0.001121945160	},
{ 0.883674709477	,0.001117292528	},
{ 0.884789670992	,0.001112626328	},
{ 0.885899959555	,0.001107946616	},
{ 0.887005561684	,0.001103253449	},
{ 0.888106463951	,0.001098546883	},
{ 0.889202652987	,0.001093826977	},
{ 0.890294115480	,0.001089093786	},
{ 0.891380838175	,0.001084347370	},
{ 0.892462807874	,0.001079587785	},
{ 0.893540011438	,0.001074815089	},
{ 0.894612435786	,0.001070029340	},
{ 0.895680067892	,0.001065230596	},
{ 0.896742894793	,0.001060418916	},
{ 0.897800903580	,0.001055594358	},
{ 0.898854081406	,0.001050756981	},
{ 0.899902415480	,0.001045906843	},
{ 0.900945893071	,0.001041044003	},
{ 0.901984501506	,0.001036168520	},
{ 0.903018228174	,0.001031280454	},
{ 0.904047060519	,0.001026379864	},
{ 0.905070986048	,0.001021466809	},
{ 0.906089992327	,0.001016541349	},
{ 0.907104066979	,0.001011603544	},
{ 0.908113197690	,0.001006653454	},
{ 0.909117372205	,0.001001691138	},
{ 0.910116578330	,0.000996716658	},
{ 0.911110803928	,0.000991730073	},
{ 0.912100036927	,0.000986731444	},
{ 0.913084265313	,0.000981720833	},
{ 0.914063477134	,0.000976698299	},
{ 0.915037660497	,0.000971663903	},
{ 0.916006803572	,0.000966617708	},
{ 0.916970894590	,0.000961559773	},
{ 0.917929921842	,0.000956490161	},
{ 0.918883873683	,0.000951408933	},
{ 0.919832738526	,0.000946316151	},
{ 0.920776504849	,0.000941211876	},
{ 0.921715161190	,0.000936096171	},
{ 0.922648696151	,0.000930969098	},
{ 0.923577098394	,0.000925830719	},
{ 0.924500356645	,0.000920681096	},
{ 0.925418459691	,0.000915520292	},
{ 0.926331396383	,0.000910348369	},
{ 0.927239155634	,0.000905165391	},
{ 0.928141726420	,0.000899971421	},
{ 0.929039097780	,0.000894766521	},
{ 0.929931258816	,0.000889550754	},
{ 0.930818198694	,0.000884324184	},
{ 0.931699906643	,0.000879086875	},
{ 0.932576371954	,0.000873838890	},
{ 0.933447583984	,0.000868580292	},
{ 0.934313532153	,0.000863311147	},
{ 0.935174205944	,0.000858031516	},
{ 0.936029594906	,0.000852741466	},
{ 0.936879688651	,0.000847441059	},
{ 0.937724476854	,0.000842130361	},
{ 0.938563949256	,0.000836809435	},
{ 0.939398095663	,0.000831478347	},
{ 0.940226905945	,0.000826137161	},
{ 0.941050370037	,0.000820785942	},
{ 0.941868477938	,0.000815424756	},
{ 0.942681219713	,0.000810053666	},
{ 0.943488585491	,0.000804672738	},
{ 0.944290565469	,0.000799282038	},
{ 0.945087149907	,0.000793881632	},
{ 0.945878329131	,0.000788471584	},
{ 0.946664093532	,0.000783051960	},
{ 0.947444433569	,0.000777622827	},
{ 0.948219339764	,0.000772184249	},
{ 0.948988802707	,0.000766736294	},
{ 0.949752813054	,0.000761279028	},
{ 0.950511361526	,0.000755812515	},
{ 0.951264438912	,0.000750336824	},
{ 0.952012036065	,0.000744852020	},
{ 0.952754143907	,0.000739358171	},
{ 0.953490753426	,0.000733855342	},
{ 0.954221855677	,0.000728343601	},
{ 0.954947441779	,0.000722823014	},
{ 0.955667502923	,0.000717293649	},
{ 0.956382030362	,0.000711755572	},
{ 0.957091015421	,0.000706208852	},
{ 0.957794449489	,0.000700653554	},
{ 0.958492324023	,0.000695089748	},
{ 0.959184630548	,0.000689517500	},
{ 0.959871360657	,0.000683936877	},
{ 0.960552506010	,0.000678347949	},
{ 0.961228058334	,0.000672750782	},
{ 0.961898009427	,0.000667145445	},
{ 0.962562351152	,0.000661532005	},
{ 0.963221075441	,0.000655910531	},
{ 0.963874174294	,0.000650281091	},
{ 0.964521639781	,0.000644643754	},
{ 0.965163464037	,0.000638998587	},
{ 0.965799639270	,0.000633345660	},
{ 0.966430157752	,0.000627685041	},
{ 0.967055011827	,0.000622016798	},
{ 0.967674193906	,0.000616341001	},
{ 0.968287696471	,0.000610657719	},
{ 0.968895512070	,0.000604967020	},
{ 0.969497633322	,0.000599268974	},
{ 0.970094052915	,0.000593563649	},
{ 0.970684763606	,0.000587851115	},
{ 0.971269758221	,0.000582131442	},
{ 0.971849029656	,0.000576404699	},
{ 0.972422570876	,0.000570670955	},
{ 0.972990374916	,0.000564930279	},
{ 0.973552434880	,0.000559182743	},
{ 0.974108743943	,0.000553428415	},
{ 0.974659295348	,0.000547667365	},
{ 0.975204082411	,0.000541899664	},
{ 0.975743098514	,0.000536125380	},
{ 0.976276337112	,0.000530344585	},
{ 0.976803791729	,0.000524557349	},
{ 0.977325455960	,0.000518763741	},
{ 0.977841323469	,0.000512963833	},
{ 0.978351387992	,0.000507157694	},
{ 0.978855643334	,0.000501345395	},
{ 0.979354083372	,0.000495527006	},
{ 0.979846702052	,0.000489702598	},
{ 0.980333493392	,0.000483872243	},
{ 0.980814451481	,0.000478036010	},
{ 0.981289570477	,0.000472193970	},
{ 0.981758844611	,0.000466346195	},
{ 0.982222268183	,0.000460492755	},
{ 0.982679835566	,0.000454633721	},
{ 0.983131541203	,0.000448769165	},
{ 0.983577379608	,0.000442899157	},
{ 0.984017345367	,0.000437023770	},
{ 0.984451433138	,0.000431143073	},
{ 0.984879637647	,0.000425257139	},
{ 0.985301953696	,0.000419366038	},
{ 0.985718376155	,0.000413469843	},
{ 0.986128899968	,0.000407568625	},
{ 0.986533520149	,0.000401662455	},
{ 0.986932231783	,0.000395751406	},
{ 0.987325030030	,0.000389835548	},
{ 0.987711910119	,0.000383914954	},
{ 0.988092867351	,0.000377989695	},
{ 0.988467897101	,0.000372059843	},
{ 0.988836994813	,0.000366125470	},
{ 0.989200156006	,0.000360186648	},
{ 0.989557376269	,0.000354243449	},
{ 0.989908651263	,0.000348295945	},
{ 0.990253976724	,0.000342344209	},
{ 0.990593348457	,0.000336388311	},
{ 0.990926762341	,0.000330428325	},
{ 0.991254214326	,0.000324464322	},
{ 0.991575700437	,0.000318496375	},
{ 0.991891216769	,0.000312524556	},
{ 0.992200759490	,0.000306548937	},
{ 0.992504324842	,0.000300569591	},
{ 0.992801909137	,0.000294586590	},
{ 0.993093508762	,0.000288600006	},
{ 0.993379120176	,0.000282609912	},
{ 0.993658739909	,0.000276616379	},
{ 0.993932364567	,0.000270619482	},
{ 0.994199990826	,0.000264619291	},
{ 0.994461615437	,0.000258615879	},
{ 0.994717235221	,0.000252609319	},
{ 0.994966847075	,0.000246599682	},
{ 0.995210447968	,0.000240587043	},
{ 0.995448034940	,0.000234571471	},
{ 0.995679605108	,0.000228553041	},
{ 0.995905155657	,0.000222531824	},
{ 0.996124683851	,0.000216507893	},
{ 0.996338187022	,0.000210481319	},
{ 0.996545662577	,0.000204452174	},
{ 0.996747107997	,0.000198420531	},
{ 0.996942520836	,0.000192386462	},
{ 0.997131898721	,0.000186350037	},
{ 0.997315239351	,0.000180311328	},
{ 0.997492540500	,0.000174270408	},
{ 0.997663800016	,0.000168227345	},
{ 0.997829015817	,0.000162182211	},
{ 0.997988185898	,0.000156135077	},
{ 0.998141308327	,0.000150086011	},
{ 0.998288381242	,0.000144035084	},
{ 0.998429402859	,0.000137982362	},
{ 0.998564371464	,0.000131927914	},
{ 0.998693285419	,0.000125871806	},
{ 0.998816143157	,0.000119814102	},
{ 0.998932943188	,0.000113754865	},
{ 0.999043684093	,0.000107694157	},
{ 0.999148364527	,0.000101632033	},
{ 0.999246983218	,0.000095568549	},
{ 0.999339538970	,0.000089503751	},
{ 0.999426030658	,0.000083437679	},
{ 0.999506457232	,0.000077370365	},
{ 0.999580817716	,0.000071301823	},
{ 0.999649111207	,0.000065232046	},
{ 0.999711336877	,0.000059160997	},
{ 0.999767493971	,0.000053088584	},
{ 0.999817581809	,0.000047014634	},
{ 0.999861599787	,0.000040938828	},
{ 0.999899547376	,0.000034860577	},
{ 0.999931424131	,0.000028778747	},
{ 0.999957229701	,0.000022690957	},
{ 0.999976963879	,0.000016591434	},
{ 0.999990626883	,0.000010462411	},
{ 0.999998222393	,0.000004220433	},
};

//----------------------------------------------------------------------------

// HERMITE
double ICM_Integrator::HermiteCoeff_20[20][2] = { 
{0.2453407083009 , 4.622436696006*pow(10.,-1)},
{0.7374737285454 , 2.866755053628*pow(10.,-1)},
{1.2340762153953 , 1.090172060200*pow(10.,-1)},
{1.7385377121166 , 2.481052088746*pow(10.,-2)},
{2.2549740020893 , 3.243773342238*pow(10.,-3)},
{2.7888060584281 , 2.283386360163*pow(10.,-4)},
{3.3478545673832 , 7.802556478532*pow(10.,-6)},
{3.9447640401156 , 1.086069370769*pow(10.,-7)},
{4.6036824495507 , 4.399340992273*pow(10.,-10)},
{5.3874808900112 , 2.229393645534*pow(10.,-13)},
{-0.2453407083009 , 4.622436696006*pow(10.,-1)},
{-0.7374737285454 , 2.866755053628*pow(10.,-1)},
{-1.2340762153953 , 1.090172060200*pow(10.,-1)},
{-1.7385377121166 , 2.481052088746*pow(10.,-2)},
{-2.2549740020893 , 3.243773342238*pow(10.,-3)},
{-2.7888060584281 , 2.283386360163*pow(10.,-4)},
{-3.3478545673832 , 7.802556478532*pow(10.,-6)},
{-3.9447640401156 , 1.086069370769*pow(10.,-7)},
{-4.6036824495507 , 4.399340992273*pow(10.,-10)},
{-5.3874808900112 , 2.229393645534*pow(10.,-13)} };

double ICM_Integrator::HermiteCoeff_40[40][2] = { 
						{8.098761139250850000 ,	2.59104371384705*pow(10.,-29)},
						{7.411582531485470000 ,	8.5440569637755*pow(10.,-25)},
						{6.840237305249360000 ,	2.56759336541128*pow(10.,-21)},
						{6.328255351220080000 ,	1.9891810121165*pow(10.,-18)},
						{5.854095056030400000 ,	6.00835878949085*pow(10.,-16)},
						{5.406654247970130000 ,	8.80570764520832*pow(10.,-14)},
						{4.979260978545260000 ,	7.15652805269036*pow(10.,-12)},
						{4.567502072844390000 ,	3.52562079136542*pow(10.,-10)},
						{4.168257066832500000 ,	1.12123608322758*pow(10.,-8)},
						{3.779206753435220000 ,	2.41114416367053*pow(10.,-7)},
						{3.398558265859630000 ,	3.63157615069302*pow(10.,-6)},
						{3.024879883901280000 ,	3.93693398109166*pow(10.,-5)},
						{2.656995998442900000 ,	3.13853594541326*pow(10.,-4)},
						{2.293917141875080000 ,	1.87149682959795*pow(10.,-3)},
						{1.934791472282300000 ,	8.46088800825813*pow(10.,-3)},
						{1.578869894931610000 ,	2.93125655361724*pow(10.,-2)},
						{1.225480109046290000 ,	7.84746058654044*pow(10.,-2)},
						{0.874006612357088000 ,	1.63378732713271*pow(10.,-1)},
						{0.523874713832277000 ,	2.65728251877377*pow(10.,-1)},
						{0.174537214597582000 ,	3.38643277425588*pow(10.,-1)},
						{-0.174537214597582000 , 3.38643277425588*pow(10.,-1)},
						{-0.523874713832277000 , 2.65728251877377*pow(10.,-1)},
						{-0.874006612357088000 , 1.63378732713271*pow(10.,-1)},
						{-1.225480109046290000 , 7.84746058654044*pow(10.,-2)},
						{-1.578869894931610000 , 2.93125655361724*pow(10.,-2)},
						{-1.934791472282300000 , 8.46088800825813*pow(10.,-3)},
						{-2.293917141875080000 , 1.87149682959795*pow(10.,-3)},
						{-2.656995998442900000 , 3.13853594541326*pow(10.,-4)},
						{-3.024879883901280000 , 3.93693398109166*pow(10.,-5)},
						{-3.398558265859630000 , 3.63157615069302*pow(10.,-6)},
						{-3.779206753435220000 , 2.41114416367053*pow(10.,-7)},
						{-4.168257066832500000 , 1.12123608322758*pow(10.,-8)},
						{-4.567502072844390000 , 3.52562079136542*pow(10.,-10)},
						{-4.979260978545260000 , 7.15652805269036*pow(10.,-12)},
						{-5.406654247970130000 , 8.80570764520832*pow(10.,-14)},
						{-5.854095056030400000 , 6.00835878949085*pow(10.,-16)},
						{-6.328255351220080000 , 1.9891810121165*pow(10.,-18)},
						{-6.840237305249360000 , 2.56759336541128*pow(10.,-21)},
						{-7.411582531485470000 , 8.5440569637755*pow(10.,-25)},
						{-8.098761139250850000 , 2.59104371384705*pow(10.,-29)} };

double ICM_Integrator::HermiteCoeff_60[60][2] = { 
{10.159109246180087000, 0.000000000000000000000000000000000000000000001109587247968328},
{9.520903677013318900, 0.000000000000000000000000000000000000000243974758814514790000},
{8.992398001404945200, 0.000000000000000000000000000000000003771626727120650400000000},
{8.520569284117630800, 0.000000000000000000000000000000013325596117642568000000000000},
{8.085188654249021700, 0.000000000000000000000000000017155731476717432000000000000000},
{7.675839937504887800, 0.000000000000000000000000010294059971650847000000000000000000},
{7.286276594395599400, 0.000000000000000000000003345756955750121700000000000000000000},
{6.912381532189319200, 0.000000000000000000000651256725749631000000000000000000000000},
{6.551259167062920800, 0.000000000000000000081536404730238705000000000000000000000000},
{6.200773557993438000, 0.000000000000000006923247909577586000000000000000000000000000},
{5.859290196394234800, 0.000000000000000415244410969402680000000000000000000000000000},
{5.525521086138684100, 0.000000000000018166245762596378000000000000000000000000000000},
{5.198426534576293900, 0.000000000000594843051605606910000000000000000000000000000000},
{4.877150077473150900, 0.000000000014889573490628114000000000000000000000000000000000},
{4.560973757935835600, 0.000000000289935901280645800000000000000000000000000000000000},
{4.249286435956006100, 0.000000004456822775225575400000000000000000000000000000000000},
{3.941560733926184700, 0.000000054755546192765976000000000000000000000000000000000000},
{3.637335876170731700, 0.000000543351613420487990000000000000000000000000000000000000},
{3.336204653547587100, 0.000004394286936267034400000000000000000000000000000000000000},
{3.037803338230749400, 0.000029187419041555304000000000000000000000000000000000000000},
{2.741803748069692000, 0.000160277334681844690000000000000000000000000000000000000000},
{2.447906902307685600, 0.000731773556965508890000000000000000000000000000000000000000},
{2.155837871229211000, 0.002791324828953062000000000000000000000000000000000000000000},
{1.865341531233031700, 0.008932178360307794700000000000000000000000000000000000000000},
{1.576179011975020300, 0.024061272766109375000000000000000000000000000000000000000000},
{1.288124674868893700, 0.054718970932182830000000000000000000000000000000000000000000},
{1.000963499560718000, 0.105298763697785640000000000000000000000000000000000000000000},
{0.714488781672578570, 0.171776156918885290000000000000000000000000000000000000000000},
{0.428500064220627530, 0.237868904958657060000000000000000000000000000000000000000000},
{0.142801238703438860, 0.279853117522829150000000000000000000000000000000000000000000},
{-0.142801238703438860, 0.279853117522829150000000000000000000000000000000000000000000},
{-0.428500064220627530, 0.237868904958657060000000000000000000000000000000000000000000},
{-0.714488781672578570, 0.171776156918885290000000000000000000000000000000000000000000},
{-1.000963499560718000, 0.105298763697785640000000000000000000000000000000000000000000},
{-1.288124674868893700, 0.054718970932182830000000000000000000000000000000000000000000},
{-1.576179011975020300, 0.024061272766109375000000000000000000000000000000000000000000},
{-1.865341531233031700, 0.008932178360307794700000000000000000000000000000000000000000},
{-2.155837871229211000, 0.002791324828953062000000000000000000000000000000000000000000},
{-2.447906902307685600, 0.000731773556965508890000000000000000000000000000000000000000},
{-2.741803748069692000, 0.000160277334681844690000000000000000000000000000000000000000},
{-3.037803338230749400, 0.000029187419041555304000000000000000000000000000000000000000},
{-3.336204653547587100, 0.000004394286936267034400000000000000000000000000000000000000},
{-3.637335876170731700, 0.000000543351613420487990000000000000000000000000000000000000},
{-3.941560733926184700, 0.000000054755546192765976000000000000000000000000000000000000},
{-4.249286435956006100, 0.000000004456822775225575400000000000000000000000000000000000},
{-4.560973757935835600, 0.000000000289935901280645800000000000000000000000000000000000},
{-4.877150077473150900, 0.000000000014889573490628114000000000000000000000000000000000},
{-5.198426534576293900, 0.000000000000594843051605606910000000000000000000000000000000},
{-5.525521086138684100, 0.000000000000018166245762596378000000000000000000000000000000},
{-5.859290196394234800, 0.000000000000000415244410969402680000000000000000000000000000},
{-6.200773557993438000, 0.000000000000000006923247909577586000000000000000000000000000},
{-6.551259167062920800, 0.000000000000000000081536404730238705000000000000000000000000},
{-6.912381532189319200, 0.000000000000000000000651256725749631000000000000000000000000},
{-7.286276594395599400, 0.000000000000000000000003345756955750121700000000000000000000},
{-7.675839937504887800, 0.000000000000000000000000010294059971650847000000000000000000},
{-8.085188654249021700, 0.000000000000000000000000000017155731476717432000000000000000},
{-8.520569284117630800, 0.000000000000000000000000000000013325596117642568000000000000},
{-8.992398001404945200, 0.000000000000000000000000000000000003771626727120650400000000},
{-9.520903677013318900, 0.000000000000000000000000000000000000000243974758814514790000},
{-10.159109246180087000, 0.000000000000000000000000000000000000000000001109587247968328} };

double ICM_Integrator::HermiteCoeff_100[100][2] = { 
{13.406487338144910000, 0.00000000000000000000000000000000000000000000000000000000000000000000000000000059},
{12.823799749487808000, 0.00000000000000000000000000000000000000000000000000000000000000000000000197286057},
{12.342964222859674000, 0.00000000000000000000000000000000000000000000000000000000000000000030830289900033},
{11.915061943114166000, 0.00000000000000000000000000000000000000000000000000000000000000901922230369339050},
{11.521415400787031000, 0.00000000000000000000000000000000000000000000000000000000008518883081761984900000},
{11.152404385585125000, 0.00000000000000000000000000000000000000000000000000000034594779364755260000000000},
{10.802260753684715000, 0.00000000000000000000000000000000000000000000000000071915294634632665000000000000},
{10.467185421342812000, 0.00000000000000000000000000000000000000000000000085975639548253439000000000000000},
{10.144509941292846000, 0.00000000000000000000000000000000000000000000064207252053479634000000000000000000},
{9.832269807777969100, 0.00000000000000000000000000000000000000000031852178778359182000000000000000000000},
{9.528965823390114700, 0.00000000000000000000000000000000000000011004706827142342000000000000000000000000},
{9.233420890219161200, 0.00000000000000000000000000000000000002748784884357155300000000000000000000000000},
{8.944689217325475300, 0.00000000000000000000000000000000000511623260438509190000000000000000000000000000},
{8.661996168134518100, 0.00000000000000000000000000000000072745725968877021000000000000000000000000000000},
{8.384696940416265700, 0.00000000000000000000000000000008067434278709176700000000000000000000000000000000},
{8.112247311162791500, 0.00000000000000000000000000000710181222638504120000000000000000000000000000000000},
{7.844182384460821400, 0.00000000000000000000000000050377911662131548000000000000000000000000000000000000},
{7.580100807857489200, 0.00000000000000000000000002917350072629308600000000000000000000000000000000000000},
{7.319652822304535200, 0.00000000000000000000000139484152606877570000000000000000000000000000000000000000},
{7.062531060248865300, 0.00000000000000000000005561026961656658900000000000000000000000000000000000000000},
{6.808463352858796100, 0.00000000000000000000186499767512994240000000000000000000000000000000000000000000},
{6.557207031921539200, 0.00000000000000000005302316183131498900000000000000000000000000000000000000000000},
{6.308544361112135200, 0.00000000000000000128683292112111880000000000000000000000000000000000000000000000},
{6.062278832614302900, 0.00000000000000002682492164760350000000000000000000000000000000000000000000000000},
{5.818232135203516900, 0.00000000000000048298353217030393000000000000000000000000000000000000000000000000},
{5.576241649329924500, 0.00000000000000754889687791515560000000000000000000000000000000000000000000000000},
{5.336158360138360200, 0.00000000000010288749373509974000000000000000000000000000000000000000000000000000},
{5.097845105089136000, 0.00000000000122787851441013390000000000000000000000000000000000000000000000000000},
{4.861175091791210400, 0.00000000001287903825731550000000000000000000000000000000000000000000000000000000},
{4.626030635787155500, 0.00000000011913006349290783000000000000000000000000000000000000000000000000000000},
{4.392302078682684300, 0.00000000097479212538715502000000000000000000000000000000000000000000000000000000},
{4.159886855131031100, 0.00000000707585728388962940000000000000000000000000000000000000000000000000000000},
{3.928688683427671100, 0.00000004568127508484923800000000000000000000000000000000000000000000000000000000},
{3.698616859318491800, 0.00000026290974837537255000000000000000000000000000000000000000000000000000000000},
{3.469585636418589300, 0.00000135179715911036090000000000000000000000000000000000000000000000000000000000},
{3.241513679631013100, 0.00000622152481777785260000000000000000000000000000000000000000000000000000000000},
{3.014323580331155700, 0.00002567615938454894400000000000000000000000000000000000000000000000000000000000},
{2.787941423981989500, 0.00009517162778550997900000000000000000000000000000000000000000000000000000000000},
{2.562296402372608000, 0.00031729197104330093000000000000000000000000000000000000000000000000000000000000},
{2.337320463906878800, 0.00095269218854862137000000000000000000000000000000000000000000000000000000000000},
{2.112947996371187900, 0.00257927326005908930000000000000000000000000000000000000000000000000000000000000},
{1.889115537427008300, 0.00630300028560804890000000000000000000000000000000000000000000000000000000000000},
{1.665761508741509400, 0.01391566522023183200000000000000000000000000000000000000000000000000000000000000},
{1.442825970215932700, 0.02777912738593350800000000000000000000000000000000000000000000000000000000000000},
{1.220250391218953100, 0.05017581267742866900000000000000000000000000000000000000000000000000000000000000},
{0.997977436098105300, 0.08205182739122166000000000000000000000000000000000000000000000000000000000000000},
{0.775950761540145750, 0.12153798684410347000000000000000000000000000000000000000000000000000000000000000},
{0.554114823591617010, 0.16313003050278285000000000000000000000000000000000000000000000000000000000000000},
{0.332414692342231810, 0.19846285025418642000000000000000000000000000000000000000000000000000000000000000},
{0.110795872422439520, 0.21889262958743905000000000000000000000000000000000000000000000000000000000000000},
{-0.110795872422439520, 0.21889262958743905000000000000000000000000000000000000000000000000000000000000000},
{-0.332414692342231810, 0.19846285025418642000000000000000000000000000000000000000000000000000000000000000},
{-0.554114823591617010, 0.16313003050278285000000000000000000000000000000000000000000000000000000000000000},
{-0.775950761540145750, 0.12153798684410347000000000000000000000000000000000000000000000000000000000000000},
{-0.997977436098105300, 0.08205182739122166000000000000000000000000000000000000000000000000000000000000000},
{-1.220250391218953100, 0.05017581267742866900000000000000000000000000000000000000000000000000000000000000},
{-1.442825970215932700, 0.02777912738593350800000000000000000000000000000000000000000000000000000000000000},
{-1.665761508741509400, 0.01391566522023183200000000000000000000000000000000000000000000000000000000000000},
{-1.889115537427008300, 0.00630300028560804890000000000000000000000000000000000000000000000000000000000000},
{-2.112947996371187900, 0.00257927326005908930000000000000000000000000000000000000000000000000000000000000},
{-2.337320463906878800, 0.00095269218854862137000000000000000000000000000000000000000000000000000000000000},
{-2.562296402372608000, 0.00031729197104330093000000000000000000000000000000000000000000000000000000000000},
{-2.787941423981989500, 0.00009517162778550997900000000000000000000000000000000000000000000000000000000000},
{-3.014323580331155700, 0.00002567615938454894400000000000000000000000000000000000000000000000000000000000},
{-3.241513679631013100, 0.00000622152481777785260000000000000000000000000000000000000000000000000000000000},
{-3.469585636418589300, 0.00000135179715911036090000000000000000000000000000000000000000000000000000000000},
{-3.698616859318491800, 0.00000026290974837537255000000000000000000000000000000000000000000000000000000000},
{-3.928688683427671100, 0.00000004568127508484923800000000000000000000000000000000000000000000000000000000},
{-4.159886855131031100, 0.00000000707585728388962940000000000000000000000000000000000000000000000000000000},
{-4.392302078682684300, 0.00000000097479212538715502000000000000000000000000000000000000000000000000000000},
{-4.626030635787155500, 0.00000000011913006349290783000000000000000000000000000000000000000000000000000000},
{-4.861175091791210400, 0.00000000001287903825731550000000000000000000000000000000000000000000000000000000},
{-5.097845105089136000, 0.00000000000122787851441013390000000000000000000000000000000000000000000000000000},
{-5.336158360138360200, 0.00000000000010288749373509974000000000000000000000000000000000000000000000000000},
{-5.576241649329924500, 0.00000000000000754889687791515560000000000000000000000000000000000000000000000000},
{-5.818232135203516900, 0.00000000000000048298353217030393000000000000000000000000000000000000000000000000},
{-6.062278832614302900, 0.00000000000000002682492164760350000000000000000000000000000000000000000000000000},
{-6.308544361112135200, 0.00000000000000000128683292112111880000000000000000000000000000000000000000000000},
{-6.557207031921539200, 0.00000000000000000005302316183131498900000000000000000000000000000000000000000000},
{-6.808463352858796100, 0.00000000000000000000186499767512994240000000000000000000000000000000000000000000},
{-7.062531060248865300, 0.00000000000000000000005561026961656658900000000000000000000000000000000000000000},
{-7.319652822304535200, 0.00000000000000000000000139484152606877570000000000000000000000000000000000000000},
{-7.580100807857489200, 0.00000000000000000000000002917350072629308600000000000000000000000000000000000000},
{-7.844182384460821400, 0.00000000000000000000000000050377911662131548000000000000000000000000000000000000},
{-8.112247311162791500, 0.00000000000000000000000000000710181222638504120000000000000000000000000000000000},
{-8.384696940416265700, 0.00000000000000000000000000000008067434278709176700000000000000000000000000000000},
{-8.661996168134518100, 0.00000000000000000000000000000000072745725968877021000000000000000000000000000000},
{-8.944689217325475300, 0.00000000000000000000000000000000000511623260438509190000000000000000000000000000},
{-9.233420890219161200, 0.00000000000000000000000000000000000002748784884357155300000000000000000000000000},
{-9.528965823390114700, 0.00000000000000000000000000000000000000011004706827142342000000000000000000000000},
{-9.832269807777969100, 0.00000000000000000000000000000000000000000031852178778359182000000000000000000000},
{-10.144509941292846000, 0.00000000000000000000000000000000000000000000064207252053479634000000000000000000},
{-10.467185421342812000, 0.00000000000000000000000000000000000000000000000085975639548253439000000000000000},
{-10.802260753684715000, 0.00000000000000000000000000000000000000000000000000071915294634632665000000000000},
{-11.152404385585125000, 0.00000000000000000000000000000000000000000000000000000034594779364755260000000000},
{-11.521415400787031000, 0.00000000000000000000000000000000000000000000000000000000008518883081761984900000},
{-11.915061943114166000, 0.00000000000000000000000000000000000000000000000000000000000000901922230369339050},
{-12.342964222859674000, 0.00000000000000000000000000000000000000000000000000000000000000000030830289900033},
{-12.823799749487808000, 0.00000000000000000000000000000000000000000000000000000000000000000000000197286057},
{-13.406487338144910000, 0.00000000000000000000000000000000000000000000000000000000000000000000000000000059} };

//----------------------------------------------------------------------------


void  ICM_Integrator::Integrate(	const double& x1,
									const double& x2,
									void (*fct)(void*, double, double&),
									AddressVector* param,
									double& res)
{
	int	i;
	double fx;
	std::map<int,ICM_QMatrix<double> >::const_iterator it;
	ICM_QMatrix<double>* matrix=NULL;
	
	// qTrapeze Data
	int NbStepTrapeze = itsIntegrationStep - 1;

	if (fct == NULL)
	{
		throw Exception(__LINE__, __FILE__, ERR_INVALID_DATA,
			"ERROR: Null function for Integrator!");
	}

	res	=	0.0;
	double xi;
	double	size	=	x2 - x1;
	
	int	n	=	itsIntegrationStep;

	//On load les valeurs dans la map en fonction du step d'intégration
	LoadValues(itsIntegrationStep);

	//On verifie que la méthode numérique est compatible avec le nombre de pas employé
	if ( (itsIntegrationStep % 2 == 0) && (itsIntegratorType == qGAUSS_LEGENDRE))
	{ 
		ICMTHROW(ERR_INVALID_ARGUMENT,"Can't integrate GAUSS_LEGENDRE step="<<itsIntegrationStep); 
		itsIntegratorType = qGAUSS_HERMITE; 
	} 
	else if ( (itsIntegrationStep % 2 == 1) && (itsIntegratorType == qGAUSS_HERMITE))
	{
		ICMTHROW(ERR_INVALID_ARGUMENT,"Can't integrate qGAUSS_HERMITE step="<<itsIntegrationStep); 
		itsIntegratorType = qGAUSS_LEGENDRE;
	}

	int* nointegrationcoef = (int*)param->GetLast();

	switch (itsIntegratorType)
	{
	case qGAUSS_LEGENDRE:
		{
		it = itsMap.find(itsIntegrationStep); 
		if (it!=itsMap.end()) matrix = &itsMap[itsIntegrationStep];

		if (matrix)
			{
			for (i=0;i<itsIntegrationStep;i++)
				{	*nointegrationcoef = i;
					xi	=	x1 + size * (*matrix)(i,0);
					(*fct)(param, xi, fx);
					res += fx * (*matrix)(i,1) * size * exp(-0.5 * xi * xi); }
				res	/=	SQRT2PI;
			}
		else
		{

				ComputeAbscissasAndWeightsGaussLegendre(0.0, 1.0, itsIntegrationStep);

				for (i=0;i<n;i++)
				{	*nointegrationcoef = i;
					xi	=	x1 + size * itsX[i];
					(*fct)(param, xi, fx);
					res += fx * itsW[i] * size * exp(-0.5 * xi * xi);}

				res	/=	SQRT2PI;
		}
		break;
		}
	case qGAUSS_HERMITE:
		{
		it = itsMap.find(itsIntegrationStep); 
		if (it!=itsMap.end()) matrix = &itsMap[itsIntegrationStep];

		if (matrix)
		{
			for (i=0;i<itsIntegrationStep;i++)
				{	*nointegrationcoef = i;
					(*fct)(param, (*matrix)(i,0), fx);
					res += fx * (*matrix)(i,1);	}

				res	*=	ONEOVERSQRTPI;
		}
		else
		{
		
			ComputeAbscissasAndWeightsGaussHermite(itsIntegrationStep);

			for (i=0;i<n;i++)
			{
				*nointegrationcoef = i;
				xi	=	itsX[i];
				(*fct)(param, xi, fx);
				res += fx * itsW[i] ;
			}

			res	*=	ONEOVERSQRTPI;
		}
		break;
		}
	case qTRAPEZE: 
	default:
		{
	// default: // Cas TRAPEZE
		// -------- Rajout méthode TRAPEZE
		// onin le 14/03/05
		double AbsTemp = 0.;
		double coef = size/NbStepTrapeze;

		// On calcule les valeurs aux bornes de l'intervalle d'intégration
		// Borne sup
		AbsTemp = x2;
		(*fct)(param, AbsTemp, fx);
		res += fx*exp(-0.5 * AbsTemp * AbsTemp)/2.;

		// Borne Inf
		AbsTemp = x1;
		(*fct)(param, AbsTemp, fx);
		res += fx*exp(-0.5 * AbsTemp * AbsTemp)/2.;	
		
		// On calcule toutes les valeurs intermediaires
		for (i=1;i<NbStepTrapeze;i++)
		{
			AbsTemp += coef;
			(*fct)(param, AbsTemp, fx);
			res += fx*exp(-0.5 * AbsTemp * AbsTemp);
		}

		res	*= coef/SQRT2PI;
		}
		break;
	// default:
	//	ICMTHROW(ERR_INVALID_ARGUMENT,"Don't know integration type "<<itsIntegratorType); 
	}
}

void  ICM_Integrator::Integrate(
							const double& x1,
							const double& x2,
							void (*fct)(void*, double, double&, double&),
							AddressVector* param,
							double& res1,
							double& res2)
{
	int	i;
	double fx1, fx2;
	
	// Data Trapeze
	int NbStepTrapeze = itsIntegrationStep - 1;
	std::map<int,ICM_QMatrix<double> >::const_iterator it;
	ICM_QMatrix<double>* matrix=NULL;

	if (fct == NULL)
	{
		throw Exception(__LINE__, __FILE__, ERR_INVALID_DATA,
			"ERROR: Null function for Integrator!");
	}

	int	n	=	itsIntegrationStep;

	//On load les valeurs dans la map en fonction du step d'intégration
	LoadValues(itsIntegrationStep);

	//On verifie que la méthode numérique est compatible avec le nombre de pas employé
	if ( (itsIntegrationStep % 2 == 0) && (itsIntegratorType == qGAUSS_LEGENDRE))
	{
		ICMTHROW(ERR_INVALID_ARGUMENT,"Can't integrate GAUSS_LEGENDRE step="<<itsIntegrationStep); 
		itsIntegratorType = qGAUSS_HERMITE;
	}
	else if ( (itsIntegrationStep % 2 == 1) && (itsIntegratorType == qGAUSS_HERMITE))
	{
		ICMTHROW(ERR_INVALID_ARGUMENT,"Can't integrate qGAUSS_HERMITE step="<<itsIntegrationStep); 
		itsIntegratorType = qGAUSS_LEGENDRE;
	}

	double	size	=	x2 - x1;
	double	xi =0., coef =0.;
	res1	=	0.0;
	res2	=	0.0;

	int* nointegrationcoef = (int*)param->GetLast();
	
	switch (itsIntegratorType)
	{
	case qGAUSS_LEGENDRE:
		{
		it = itsMap.find(itsIntegrationStep); 
		if (it!=itsMap.end()) matrix = &itsMap[itsIntegrationStep];
		
		if (matrix)
		{
			for (i=0;i<itsIntegrationStep;i++)
			{
				*nointegrationcoef = i;
				xi	=	x1 + size * (*matrix)(i,0);
				(*fct)(param, xi, fx1, fx2);
			
				coef	=	size * exp(- 0.5 * xi * xi);
				res1 += fx1 * (*matrix)(i,1) * coef;
				res2 += fx2 * (*matrix)(i,1) * coef;
			}
	
			res1	/=	SQRT2PI;
			res2	/=	SQRT2PI;
		}
		else
		{		
		
			ComputeAbscissasAndWeightsGaussLegendre(0.0, 1.0, itsIntegrationStep);
			for (i=0;i<n;i++)
			{
				*nointegrationcoef = i;
				xi	=	x1 + size * itsX[i];
				(*fct)(param, xi, fx1, fx2);
			
				coef	=	size * exp(- 0.5 * xi * xi);
				res1 += fx1 * itsW[i] * coef; 
				res2 += fx2 * itsW[i] * coef;
			}

			res1	/=	SQRT2PI;
			res2	/=	SQRT2PI;

		}
		break;
		}

	case qGAUSS_HERMITE:
		{
		it = itsMap.find(itsIntegrationStep); 
		if (it!=itsMap.end()) matrix = &itsMap[itsIntegrationStep];
		
		if (matrix)
		{
			for (i=0;i<itsIntegrationStep;i++)
			{
				*nointegrationcoef = i;
				(*fct)(param, (*matrix)(i,0), fx1, fx2);
		
				res1 += fx1 * (*matrix)(i,1);
				res2 += fx2 * (*matrix)(i,1);
			}

			res1	*=	ONEOVERSQRTPI;
			res2	*=	ONEOVERSQRTPI;
		}
		else
		{
	
			ComputeAbscissasAndWeightsGaussHermite(itsIntegrationStep);

			for (i=0;i<n;i++)
			{
				*nointegrationcoef = i;
				xi	=	itsX[i];
				(*fct)(param, xi, fx1, fx2);
			
				res1 += fx1 * itsW[i]; 
				res2 += fx2 * itsW[i];
			}

			res1	*=	ONEOVERSQRTPI;
			res2	*=	ONEOVERSQRTPI;
			break;
		}
		break;
		}
	
		case qTRAPEZE:
		default:
			{
			double AbsTemp = x2;
			double Pas = size/NbStepTrapeze;
			double coef = 0.;

			// On calcule les valeurs aux bornes de l'intervalle d'intégration
			// Borne Sup
				(*fct)(param, AbsTemp, fx1, fx2);
				coef = exp(-0.5 * AbsTemp * AbsTemp)/2.;
				res1 += fx1*coef;
				res2 += fx2*coef;
			
			// Borne Inf
				AbsTemp = x1;
				coef = exp(-0.5 * AbsTemp * AbsTemp)/2.;
				(*fct)(param, AbsTemp, fx1, fx2);
				res1 += fx1*coef;
				res2 += fx2*coef;
			
			// On calcule toutes les valeurs intermediaires
			for (i=1;i<NbStepTrapeze;i++)
			{
				AbsTemp += Pas;
				coef = exp(- 0.5 * AbsTemp * AbsTemp);
				(*fct)(param, AbsTemp, fx1, fx2);
				res1 += fx1*coef;
				res2 += fx2*coef;
			}


			res1	*=	Pas/SQRT2PI;
			res2	*=	Pas/SQRT2PI;

			}break;
	// default:
	// 	ICMTHROW(ERR_INVALID_ARGUMENT,"Don't know integration type "<<itsIntegratorType); 

		}
}


//Integration à partir d'une fonction donnée par un vecteur de points
//La taille du vecteur doit correspondre à nb de points de la méthode 
//Intégration effectuée des membre LBound a Ubound si Hors Gauss Hermite

double  ICM_Integrator::IntegrateVector(const std::vector<double> fx)
{
	//Vector Size Test
	if (fx.size() != itsIntegrationStep)
	{
		throw Exception(__LINE__, __FILE__, ERR_INVALID_DATA,
			"ERROR: Vector Size different from Integrator Size");
	}

	std::map<int,ICM_QMatrix<double> >::const_iterator it;
	ICM_QMatrix<double>* matrix=NULL;

	int	i;
	double res=0.0;
	double xi;
	double size	= itsUpBound - itsLowBound;
	int	n =	itsIntegrationStep;

	//On load les valeurs dans la map en fonction du step d'intégration
	LoadValues(itsIntegrationStep);

	//On verifie que la méthode numérique est compatible avec le nombre de pas employé
	if ( (itsIntegrationStep % 2 == 0) && (itsIntegratorType == qGAUSS_LEGENDRE))
		itsIntegratorType = qGAUSS_HERMITE;
	else if ( (itsIntegrationStep % 2 == 1) && (itsIntegratorType == qGAUSS_HERMITE))
		itsIntegratorType = qGAUSS_LEGENDRE;

	switch (itsIntegratorType)
	{
	case qGAUSS_LEGENDRE:
	case qGAUSS_HERMITE:
	it = itsMap.find(itsIntegrationStep); 
	if (it!=itsMap.end()) matrix = &itsMap[itsIntegrationStep];
	break;
	default:;
	}

	switch (itsIntegratorType)
	{
	case qGAUSS_LEGENDRE:
		{
		if (matrix)
		{
			for (i=0;i<itsIntegrationStep;i++)
				{
					xi	=	itsLowBound + size * (*matrix)(i,0);
					res += fx[i] * (*matrix)(i,1) * size * exp(-0.5 * xi * xi);
				}

				res	/=	SQRT2PI;
		}
		else
		{
				ComputeAbscissasAndWeightsGaussLegendre(0.0, 1.0, itsIntegrationStep);

				for (i=0;i<n;i++)
				{
					xi	=	itsLowBound + size * itsX[i];
					res += fx[i] * itsW[i] * size * exp(-0.5 * xi * xi);
				}

				res	/=	SQRT2PI;
		}
		break;
		}
	case qGAUSS_HERMITE:
		{
		if (matrix)
		{
				for (i=0;i<itsIntegrationStep;i++)
				{
					res += fx[i] * (*matrix)(i,1);
				}
				res	*=	ONEOVERSQRTPI;
		}
		else	
		{
				ComputeAbscissasAndWeightsGaussHermite(itsIntegrationStep);

				for (i=0;i<n;i++)
				{
					xi	=	itsX[i];
					res += fx[i] * itsW[i] ;
				}

				res	*=	ONEOVERSQRTPI;
		}
		break;
		}
	case qTRAPEZE:
	default:
		{
			// Cas TRAPEZE
		// -------- Rajout méthode TRAPEZE
		// onin le 14/03/05
		int NbStepTrapeze = itsIntegrationStep - 1;
		double AbsTemp = 0.;
		double coef = size/NbStepTrapeze;

		// On calcule les valeurs aux bornes de l'intervalle d'intégration
		// Borne sup
		AbsTemp = itsUpBound;
		res += fx[NbStepTrapeze-1]*exp(-0.5 * AbsTemp * AbsTemp)/2.;

		// Borne Inf
		AbsTemp = itsLowBound;
		res += fx[0]*exp(-0.5 * AbsTemp * AbsTemp)/2.;	
		
		// On calcule toutes les valeurs intermediaires
		for (i=1;i<NbStepTrapeze;i++)
		{
			AbsTemp += coef;
			res += fx[i]*exp(-0.5 * AbsTemp * AbsTemp);
		}

		res	*= coef/SQRT2PI;
		} break;
	// default:
	// 	ICMTHROW(ERR_INVALID_ARGUMENT,"Don't know integration type "<<itsIntegratorType); 

	}
	return res;
}


//Retourne la vraie valeur de l'abcisse 
//En fonction des bornes Lbound et Ubound si GL ou TR
double ICM_Integrator::GetRealAbscissa(const int& index)
{
	double res = 0., size =0., coef =0.;
	switch (itsIntegratorType)
	{
	//Gauss Legendre
	case qGAUSS_LEGENDRE:
		size	= itsUpBound - itsLowBound;
		res	=	itsLowBound + size * GetAbscissa(index);
		break;
	//Gauss Hermite
	case qGAUSS_HERMITE:
		res = GetAbscissa(index) * SQRT2;
		break;
	//Trapeze
	case qTRAPEZE:
	default:
		{
		int NbStepTrapeze = itsIntegrationStep - 1;
		size	= itsUpBound - itsLowBound;
		double coef = size/NbStepTrapeze;
		if (index <0 || index>=itsIntegrationStep)
			res = 0.;
		else
			res = itsLowBound + ( (double) index * coef);
		}
		break;
	// default:
	// 	ICMTHROW(ERR_INVALID_ARGUMENT,"Don't know integration type "<<itsIntegratorType); 

	}
	return res;
}

double ICM_Integrator::GetAbscissa(const int& index)
{
	std::map<int,ICM_QMatrix<double> >::const_iterator it;
	ICM_QMatrix<double>* matrix=NULL;

	//On load les valeurs dans la map en fonction du step d'intégration
	LoadValues(itsIntegrationStep);

	switch (itsIntegratorType)
	{
	case qGAUSS_LEGENDRE:
	case qGAUSS_HERMITE:
	it = itsMap.find(itsIntegrationStep); 
	if (it!=itsMap.end()) matrix = &itsMap[itsIntegrationStep];
	break;
	default:;
	}

	switch (itsIntegratorType)
	{
	case qGAUSS_LEGENDRE:
	case qGAUSS_HERMITE:
	
		if (matrix)
		{
			if (index <0 || index>=itsIntegrationStep)
				return 0.;
			else
				return (*matrix)(index,0);
		}
		break;
	case qTRAPEZE:
	default:
		{
			if (index <0 || index>=itsIntegrationStep)
				return 0.;
			else
				return itsX[index];
		};
	// default:
	// 	ICMTHROW(ERR_INVALID_ARGUMENT,"Don't know integration type "<<itsIntegratorType); 

	}

	return 0.;
}
	
double ICM_Integrator::GetWeight(const int& index)
{
	std::map<int,ICM_QMatrix<double> >::const_iterator it;
	ICM_QMatrix<double>* matrix=NULL;

	//On load les valeurs dans la map en fonction du step d'intégration
	LoadValues(itsIntegrationStep);

	switch (itsIntegratorType)
	{
	case qGAUSS_LEGENDRE:
	case qGAUSS_HERMITE:
	it = itsMap.find(itsIntegrationStep); 
	if (it!=itsMap.end()) matrix = &itsMap[itsIntegrationStep];
	break;
	default:;
	}

	switch (itsIntegratorType)
	{
	case qGAUSS_LEGENDRE:
	case qGAUSS_HERMITE:
	
		if (matrix)
		{
			if (index <0 || index>=itsIntegrationStep)
				return 0.;
			else
				return (*matrix)(index,1);
		}
		break;
	case qTRAPEZE:
	default:
			
			if (index <0 || index>=itsIntegrationStep)
				return 0.;
			else
				return 0.;
	// default:
	// 	ICMTHROW(ERR_INVALID_ARGUMENT,"Don't know integration type "<<itsIntegratorType); 

	}

	return 0.;

}


void ICM_Integrator::CheckNumericalMethod(int TheIntegrationStep, qIntegratorChoice& TheIntegratorType)
{
	//On verifie que la méthode numérique est compatible avec le nombre de pas employé
	if ((TheIntegrationStep % 2 == 0) && (TheIntegrationStep == qGAUSS_LEGENDRE))
		TheIntegratorType = qGAUSS_HERMITE;
	else if ((TheIntegrationStep % 2 == 1) && (TheIntegrationStep == qGAUSS_HERMITE))
		TheIntegratorType = qGAUSS_LEGENDRE;
}