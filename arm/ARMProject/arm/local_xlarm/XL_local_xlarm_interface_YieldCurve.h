		/// ==> YIELD AND VOL CURVES (206 functions)
		{
				" Local_ZCLINT",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " ZCLINT",
                " Maturities,Rates,Method,As of date,[ccy],[interpMethod]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve",
                " Maturities array",
                " Rates array",
				" compounding method of the zero yields",
				" As of date",
				" Currency (default : default currency)",
				" interpolation Method (default LINEAR)"
        },
        {
				" Local_ZCLINT",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " ARM_ZCLINT",
                " Maturities,Rates,Method,As of date,[ccy],[interpMethod]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCLINT,
                " Creates a zero-coupon curve",
                " Two possibilities: vector of strings (2D, 1M, 3M, etc.)\nor a vector of year fractions, such as 0.25 or 0.5, 1, 2, etc",
                " Rates array",
				" compounding method of the zero yields",
				" As of date",
				" Currency (default : default currency)",
				" Interpolation Method. The default is LINEAR = linear interpolation of yields; CONTINUOUS = Summit interpolation like, based on disc fact"
        },
		{
				" Local_PXL_ZCLINT",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " PXL_ZCLINT",
                " Maturities,Rates,Method,As of date,[ccy],[interpMethod]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve",
                " Maturities array",
                " Rates array",
				" compounding method of the zero yields",
				" As of date",
				" Currency (default : default currency)",
				" interpolation Method (default LINEAR)"
        },
		{
				" Local_PXL_ZCLINT",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ZCLINT",
                " Maturities,Rates,Method,As of date,[ccy],[interpMethod]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve",
                " Maturities array",
                " Rates array",
				" compounding method of the zero yields",
				" As of date",
				" Currency (default : default currency)",
				" interpolation Method (default LINEAR)"
        },
		{
				" Local_ZCVSK",
                " RRR",						// 2 parametres d'entree + 1 parametre de retour
                " ZCVSK",
                " Parameters,As of date",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a Vasicek zero-coupon curve",
                " Vasicek parameters",
                " As of date"
        },
		{
				" Local_ZCVSK",
                " RRR",						// 2 parametres d'entree + 1 parametre de retour
                " ARM_ZCVSK",
                " Parameters,As of date",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCVSK,
                " Creates a Vasicek zero-coupon curve",
                " Vasicek parameters",
                " As of date"
        },
		{
				" Local_PXL_ZCVSK",
                " RRR",						// 2 parametres d'entree + 1 parametre de retour
                " PXL_ZCVSK",
                " Parameters,As of date",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a Vasicek zero-coupon curve",
                " Vasicek parameters",
                " As of date"
        },
		{
				" Local_PXL_ZCVSK",
                " RRR",						// 2 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ZCVSK",
                " Parameters,As of date",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a Vasicek zero-coupon curve",
                " Vasicek parameters",
                " As of date"
        },
		{
				" Local_CreateZCSwapInt",
                " RRRRRRRRRR",						// 9 parametres d'entree + 1 parametre de retour
                " CreateZCSwapInt",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[swapFixFrq],[FixDayCount]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Swap FixedLeg Frequency",
				" Swap FixedLeg DayCount"
        },
		{
				" Local_CreateZCSwapInt",
                " RRRRRRRRRR",						// 9 parametres d'entree + 1 parametre de retour
                " ARM_CreateZCSwapInt",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[swapFixFrq],[FixDayCount]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_CreateZCSwapInt,
                " Creates a zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Swap FixedLeg Frequency",
				" Swap FixedLeg DayCount"
        },
		{
				" Local_PXL_CreateZCSwapInt",
                " RRRRRRRRRR",						// 9 parametres d'entree + 1 parametre de retour
                " PXL_CreateZCSwapInt",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[swapFixFrq],[FixDayCount]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Swap FixedLeg Frequency",
				" Swap FixedLeg DayCount"
        },
		{
				" Local_PXL_CreateZCSwapInt",
                " RRRRRRRRRR",						// 9 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CreateZCSwapInt",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[swapFixFrq],[FixDayCount]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Swap FixedLeg Frequency",
				" Swap FixedLeg DayCount"
        },
		{
				" Local_ZCFLAT",
                " RRRR",					// 3 parametres d'entree + 1 parametre de retour
                " ZCFLAT",
                " ZeroFlatRate,As of Date,[ccy]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a flat zero-coupon curve",
                " Zero flat rate",
                " As of date",
                " currency"
        },
		{
				" Local_ZCFLAT",
                " RRRR",					// 3 parametres d'entree + 1 parametre de retour
                " ARM_ZCFLAT",
                " ZeroFlatRate,As of Date,[ccy]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCFLAT,
                " Creates a flat zero-coupon curve",
                " Zero flat rate",
                " As of date",
                " currency"
        },
		{
				" Local_PXL_ZCFLAT",
                " RRRR",					// 3 parametres d'entree + 1 parametre de retour
                " PXL_ZCFLAT",
                " ZeroFlatRate,As of Date,[ccy]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a flat zero-coupon curve",
                " Zero flat rate",
                " As of date"
        },
		{
				" Local_PXL_ZCFLAT",
                " RRRR",					// 3 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ZCFLAT",
                " ZeroFlatRate,As of Date,[ccy]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a flat zero-coupon curve",
                " Zero flat rate",
                " As of date",
                " currency"
        },
		{
				" Local_ZCSPREADED",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " ZCSPREADED",
                " ZcSpreadId,ZcInitId,As of date,MmFreq,SwapFreq,[Currency id]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon spreaded curve",
                " Zero-coupon spreaded curve id",
                " Zero-coupon init curve id",
				" As of date",
				" Money market frequency",
                " Swap frequency",
                " Currency id"
        },
		{
				" Local_ZCSPREADED",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " ARM_ZCSPREADED",
                " ZcSpreadId,ZcInitId,As of date,MmFreq,SwapFreq,[Currency id]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCSPREADED,
                " Creates a zero-coupon spreaded curve",
                " Zero-coupon spreaded curve id",
                " Zero-coupon init curve id",
				" As of date",
				" Money market frequency",
                " Swap frequency",
                " Currency id"
        },
		{
				" Local_PXL_ZCSPREADED",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " PXL_ZCSPREADED",
                " ZcSpreadId,ZcInitId,As of date,MmFreq,SwapFreq,[Currency id]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon spreaded curve",
                " Zero-coupon spreaded curve id",
                " Zero-coupon init curve id",
				" As of date",
				" Money market frequency",
                " Swap frequency",
                " Currency id"
        },
		{
				" Local_PXL_ZCSPREADED",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ZCSPREADED",
                " ZcSpreadId,ZcInitId,As of date,MmFreq,SwapFreq,[Currency id]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon spreaded curve",
                " Zero-coupon spreaded curve id",
                " Zero-coupon init curve id",
				" As of date",
				" Money market frequency",
                " Swap frequency",
                " Currency id"
        },
		{
				" Local_CreateZCSpreadedFromSummit",
                " RRRRRRRRRRR",					// 10 parametres d'entree + 1 parametre de retour
                " ARM_ZCSpreadedFromSummit",
                " Index,[Currency],CurveName,AsOfDate,[convAdj],[raw],[MmFreq],[SwapFreq],[interp],[zcinit]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCSPREADED,
                " Creates a zero-coupon spreaded curve",
                " ",
                " default : default currency",
				" ",
				" ",
				" Convexity adjustment or not (default : Y)",
				" Raw method (default: P)",
				" Money market frequency",
                " Swap frequency",
				" Interpolation mode (default: L)",
				" ZcInit (default from Summit)"
        },
		{
				" Local_PXL_CreateZCSpreadedFromSummit",
                " RRRRRRRRRRR",					// 10 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ZCSpreadedFromSummit",
                " Index,[Currency],CurveName,AsOfDate,[convAdj],[raw],[MmFreq],[SwapFreq],[interp],[zcinit]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCSPREADED,
                " Creates a zero-coupon spreaded curve",
                " ",
                " default : default currency",
				" ",
				" ",
				" Convexity adjustment or not (default : Y)",
				" Raw method (default: P)",
				" Money market frequency",
                " Swap frequency",
				" Interpolation mode (default: L)",
				" ZcInit (default from Summit)"
        },
        {
				" Local_CreateZCSpreadedFromSummit",
                " RRRRRRRRRRR",					// 10 parametres d'entree + 1 parametre de retour
                " ARM_GetZCSpreadedFromSummit",
                " Index,[Currency],CurveName,AsOfDate,[convAdj],[raw],[MmFreq],[SwapFreq],[interp],[zcinit]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCSPREADED,
                " Creates a zero-coupon spreaded curve",
                " ",
                " default : default currency",
				" ",
				" ",
				" Convexity adjustment or not (default : Y)",
				" Raw method (default: P)",
				" Money market frequency",
                " Swap frequency",
                " Interpolation mode (default: L)",
				" ZcInit (default from Summit)"
        },
		{
				" Local_DiscountPrice",
                " RRR",							// 2 parametres d'entree + 1 parametre de retour
                " DiscountPrice",
                " Curve,Maturity",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Price calculation",
                " Curve",
                " Maturity to interpolate"
        },
		{
				" Local_DiscountPrice",
                " RRR",							// 2 parametres d'entree + 1 parametre de retour
                " ARM_DiscountPrice",
                " Curve,Maturity",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_DiscountPrice,
                " Price calculation",
                " Curve",
                " Maturity to interpolate"
        },
		{
				" Local_DiscountYield",
                " RRRR",							// 3 parametres d'entree + 1 parametre de retour
                " DiscountYield",
                " Curve,Maturity,[Method]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Yield calculation",
                " Curve id",
                " Maturity to interpolate",
				" compounding Method (default:CONT)"
        },
		{
				" Local_DiscountYield",
                " RRRR",							// 3 parametres d'entree + 1 parametre de retour
                " ARM_DiscountYield",
                " Curve,Maturity,[Method]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_DiscountYield,
                " Yield calculation",
                " Curve id",
                " Maturity to interpolate",
				" compounding Method (default:CONT)"
        },
		{
				" Local_ForwardYield",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " ForwardYield",
                " Curve,Maturity 1,Maturity 2,[Method],[adjDaycount],[decompFreq],[daycount]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Forward yield calculation",
                " Curve",
                " Maturity 1 to interpolate",
				" Maturity 2 to interpolate",
				" compounding method (default:CONT)",
				" adjustment with daycount? (default NO)",
				" decompounding frequency",
				" daycount (default -1)"
        },
		{
				" Local_ForwardYield",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " ARM_ForwardYield",
                " Curve,Maturity 1,Maturity 2,[Method],[adjDaycount],[decompFreq],[daycount]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Forward yield calculation",
                " Curve",
                " Maturity 1 to interpolate",
				" Maturity 2 to interpolate",
				" compounding method (default:CONT)",
				" adjustment with daycount? (default NO)",
				" decompounding frequency",
				" daycount (default -1)"
        },
		{
				" Local_ForwardPrice",
                " RRRR",						// 3 parametres d'entree + 1 parametre de retour
                " ForwardPrice",
                " Curve,Maturity 1,Maturity 2",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Forward price Calculation",
                " Curve",
                " 1st date (in year fraction)",
				" Final date (in year fraction)"
        },
		{
				" Local_ForwardPrice",
                " RRRR",						// 3 parametres d'entree + 1 parametre de retour
                " ARM_ForwardPrice",
                " Curve,Maturity 1,Maturity 2",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ForwardPrice,
                " Forward price Calculation",
                " Curve",
                " 1st date (in year fraction)",
				" Final date (in year fraction)"
        },
		{
				" Local_CreateZCSwapIntSmooth",
                " RRRRRRRRRR",						// 9 parametres d'entree + 1 parametre de retour
                " CreateZCSwapIntSmooth",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[Lambda],[Precision]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a smooth zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_CreateZCSwapIntSmooth",
                " RRRRRRRRRR",						// 9 parametres d'entree + 1 parametre de retour
                " ARM_CreateZCSwapIntSmooth",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[Lambda],[Precision]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_CreateZCSwapIntSmooth,
                " Creates a smooth zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_PXL_CreateZCSwapIntSmooth",
                " RRRRRRRRRR",						// 9 parametres d'entree + 1 parametre de retour
                " PXL_CreateZCSwapIntSmooth",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[Lambda],[Precision]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a smooth zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_PXL_CreateZCSwapIntSmooth",
                " RRRRRRRRRR",						// 9 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CreateZCSwapIntSmooth",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[Lambda],[Precision]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a smooth zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_CreateZCSwapFutInt",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " CreateZCSwapFutInt",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency"
        },
		{
				" Local_CreateZCSwapFutInt",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " ARM_CreateZCSwapFutInt",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_CreateZCSwapFutInt,
                " Creates a zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency"
        },
		{
				" Local_PXL_CreateZCSwapFutInt",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " PXL_CreateZCSwapFutInt",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency"
        },
		{
				" Local_PXL_CreateZCSwapFutInt",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CreateZCSwapFutInt",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency"
        },
		{
				" Local_CreateZCSwapFutIntSmooth",
                " RRRRRRRRRR",						// 9 parametres d'entree + 1 parametre de retour
                " CreateZCSwapFutIntSmooth",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[Lambda],[Precision]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a smooth zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_CreateZCSwapFutIntSmooth",
                " RRRRRRRRRR",						// 9 parametres d'entree + 1 parametre de retour
                " ARM_CreateZCSwapFutIntSmooth",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[Lambda],[Precision]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_CreateZCSwapFutIntSmooth,
                " Creates a smooth zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_PXL_CreateZCSwapFutIntSmooth",
                " RRRRRRRRRR",						// 9 parametres d'entree + 1 parametre de retour
                " PXL_CreateZCSwapFutIntSmooth",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[Lambda],[Precision]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a smooth zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_PXL_CreateZCSwapFutIntSmooth",
                " RRRRRRRRRR",						// 9 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CreateZCSwapFutIntSmooth",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[Lambda],[Precision]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a smooth zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_XCcyAdjust",
                " RRRRRRRRRRRRRRRR",							// 15 parametres d'entree + 1 parametre de retour
                " XCcyAdjust",
                " Start date,End date,payment frequency,Dom Currency,Foreign index type,Foreign Currency,Spreads,Domestic zero Curve,Domestic discount,Foreign zero curve,Foreign discount,FX spot,[coupon refvalue],[domestic dc],[foreign dc]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Returns fix spread adjustment for cross currency floating mapping",
                " Start date",
                " End date",
				" Payment frequency",
				" Domestique currency",
                " Foreign index type",
                " Foreign currency",
                " Spreads",
				" Domestic zero curve",
				" Domestic discount",
				" Foreign zero curve",
				" Foreign discount",
				" FX spot",
				" Coupon refValue (default NULL)",
				" Domestic DC (default A360)",
				" Foreign DC (default A360)"
        },
		{
				" Local_XCcyAdjust",
                " RRRRRRRRRRRRRRRR",							// 15 parametres d'entree + 1 parametre de retour
                " ARM_XCcyAdjust",
                " Start date,End date,payment frequency,Dom Currency,Foreign index type,Foreign Currency,Spreads,Domestic zero Curve,Domestic discount,Foreign zero curve,Foreign discount,FX spot,[coupon refvalue],[domestic dc],[foreign dc]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_XCcyAdjust,
                " Returns fix spread adjustment for cross currency floating mapping",
                " Start date",
                " End date",
				" Payment frequency",
				" Domestique currency",
                " Foreign index type",
                " Foreign currency",
                " Spreads",
				" Domestic zero curve",
				" Domestic discount",
				" Foreign zero curve",
				" Foreign discount",
				" FX spot",
				" Coupon refValue (default NULL)",
				" Domestic DC (default A360)",
				" Foreign DC (default A360)"
        },
		{
				" Local_PXL_XCcyAdjust",
                " RRRRRRRRRRRRRRRR",							// 15 parametres d'entree + 1 parametre de retour
                " PXL_XCcyAdjust",
                " Start date,End date,payment frequency,Dom Currency,Foreign index type,Foreign Currency,Spreads,Domestic zero Curve,Domestic discount,Foreign zero curve,Foreign discount,FX spot,[coupon refvalue],[domestic dc],[foreign dc]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Returns fix spread adjustment for cross currency floating mapping",
                " Start date",
                " End date",
				" Payment frequency",
				" Domestique currency",
                " Foreign index type",
                " Foreign currency",
                " Spreads",
				" Domestic zero curve",
				" Domestic discount",
				" Foreign zero curve",
				" Foreign discount",
				" FX spot",
				" Coupon refValue (default NULL)",
				" Domestic DC (default A360)",
				" Foreign DC (default A360)"
        },
		{
				" Local_PXL_XCcyAdjust",
                " RRRRRRRRRRRRRRRR",							// 15 parametres d'entree + 1 parametre de retour
                " PXL_ARM_XCcyAdjust",
                " Start date,End date,payment frequency,Dom Currency,Foreign index type,Foreign Currency,Spreads,Domestic zero Curve,Domestic discount,Foreign zero curve,Foreign discount,FX spot,[coupon refvalue],[domestic dc],[foreign dc]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Returns fix spread adjustment for cross currency floating mapping",
                " Start date",
                " End date",
				" Payment frequency",
				" Domestique currency",
                " Foreign index type",
                " Foreign currency",
                " Spreads",
				" Domestic zero curve",
				" Domestic discount",
				" Foreign zero curve",
				" Foreign discount",
				" FX spot",
				" Coupon refValue (default NULL)",
				" Domestic DC (default A360)",
				" Foreign DC (default A360)"
        },
		{
				" Local_ShiftedZCSWAPINT",
                " RRRRRRRRRRRR",						// 11 parametres d'entree + 1 parametre de retour
                " ShiftedZCSWAPINT",
                " ShiftValue,NbPlot,Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[swapFixFrq],[FixDayCount]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a shifted zero-coupon curve from swap rates",
				" Shift value",
				" Number of plots to shift",
				" As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Swap FixedLeg Frequency",
				" Swap FixedLeg DayCount"
        },
		{
				" Local_ShiftedZCSWAPINT",
                " RRRRRRRRRRRR",						// 11 parametres d'entree + 1 parametre de retour
                " ARM_ShiftedZCSWAPINT",
                " ShiftValue,NbPlot,Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[swapFixFrq],[FixDayCount]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ShiftedZCSWAPINT,
                " Creates a shifted zero-coupon curve from swap rates",
				" Shift value",
				" Number of plots to shift",
				" As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Swap FixedLeg Frequency",
				" Swap FixedLeg DayCount"
        },
		{
				" Local_PXL_ShiftedZCSWAPINT",
                " RRRRRRRRRRRR",						// 11 parametres d'entree + 1 parametre de retour
                " PXL_ShiftedZCSWAPINT",
                " ShiftValue,NbPlot,Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[swapFixFrq],[FixDayCount]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a shifted zero-coupon curve from swap rates",
				" Shift value",
				" Number of plots to shift",
				" As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Swap FixedLeg Frequency",
				" Swap FixedLeg DayCount"
        },
		{
				" Local_PXL_ShiftedZCSWAPINT",
                " RRRRRRRRRRRR",						// 11 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ShiftedZCSWAPINT",
                " ShiftValue,NbPlot,Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[swapFixFrq],[FixDayCount]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a shifted zero-coupon curve from swap rates",
				" Shift value",
				" Number of plots to shift",
				" As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Swap FixedLeg Frequency",
				" Swap FixedLeg DayCount"
        },
		{
				" Local_ShiftedZCSWAPINTSmooth",
                " RRRRRRRRRRRR",						// 11 parametres d'entree + 1 parametre de retour
                " ShiftedZCSWAPINTSmooth",
                " ShiftValue,NbPlot,Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[Lambda],[Precision]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a shifted smooth zero-coupon curve from swap rates",
				" Shift value",
				" Number of plots to shift",
				" As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_ShiftedZCSWAPINTSmooth",
                " RRRRRRRRRRRR",						// 11 parametres d'entree + 1 parametre de retour
                " ARM_ShiftedZCSWAPINTSmooth",
                " ShiftValue,NbPlot,Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[Lambda],[Precision]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ShiftedZCSWAPINTSmooth,
                " Creates a shifted smooth zero-coupon curve from swap rates",
				" Shift value",
				" Number of plots to shift",
				" As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_PXL_ShiftedZCSWAPINTSmooth",
                " RRRRRRRRRRRR",						// 11 parametres d'entree + 1 parametre de retour
                " PXL_ShiftedZCSWAPINTSmooth",
                " ShiftValue,NbPlot,Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[Lambda],[Precision]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a shifted smooth zero-coupon curve from swap rates",
				" Shift value",
				" Number of plots to shift",
				" As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_PXL_ShiftedZCSWAPINTSmooth",
                " RRRRRRRRRRRR",						// 11 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ShiftedZCSWAPINTSmooth",
                " ShiftValue,NbPlot,Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[Lambda],[Precision]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a shifted smooth zero-coupon curve from swap rates",
				" Shift value",
				" Number of plots to shift",
				" As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_TRANS2SMOOTH",
                " RRRR",					// 3 parametres d'entree + 1 parametre de retour
                " TRANS2SMOOTH",
                " Input ZCLI,[Lambda],[Precision]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Translate a zero-coupon curve into a smooth curve",
                " Input Curve",
                " Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_TRANS2SMOOTH",
                " RRRR",					// 3 parametres d'entree + 1 parametre de retour
                " ARM_TRANS2SMOOTH",
                " Input ZCLI,[Lambda],[Precision]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_TRANS2SMOOTH,
                " Translates a zero-coupon curve into a smooth curve",
                " Input Curve",
                " Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_PXL_TRANS2SMOOTH",
                " RRRR",					// 3 parametres d'entree + 1 parametre de retour
                " PXL_TRANS2SMOOTH",
                " Input ZCLI,[Lambda],[Precision]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Translates a zero-coupon curve into a smooth curve",
                " Input Curve",
                " Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_PXL_TRANS2SMOOTH",
                " RRRR",					// 3 parametres d'entree + 1 parametre de retour
                " PXL_ARM_TRANS2SMOOTH",
                " Input ZCLI,[Lambda],[Precision]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Translates a zero-coupon curve into a smooth curve",
                " Input Curve",
                " Lambda (default: 0)",
				" Precision (default: 0)"
        },
		{
				" Local_ZCSWAPCUBDIFF",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " ZCSWAPCUBDIFF",
                " As of date,MatuRate,MmVsFut,SwapVsFut,Raw,Currency",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
				" Creates a zero-coupon differentiable cubic curve from swap rates",
                " As of date",
                " Maturities and rates array",
                " Money market versus future",
				" Swap verus future",
				" Raw",
                " Currency"
        },
		{
				" Local_ZCSWAPCUBDIFF",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " ARM_ZCSWAPCUBDIFF",
                " As of date,MatuRate,MmVsFut,SwapVsFut,Raw,Currency",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCSWAPCUBDIFF,
				" Creates a zero-coupon differentiable cubic curve from swap rates",
                " As of date",
                " Maturities and rates array",
                " Money market versus future",
				" Swap verus future",
				" Raw",
                " Currency"
        },
		{
				" Local_PXL_ZCSWAPCUBDIFF",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " PXL_ZCSWAPCUBDIFF",
                " As of date,MatuRate,MmVsFut,SwapVsFut,Raw,Currency",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
				" Creates a zero-coupon differentiable cubic curve from swap rates",
                " As of date",
                " Maturities and rates array",
                " Money market versus future",
				" Swap verus future",
				" Raw",
                " Currency"
        },
		{
				" Local_PXL_ZCSWAPCUBDIFF",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ZCSWAPCUBDIFF",
                " As of date,MatuRate,MmVsFut,SwapVsFut,Raw,Currency",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
				" Creates a zero-coupon differentiable cubic curve from swap rates",
                " As of date",
                " Maturities and rates array",
                " Money market versus future",
				" Swap verus future",
				" Raw",
                " Currency"
        },
		{
				" Local_ZCSWAPSPLSUM",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " ARM_ZCSWAPSPLSUM",
                " As of date,MatuRate,MmVsFut,SwapVsFut,Raw,Currency",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCSPLICUB,
				" Creates a summit's splined zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
                " Money market versus future",
				" Swap verus future",
				" Raw",
                " Currency"
        },
		{
				" Local_PXL_ZCSWAPSPLSUM",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ZCSWAPSPLSUM",
                " As of date,MatuRate,MmVsFut,SwapVsFut,Raw,Currency",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
				" Creates a summit's splined zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
                " Money market versus future",
				" Swap verus future",
				" Raw",
                " Currency"
        },
		{
				" Local_ARM_FixingSched",
                " RRRR",					// 3 parametres d'entree + 1 parametre de retour
                " ARM_FixingSched",
                " asOfDate, liborFixings, FxFixings",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Create a fixing schedule",
				" ",
				" Vector of ARM curves for Libor fixings with corresponding keys",
				" Vector of ARM curves for FX fixings with corresponding key"
        },
		{
				" Local_PXL_ARM_FixingSched",
                " RRRR",					// 3 parametres d'entree + 1 parametre de retour
                " PXL_ARM_FixingSched",
                " asOfDate, liborFixings, FxFixings",
                " 0",
                XLLOCALARM_CURVE_GROUP,
        },
		{
				" Local_ARM_GetFixingSchedFromSummit",
                " RRRRR",					// 4 parametres d'entree + 1 parametre de retour
                " ARM_GetFixingSchedFromSummit",
                " ListOfKeys,AsOf,Source,dateStrip",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " This fonctions extracts a particular fixing among a history of fixing",
				" List of the keys",
				" As of",
				" Source",
				" Date strip"
        },
		{
				" Local_ZCINTSMOOTH",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " ZCINTSMOOTH",
                " Maturities,Rates,As of date,Method,[Lambda],[Precision]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve",
                " Maturities array",
                " Rates array",
				" As of date",
				" Interpolation method",
				" Lambda (default: 0)",
                " Precision (default: 0)"
        },
		{
				" Local_ZCINTSMOOTH",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " ARM_ZCINTSMOOTH",
                " Maturities,Rates,As of date,Method,[Lambda],[Precision]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCINTSMOOTH,
                " Creates a zero-coupon curve",
                " Maturities array",
                " Rates array",
				" As of date",
				" Interpolation method",
				" Lambda (default: 0)",
                " Precision (default: 0)"
        },
		{
				" Local_PXL_ZCINTSMOOTH",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " PXL_ZCINTSMOOTH",
                " Maturities,Rates,As of date,Method,[Lambda],[Precision]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a smooth zero-coupon curve",
                " Maturities array",
                " Rates array",
				" As of date",
				" Interpolation method",
				" Lambda (default: 0)",
                " Precision (default: 0)"
        },
		{
				" Local_PXL_ZCINTSMOOTH",
                " RRRRRRR",					// 6 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ZCINTSMOOTH",
                " Maturities,Rates,As of date,Method,[Lambda],[Precision]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a smooth zero-coupon curve",
                " Maturities array",
                " Rates array",
				" As of date",
				" Interpolation method",
				" Lambda (default: 0)",
                " Precision (default: 0)"
        },
		{
				" Local_GetZCFromSummit",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " GetZCFromSummit",
                " Index,Currency,CvName,As of date,[interpMethod]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves a zero-coupon curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
				" interpolation Method (used only with FlatFiles, default Linear)"
        },
		{
				" Local_GetZCFromSummit",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " ARM_GetZCFromSummit",
                " Index,Currency,CvName,As of date,[interpMethod]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_GetZCFromSummit,
                " Retrieves a zero-coupon curve from Summit",
                " Index (EURIB, PIBOR, ...)",
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
				" interpolation Method (used only with FlatFiles, default Linear)"
        },
		{
				" Local_GetZCFromCalypso",
                " RRRRRRRRR",
                " ARM_GetZCFromCalypso",
                " Index,Currency,Term,PricingEnv,AsOfDate,[interpMethod],[forceCurveName],[xmlFileName]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_GetZCFromSummit,
                " Retrieves a zero-coupon curve from Calypso",
                " Index ",
                " Currency ",
				" Term ",
				" PricingEnv ",
				" As of date ",
				" interpolation Method (used only with FlatFiles, default Linear) ",
				" forceCurveName ",
				" xmlFileName "
        },
		{
				" Local_GetMaturitiesFromZC",
                " RR",
                " ARM_GetMaturitiesFromZC",
                " CvName",
                " 1",
                " ",
                " ",
                IDH_ARM_GetZCFromSummit,
                " Retrieves maturities from curve",
                " CvName "
        },
		{
				" Local_PXL_GetZCFromSummit",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " PXL_GetZCFromSummit",
                " Index,Currency,CvName,As of date,[interpMethod]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves a zero-coupon curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
				" interpolation Method (used only with FlatFiles, default Linear)"
        },
		{
				" Local_PXL_GetZCFromSummit",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " PXL_ARM_GetZCFromSummit",
                " Index,Currency,CvName,As of date,[interpMethod]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves a zero-coupon curve from Summit",
                " Index (EURIB, PIBOR, ...)",
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
				" interpolation Method (used only with FlatFiles, default Linear)"
        },
		{
				" Local_GetInitialCurveFromSummit",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " GetInitialCurveFromSummit",
                " Index,Currency,CvName,As of date,[adjOrNot]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_GetInitialCurveFromSummit,
                " Retrieves a zero-coupon curve from Summit",
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
				" Convexity adjustment or not (default : Y)"
		},
		{
				" Local_GetInitialCurveFromSummit",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " ARM_GetInitialCurveFromSummit",
                " Index,Currency,CvName,As of date,[adjOrNot]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_GetInitialCurveFromSummit,
                " Retrieves a zero-coupon curve from Summit",
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
				" Convexity adjustment or not (default : Y)"
		},
		{
				" Local_GetInitialCurveFromCalypso",
				" RRRRRRRRR" ,
				" ARM_GetInitialCurveFromCalypso",
				" Index,Currency,term,pricingEnv, As of date ,[forceCurveName],[xmlFile],[adjOrNot]",
				" 1",
				XLLOCALARM_CURVE_GROUP ,
				" ",
				IDH_ARM_GetInitialCurveFromSummit ,
				" Retrieves a zero-coupon curve from Calypso",
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" Term ( 3M,6M,...)",
				" PricingEnv (MO, ...)",
				" As of date",
				" Force Curve Name",
				" Xml File Name",
				" Convexity adjustment or not (default : Y)"
		},

		{
				" Local_ARM_CreateZCFromSummit",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " ARM_CreateZCFromSummit",
                " Index,Currency,CvName,As of date,[AdjOrNot],[raw],[swapFrq]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Computes a zero-coupon curve from Summit",
                " Index (EURIB, PIBOR, ...)",
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
				" Convexity adjustment or not (default : Y)",
				" Raw method (default: SUMMIT's one)",
				" swap Frequency"
		},
		{
				" Local_PXL_ARM_CreateZCFromSummit",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CreateZCFromSummit",
                " Index,Currency,CvName,As of date,[AdjOrNot],[raw],[swapFrq]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Computes a zero-coupon curve from Summit",
                " Index (EURIB, PIBOR, ...)",
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
				" Convexity adjustment or not (default : Y)",
				" Raw method (default: SUMMIT's one)",
				" swap Frequency"
        },
		{
				" Local_ZCSPLICUB",
                " RRRRRR",					// 5 parametres d'entree + 1 parametre de retour
                " ZCSPLICUB",
                " Maturities,Rates,Method,As of date,[LastBucket]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a cubic-spline zero-coupon curve",
                " Maturities array",
                " Rates array",
				" Interpolation method",
				" As of date",
                " Last bucket (default: 1)"
        },
		{
				" Local_ZCSPLICUB",
                " RRRRRR",					// 5 parametres d'entree + 1 parametre de retour
                " ARM_ZCSPLICUB",
                " Maturities,Rates,Method,As of date,[LastBucket]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCSPLICUB,
                " Creates a cubic-spline zero-coupon curve",
                " Maturities array",
                " Rates array",
				" Interpolation method",
				" As of date",
                " Last bucket (default: 1)"
        },
		{
				" Local_PXL_ZCSPLICUB",
                " RRRRRR",					// 5 parametres d'entree + 1 parametre de retour
                " PXL_ZCSPLICUB",
                " Maturities,Rates,Method,As of date,[LastBucket]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a cubic-spline zero-coupon curve",
                " Maturities array",
                " Rates array",
				" Interpolation method",
				" As of date",
                " Last bucket (default: 1)"
        },
		{
				" Local_PXL_ZCSPLICUB",
                " RRRRRR",					// 5 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ZCSPLICUB",
                " Maturities,Rates,Method,As of date,[LastBucket]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a cubic-spline zero-coupon curve",
                " Maturities array",
                " Rates array",
				" Interpolation method",
				" As of date",
                " Last bucket (default: 1)"
        },
		{
				" Local_ZCSPL",
                " RRR",					// 2 parametres d'entree + 1 parametre de retour
                " ZCSPL",
                " Parameters,As of date",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a spline zero-coupon curve",
                " Spline parameters",
                " As of date"
        },
		{
				" Local_ZCSPL",
                " RRR",					// 2 parametres d'entree + 1 parametre de retour
                " ARM_ZCSPL",
                " Parameters,As of date",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCSPL,
                " Creates a spline zero-coupon curve",
                " Spline parameters",
                " As of date"
        },
		{
				" Local_PXL_ZCSPL",
                " RRR",					// 2 parametres d'entree + 1 parametre de retour
                " PXL_ZCSPL",
                " Parameters,As of date",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a spline zero-coupon curve",
                " Spline parameters",
                " As of date"
        },
		{
				" Local_PXL_ZCSPL",
                " RRR",					// 2 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ZCSPL",
                " Parameters,As of date",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a spline zero-coupon curve",
                " Spline parameters",
                " As of date"
        },
		{
				" Local_ARM_BUMPCURVE",
                " RRRR",					// 3 parametres d'entree + 1 parametre de retour
                " ARM_BUMPCURVE",
                " Input ZCLI,Epsilon,[Meth]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_BUMPCURVE,
                " Bumps a zero-coupon curve, created from underlying ZC points, into a new curve (not compatible with ARM_GetZCFromSummit function)",
                " Input Curve",
                " Epsilon (in percent)" ,
				" Method (default : 0 - Classic ; 1 - Forward)"
        },
		{
				" Local_PXL_ARM_BUMPCURVE",
                " RRRR",					// 3 parametres d'entree + 1 parametre de retour
                " PXL_ARM_BUMPCURVE",
                " Input ZCLI,Epsilon,[Meth]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Bumps a zero-coupon curve, created from underlying ZC points, into a new curve (not compatible with ARM_GetZCFromSummit function)",
                " Input Curve",
                " Epsilon (in percent)" ,
				" Method (default : 0 - Classic ; 1 - Forward)"
        },
		{
				" Local_ARM_BumpSpreadedCurve",
                " RRRRR",					// 4 parametres d'entree + 1 parametre de retour
                " ARM_BumpSpreadedCurve",
                " InputZCSpreaded,MatuAndBumps,[CurveToBump],[Method]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Bumps either ZC curve or the spreads crv",
                " Input spreaded Curve",
                " Range of Maturities and bumps(in percent)",
				" ZC (default) or BS",
				" default: 0:Classic or 1:Forward"
        },
		{
				" Local_PXL_ARM_BumpSpreadedCurve",
                " RRRRR",					// 4 parametres d'entree + 1 parametre de retour
                " PXL_ARM_BumpSpreadedCurve",
                " InputZCSpreaded,MatuAndBumps,[CurveToBump],[Method]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Bumps either ZC curve or the spreads crv"
        },
		{
				" Local_CreateZeroCurveLin",
                " RRRRRR",				// 5 parametres d'entree + 1 parametre de retour
                " CreateZeroCurveLin",
                " MatuRate,Method,As of date,[ccy],[interpMethod]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a linear zero-coupon curve", 
                " Maturities and rates array", 
				" compounding method of the zero yields",
				" As of date",
				" Currency (default : default Currency)",
				" interpolation Method (default LINEAR)"
        },
		{
				" Local_CreateZeroCurveLin",
                " RRRRRR",				// 5 parametres d'entree + 1 parametre de retour
                " ARM_CreateZeroCurveLin",
                " MatuRate,Method,As of date,[ccy],[interpMethod]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_CreateZeroCurveLin,
                " Creates a linear zero-coupon curve", 
                " Maturities and rates array", 
				" compounding method of the zero yields",
				" As of date",
				" Currency (default : default Currency)",
				" interpolation Method (default LINEAR)"
        },
        {
				" Local_PXL_CreateZeroCurveLin",
                " RRRRR",				// 5 parametres d'entree + 1 parametre de retour
                " PXL_CreateZeroCurveLin",
                " MatuRate,Method,As of date,[ccy],[interpMethod]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a linear zero-coupon curve", 
                " Maturities and rates array",
				" compounding method of the zero yields",
				" As of date",
				" Currency  (default : default Currency)",
				" interpolation Method (default LINEAR)"
        },
		{
				" Local_PXL_CreateZeroCurveLin",
                " RRRRRR",				// 5 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CreateZeroCurveLin",
                " MatuRate,Method,As of date,[ccy],[interpMethod]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a linear zero-coupon curve", 
                " Maturities and rates array", 
				" compounding method of the zero yields",
				" As of date",
				" Currency (default : default Currency)",
				" interpolation Method (default LINEAR)"
        },
        {
				" Local_ShiftZeroCurveLin",
                " RRRRRRRR",				// 7 parametres d'entree + 1 parametre de retour
                " ARM_ShiftZeroCurveLin",
                " value,nbPlot,MatuRate,Method,As of date,[ccy],[interpMethod]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_CreateZeroCurveLin,
                " Creates a linear zero-coupon curve", 
                " value of shift", 
                " Number of plot to shift", 
                " Maturities and rates array", 
				" compounding method of the zero yields",
				" As of date",
				" Currency (default : default Currency)",
				" interpolation Method (default LINEAR)"
        },
        {
				" Local_PXL_ShiftZeroCurveLin",
                " RRRRRRRR",				// 7 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ShiftZeroCurveLin",
                " value,nbPlot,MatuRate,Method,As of date,[ccy],[interpMethod]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                IDH_ARM_CreateZeroCurveLin,
                " Creates a linear zero-coupon curve", 
                " value of shift", 
                " Number of plot to shift", 
                " Maturities and rates array", 
				" compounding method of the zero yields",
				" As of date",
				" Currency (default : default Currency)",
				" interpolation Method (default LINEAR)"
        },
		{
				" Local_CreateTOYNYZCSwapInt",
                " RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " CreateTOYNYZCSwapInt",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[frq]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Frequency (default: 0)"
        },
		{
				" Local_CreateTOYNYZCSwapInt",
                " RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " ARM_CreateTOYNYZCSwapInt",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[frq]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_CreateTOYNYZCSwapInt,
                " Creates a zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Frequency (default: 0)"
        },
		{
				" Local_PXL_CreateTOYNYZCSwapInt",
                " RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " PXL_CreateTOYNYZCSwapInt",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[frq]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Frequency (default: 0)"
        },
		{
				" Local_PXL_CreateTOYNYZCSwapInt",
                " RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CreateTOYNYZCSwapInt",
                " Date,MatuRate,MmVsFut,SwapVsFut,[Raw],[Interp],[Currency],[frq]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a zero-coupon curve from swap rates",
                " As of date",
                " Maturities and rates array",
				" Money market versus futures",
				" Swap versus futures",
                " Raw method (default: P)",
                " Interpolation mode (default: L)",
                " Currency",
				" Frequency (default: 0)"
        },
		{
				" Local_CreateZCCashInt",
                " RRRRRR",							// 5 parametres d'entree + 1 parametre de retour
                " CreateZCCashInt",
                " Date,MatuRates,Bonds,MmVsFut,[Currency]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Create a cash zero-coupon curve", 
                " As of date", 
                " Maturities and rates array",
				" Bonds and yields array",
				" Money market versus futures",
                " Currency"
        },
		{
				" Local_CreateZCCashInt",
                " RRRRRR",							// 5 parametres d'entree + 1 parametre de retour
                " ARM_CreateZCCashInt",
                " Date,MatuRates,Bonds,MmVsFut,[Currency]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ", //IDH_ARM_CreateZCCashInt,
                " Create a cash zero-coupon curve", 
                " As of date", 
                " Maturities and rates array",
				" Bonds and yields array",
				" Money market versus futures",
                " Currency"
        },
		{
				" Local_PXL_CreateZCCashInt",
                " RRRRRR",							// 5 parametres d'entree + 1 parametre de retour
                " PXL_CreateZCCashInt",
                " Date,MatuRates,Bonds,MmVsFut,[Currency]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Create a cash zero-coupon curve", 
                " As of date", 
                " Maturities and rates array",
				" Bonds and yields array",
				" Money market versus futures",
                " Currency"
        },
		{
				" Local_PXL_CreateZCCashInt",
                " RRRRRR",							// 5 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CreateZCCashInt",
                " Date,MatuRates,Bonds,MmVsFut,[Currency]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Create a cash zero-coupon curve", 
                " As of date", 
                " Maturities and rates array",
				" Bonds and yields array",
				" Money market versus futures",
                " Currency"
        },
		{
				" Local_ParallelShift",
                " RRR",							// 2 parametres d'entree + 1 parametre de retour
                " ParallelShift",
                " Curve id,Value",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Returns a parallel shifted curve", 
                " Curve id", 
                " Shift value"
        },
		{
				" Local_ParallelShift",
                " RRR",							// 2 parametres d'entree + 1 parametre de retour
                " ARM_ParallelShift",
                " Curve id,Value",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ParallelShift,
                " Returns a parallel shifted curve", 
                " Curve id", 
                " Shift value"
        },
		{
				" Local_PXL_ParallelShift",
                " RRR",							// 2 parametres d'entree + 1 parametre de retour
                " PXL_ParallelShift",
                " Curve id,Value",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Returns a parallel shifted curve", 
                " Curve id", 
                " Shift value"
        },
		{
				" Local_PXL_ParallelShift",
                " RRR",							// 2 parametres d'entree + 1 parametre de retour
                " PXL_ARM_ParallelShift",
                " Curve id,Value",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Returns a parallel shifted curve", 
                " Curve id", 
                " Shift value"
        },
		{
				" Local_VolCurv",
                " RRRRRRRRRRR",					// 9 parametres d'entree + 1 parametre de retour
                " VolCurv",
                " Maturities,UndMatOrStrikes,Vols,As of date,[VolType],[StrikeType],[InterpolMod],[ccy],[IndexName],[indexId]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a volatility curve", 
                " Maturities array (1D array)", 
                " Underlying Matus or strikes array (1D array)",
				" Volatilities array (2D array)",
				" As of date",
                " Volatility type (default: ATM)",
                " Strike type (default: Y)",
                " Interpol. Mode (Default: LINEAR) or DIAG (for correls)",
                " The currency",
				" Index Name",
				" Index Id"
        },
		{
				" Local_VolCurv",
                " RRRRRRRRRRR",					// 10 parametres d'entree + 1 parametre de retour
                " ARM_VolCurv",
                " Maturities,UndMatOrStrikes,Vols,As of date,[VolType],[StrikeType],[InterpolMod],[ccy],[IndexName],[IndexId]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_VolCurv,
                " Creates a volatility curve", 
                " Maturities array (1D array)", 
                " Underlying Matus or strikes array (1D array)",
				" Volatilities array (2D array)",
				" As of date",
                " Volatility type (default: ATM)",
                " Strike type (default: Y)",
                " Interpol. Mode (Default: LINEAR) or DIAG and SPLINE (for correls)",
                " The currency",
				" Index Name",
				" Index Id"
        },
		{
				" Local_PXL_VolCurv",
                " RRRRRRRRRRR",					// 10 parametres d'entree + 1 parametre de retour
                " PXL_VolCurv",
                " Maturities,UndMatOrStrikes,Vols,As of date,[VolType],[StrikeType],[InterpolMod],[ccy],[IndexName],[IndexId]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a volatility curve", 
                " Maturities array (1D array)", 
                " Underlying Matus or strikes array (1D array)",
				" Volatilities array (2D array)",
				" As of date",
                " Volatility type (default: ATM)",
                " Strike type (default: Y)",
                " Interpol. Mode (Default: LINEAR) or DIAG (for correls)",
                " The currency",
				" Index Name",
				" Index Id"
        },
		{
				" Local_PXL_VolCurv",
                " RRRRRRRRRRR",					// 10 parametres d'entree + 1 parametre de retour
                " PXL_ARM_VolCurv",
                " Maturities,UndMatOrStrikes,Vols,As of date,[VolType],[StrikeType],[InterpolMod],[ccy],[IndexName],[IndexId]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a volatility curve", 
                " Maturities array (1D array)", 
                " Underlying Matus or strikes array (1D array)",
				" Volatilities array (2D array)",
				" As of date",
                " Volatility type (default: ATM)",
                " Strike type (default: Y)",
                " Interpol. Mode (Default: LINEAR) or DIAG (for correls)",
                " The currency",
				" Index Name",
				" Index Id"
        },
        {
				" Local_ARM_FxVolCurv",
                " RRRRRRRRRRRRRRRRRR",					// 17 parametres d'entree + 1 parametre de retour
                " ARM_FxVolCurv",
                " AsOf,matus,[FxFwds],pivotVols,pivotTypes,deltaPuts,deltaCalls,volsPuts,volsCalls,[InterpolTypes],[WhatIsInterpolated],[correctSplineWithLinear],[FxSpot],[domZC],[forZC],[inRRSTR],[isATM]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_VolCurv,
                " Creates an FX volatility curve", 
                " As Of Date",
                " Maturities array (1D array)", 
                " FX Fwds array (1D array)",
				" Pivot Vols array (1D array)",
				" Pivot types (0|1|2) (1D array)",
                " Delta Puts (1D array)",
                " Delta Calls (1D array)",
                " Vols PUTS (2D array)",
                " Vols CALLS (2D array)",
                " Interpol. Mode (Default: L)INEAR S)pline)",
				" WhatIsInterpolated. Mode (Default: S)TRIKE D)ELTA E)SMOOTHDELTA)",
				" correctSplineWithLinear (Y/N) (1 or 0",
                " The FX Spot",
                " Domestic ZC",
                " Foreign ZC",
                " Inputs are RR and STR (Y/N) or (1/0): Def: N",
                " Input FX Vol is ATM (Y/N) or (1/0): Def: N"
        },
		{
				" Local_PXL_ARM_FxVolCurv",
                " RRRRRRRRRRRRRRRRRR",					// 17 parametres d'entree + 1 parametre de retour
                " PXL_ARM_FxVolCurv",
                " AsOf,matus,[FxFwds],pivotVols,pivotTypes,deltaPuts,deltaCalls,volsPuts,volsCalls,[InterpolTypes],[WhatIsInterpolated],[correctSplineWithLinear],[FxSpot],[domZC],[forZC],[inRRSTR],[isATM]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_VolCurv,
                " Creates an FX volatility curve", 
                " As Of Date",
                " Maturities array (1D array)", 
                " FX Fwds array (1D array)",
				" Pivot Vols array (1D array)",
				" Pivot types (0|1|2) (1D array)",
                " Delta Puts (1D array)",
                " Delta Calls (1D array)",
                " Vols PUTS (2D array)",
                " Vols CALLS (2D array)",
                " Interpol. Mode (Default: L)INEAR S)pline)",
				" WhatIsInterpolated. Mode (Default: S)TRIKE D)ELTA E)SMOOTHDELTA)",
				" correctSplineWithLinear (Y/N) (1 or 0",
                " The FX Spot",
                " Domestic ZC",
                " Foreign ZC",
                " Inputs are RR and STR (Y/N) or (1/0): Def: N",
                " Input FX Vol is ATM (Y/N) or (1/0): Def: N"
        },
        {
				" Local_ARM_NewComputeFxVolatility",
                " RRRR",						// 3 parametres d'entree + 1 parametre de retour
                " ARM_NewComputeFxVolatility",
                " Curve,Maturity,moneyness",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " FX Volatility computation", 
                " FX Curve", 
                " Option Maturity (in year fraction)",
				" moneyness"
        },
		{
				" Local_ARM_GetInfoFromFxVolatility",
                " RR",						// 1 parametres d'entree + 1 parametre de retour
                " ARM_GetInfoFromFxVolatility",
                " Curve",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " FX Volatility computation", 
                " FX Curve"
        },
		{
				" Local_VolFlat",
                " RRRR",						// 3 parametres d'entree + 1 parametre de retour
                " VolFlat",
                " Vol,As of date,[ccy]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a volatility flat", 
                " Volatility", 
                " As of date",
                " The currency"
        },
		{
				" Local_VolFlat",
                " RRRR",						// 3 parametres d'entree + 1 parametre de retour
                " ARM_VolFlat",
                " Vol,As of date,[ccy]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_VolFlat,
                " Creates a flat volatility", 
                " Volatility", 
                " As of date",
                " The currency"
        },
		{
				" Local_PXL_VolFlat",
                " RRRR",						// 3 parametres d'entree + 1 parametre de retour
                " PXL_VolFlat",
                " Vol,As of date,[ccy]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a flat volatility", 
                " Volatility", 
                " As of date",
                " The currency"
        },
		{
				" Local_PXL_VolFlat",
                " RRRR",						// 3 parametres d'entree + 1 parametre de retour
                " PXL_ARM_VolFlat",
                " Vol,As of date,[ccy]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a flat volatility", 
                " Volatility", 
                " As of date",
                " The currency"
        },
		{
				" Local_ComputeVolatility",
                " RRRRR",						// 4 parametres d'entree + 1 parametre de retour
                " ComputeVolatility",
                " Curve,Maturity,TenorOrStrike,[tenor]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Volatility computation", 
                " Volatility Curve Id", 
                " Expiry (in Year Fraction)",
				" Tenor(if ATM), strike value(if Cube) ( in Year Fraction)",
				" Tenor(if Cube), not necessairy(if ATM)",
        },
		{
				" Local_ComputeVolatility",
                " RRRRR",						// 4 parametres d'entree + 1 parametre de retour
                " ARM_ComputeVolatility",
                " Curve,Maturity,TenorOrStrike,[tenor]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Volatility computation", 
                " Volatility Curve Id", 
                " Expiry (in Year Fraction)",
				" Tenor(if ATM), strike value(if Cube) ( in Year Fraction)",
				" Tenor(if Cube), not necessairy(if ATM)",
        },
		{
				" Local_ComputeModelVolatility",
                " RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " ARM_ComputeModelVolatility",
                " Model,Maturity,Tenor,Fwd,Strike,[useSabr]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Volatility computation with a model (in percent)", 
                " Model Id", 
                " Maturity (a Year Term)",
				" Tenor",
				" Forward",
				" Strike",
				" Use model SABR (default: N)"
        },
		{
				" Local_VolCube",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " VolCube",
                " ATM Curve,Curves,tenors,[volType],[checkCcy]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a volatility cube", 
                " ATM Curve Id", 
                " Curves Ids",
				" Tenors",
				" VolType (default: ATM)",
				" CheckCcy (default: 1)"
        },
		{
				" Local_VolCube",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " ARM_VolCube",
                " ATM Curve,Curves,tenors,[volType],[checkCcy]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a volatility cube", 
                " ATM Curve Id", 
                " Curves Ids",
				" Tenors",
				" VolType (default: ATM)",
				" CheckCcy (default: 1)"
        },
		{
				" Local_PXL_VolCube",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " PXL_VolCube",
                " ATM Curve,Curves,tenors,[volType],[checkCcy]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a volatility cube", 
                " ATM Curve Id", 
                " Curves Ids",
				" Tenors",
				" VolType (default: ATM)",
				" CheckCcy (default: 1)"
        },
		{
				" Local_PXL_VolCube",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " PXL_ARM_VolCube",
                " ATM Curve,Curves,tenors,[volType],[checkCcy]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a volatility cube", 
                " ATM Curve Id", 
                " Curves Ids",
				" Tenors",
				" VolType (default: ATM)",
				" CheckCcy (default: 1)"
        },
		{
				" Local_GetVolFromCalypso",
				" RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " ARM_GetVolFromCalypso",
                " Index,Currency,CvName,As of date,VolType,[MatIndex],[ImpOrHist],[indexId]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves volatility curve from Calypso", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Maturity type (default: ATM)",
				" Implied or Historical Vol (default: IRFWDVOL)",
				" id of the considered index"
        },
		{
				" Local_GetVolFromSummit",
				" RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " GetVolFromSummit",
                " Index,Currency,CvName,As of date,VolType,[MatIndex],[ImpOrHist],[indexId]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves volatility curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Maturity type (default: ATM)",
				" Implied or Historical Vol (default: IRFWDVOL)",
				" id of the considered index"
        },
		{
				" Local_GetVolFromSummit",
				" RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " ARM_GetVolFromSummit",
                " Index,Currency,CvName,As of date,VolType,[MatIndex],[ImpOrHist],[indexId]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_GetVolFromSummit,
                " Retrieves volatility curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Maturity type (default: ATM)",
				" Implied or Historical Vol (default: IRFWDVOL)",
				" id of the considered index"
        },
		{
				" Local_PXL_GetVolFromSummit",
				" RRRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " PXL_GetVolFromSummit",
                " Index,Currency,CvName,As of date,VolType,[MatIndex],[ImpOrHist],[indexId]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves volatility curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Maturity type (default: ATM)",
				" Implied or Historical Vol (default: IRFWDVOL)",
				" id of the considered index"
        },
		{
				" Local_PXL_GetVolFromSummit",
				" RRRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " PXL_ARM_GetVolFromSummit",
                " Index,Currency,CvName,As of date,VolType,[MatIndex],[ImpOrHist],[indexId]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves volatility curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Maturity type (default: ATM)",
				" Implied or Historical Vol (default: IRFWDVOL)",
				" id of the considered index"
        },
		{
				" Local_GetVolCubeFromCalypso",
                " RRRRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " ARM_GetVolCubeFromCalypso",
                " Index,Currency,CvName,As of date,VolType,[VolSuffix],[Type],[tenors],[SmileOrNot],[indexId]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves volatility curve from Calypso", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Volatility Name Suffix  (LT, RHO, NU, ...)",
                " Type Of Curve (Avaible  Type : SABR)",
                " Tenors (1M,3M,1Y,...) (default all in Calypso)",
                " SMILE, NOSMILE, ATMANDSMILE, (default: NOSMILE)",
				" id of the considered index" 
        },
		{
				" Local_GetVolCubeFromSummit",
                " RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " GetVolCubeFromSummit",
                " Index,Currency,CvName,As of date,VolType,[tenors],[SmileOrNot],[indexId],[SmileInter]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves volatility curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Tenors (1M,3M,1Y,...) (default all in Summit)",
                " SMILE, NOSMILE, ATMANDSMILE, (default: NOSMILE)",
				" id of the considered index",
				" smile interpolation : linear (default), spline",
        },		
		{
				" Local_GetVolCubeFromSummit",
                " RRRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " ARM_GetVolCubeFromSummit",
                " Index,Currency,CvName,As of date,VolType,[tenors],[SmileOrNot],[indexId], [SmileInter]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_GetVolCubeFromSummit,
                " Retrieves volatility curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Tenors (1M,3M,1Y,...)(default all in Summit)",
                " SMILE, NOSMILE, ATMANDSMILE, (default: NOSMILE)",
				" id of the considered index",
				" smile interpolation : linear (default), spline",
        },
		{
				" Local_PXL_GetVolCubeFromSummit",
                " RRRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " PXL_GetVolCubeFromSummit",
                " Index,Currency,CvName,As of date,VolType,[tenors],[SmileOrNot],[indexId]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves volatility curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Tenors (1M,3M,1Y,...)(default all in Summit)",
                " SMILE, NOSMILE, ATMANDSMILE, (default: NOSMILE)",
				" id of the considered index"
        },
		{
				" Local_PXL_GetVolCubeFromSummit",
                " RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " PXL_ARM_GetVolCubeFromSummit",
                " Index,Currency,CvName,As of date,VolType,[tenors],[SmileOrNot],[indexId]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves volatility curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Tenors (1M,3M,1Y,...)(default all in Summit)",
                " SMILE, NOSMILE, ATMANDSMILE, (default: NOSMILE)",
				" id of the considered index"
        },
		{
				" Local_ARM_BumpVolatility",
                " RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " ARM_BumpVolatility",
                " Curve,Value,[nthLine],[nthCol],[isCumul],[isAbsolute]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_BumpVolatility,
                " Creates a bumped volatility curve",
                " in Curve", 
                " value to bump",
				" nth Line (default : 0 corresponding to all the nth Column)",
				" nth Col (default : 0 corresponding to all the nth Line)",
				" is Cumulatived Bump? (default NO)",
				" is the bump absolute or relative? (default YES)"
        },
		{
				" Local_PXL_ARM_BumpVolatility",
                " RRRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " PXL_ARM_BumpVolatility",
                " Curve,Value,[nthLine],[nthCol],[isCumul],[isAbsolute]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a bumped volatility curve",
                " in Curve", 
                " value to bump",
				" nth Line (default : 0 corresponding to all the nth Column)",
				" nth Col (default : 0 corresponding to all the nth Line)",
				" is Cumulatived Bump? (default NO)",
				" is the bump absolute or relative? (default YES)"
        },
		{
				" Local_ARM_BumpSmile",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " ARM_BumpSmile",
                " Curve,Value,[Tenor],[nthLine],[nthCol],[isCumul],[isAbsolute]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                XLLOCALARM_CURVE_GROUP,
                " Creates a bumped volatility cube",
                " in vol cube", 
                " value to bump",
				" tenor (default : 0 corresponding to all the tenors)",
				" nth Line (default : 0 corresponding to all the nth Column)",
				" nth Col (default : 0 corresponding to all the nth Line)",
				" is Cumulatived Bump? (default NO)",
				" is the bump absolute or relative? (default YES)"
        },
		{
				" Local_PXL_ARM_BumpSmile",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " PXL_ARM_BumpSmile",
                " Curve,Value,[Tenor],[nthLine],[nthCol],[isCumul],[isAbsolute]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a bumped volatility curve",
                " in vol cube", 
                " value to bump",
				" tenor (default : 0 corresponding to all the tenors)",
				" nth Line (default : 0 corresponding to all the nth Column)",
				" nth Col (default : 0 corresponding to all the nth Line)",
				" is Cumulatived Bump? (default NO)",
				" is the bump absolute or relative? (default YES)"
        },
		{
				" Local_ARM_BumpHyperCubeSmile",
                " RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " ARM_BumpHyperCubeSmile",
                " HyperCube,Value,[CubeTenor],[SmileTenor],[nthLine],[nthCol],[isCumul],[isAbsolute]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                XLLOCALARM_CURVE_GROUP,
                " Creates a bumped hyperCube",
                " in hyperCube", 
                " value to bump",
				" cube tenor (default : 0 corresponding to all the tenors)",
				" smile tenor (default : 0 corresponding to all the tenors)",
				" nth Line (default : 0 corresponding to all the nth Column)",
				" nth Col (default : 0 corresponding to all the nth Line)",
				" is Cumulatived Bump? (default NO)",
				" is the bump absolute or relative? (default YES)"
        },
		{
				" Local_PXL_ARM_BumpHyperCubeSmile",
                " RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " PXL_ARM_BumpHyperCubeSmile",
                " Curve,Value,[CubeTenor],[SmileTenor],[nthLine],[nthCol],[isCumul],[isAbsolute]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a bumped hyperCube",
                " in hyperCube", 
                " value to bump",
				" cube tenor (default : 0 corresponding to all the tenors)",
				" smile tenor (default : 0 corresponding to all the tenors)",
				" nth Line (default : 0 corresponding to all the nth Column)",
				" nth Col (default : 0 corresponding to all the nth Line)",
				" is Cumulatived Bump? (default NO)",
				" is the bump absolute or relative? (default YES)"
        },
		{
				" Local_ARM_FXBumpRRorSTR",
                " RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " ARM_FXBumpRRorSTR",
                " Curve,Value,[nthLine],[nthCol],[spotFX],[isCumul],[isAbsolute],[isRR]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a bumped RR or STR volatility curve",
                " in Curve", 
                " value to bump",
				" nth Line from the end (default : 0 corresponding to all the nth Column)",
				" nth Col (default : 0 corresponding to all the nth Line)",
				" spot Forex (default : 0)",
				" is Cumulatived Bump? (default NO)",
				" is the bump absolute or relative? (default YES)",
				" bump RR or STR column? (default RR)"
        },
		{
				" Local_PXL_ARM_FXBumpRRorSTR",
                " RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " PXL_ARM_FXBumpRRorSTR",
                " Curve,Value,[nthLine],[nthCol],[spotFX],[isCumul],[isAbsolute],[isRR]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a bumped RR or STR volatility curve",
                " in Curve", 
                " value to bump",
				" nth Line from the end (default : 0 corresponding to all the nth Column)",
				" nth Col (default : 0 corresponding to all the nth Line)",
				" spot Forex (default : 0)",
				" is Cumulatived Bump? (default NO)",
				" is the bump absolute or relative? (default YES)",
				" bump RR or STR column? (default RR)"
        },
		{
				" Local_ARM_GetFXVolFromSummit",
				" RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " GetFXVolFromSummit",
				" Currency1,Currency2,As of date,[CvName],[ImpOrHist],[VolType]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_GetFXVolFromSummit,
                " Retrieves FX volatility curve from Summit", 
                " Currency1 (EUR, USD, ...)", 
                " Currency2 (EUR, USD, ...)",
				" As of date",
				" CvName (MO, ...)",
				" implied or historical Vol (default: FXVL)"
				" Type Vol ATM, SMILE, (default: ATM)"
        },
		{
				" Local_ARM_GetFXVolFromSummit",
				" RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " ARM_GetFXVolFromSummit",
				" Currency1,Currency2,As of date,[CvName],[ImpOrHist],[VolType]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves FX volatility curve from Summit", 
                " Currency1 (EUR, USD, ...)", 
                " Currency2 (EUR, USD, ...)",
				" As of date",
				" CvName (default: MO)",
				" implied or historical Vol (default: FXVL)",
				" Type Vol ATM, SMILE, (default: ATM)"
        },
		{
				" Local_PXL_ARM_GetFXVolFromSummit",
				" RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " PXL_GetFXVolFromSummit",
				" Currency1,Currency2,As of date,[CvName],[ImpOrHist],[VolType]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves FX volatility curve from Summit", 
                " Currency1 (EUR, USD, ...)", 
                " Currency2 (EUR, USD, ...)",
				" As of date",
				" CvName (default: MO)",
				" implied or historical Vol (default: FXVL)",
				" Type Vol ATM, SMILE, (default: ATM)"
        },
		{
				" Local_PXL_ARM_GetFXVolFromSummit",
				" RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " PXL_ARM_GetFXVolFromSummit",
				" Currency1,Currency2,As of date,[CvName],[ImpOrHist],[VolType]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves FX volatility curve from Summit", 
                " Currency1 (EUR, USD, ...)", 
                " Currency2 (EUR, USD, ...)",
				" As of date",
				" CvName (default: MO)",
				" implied or historical Vol (default: FXVL)",
				" Type Vol ATM, SMILE, (default: ATM)"
        },
		{
				" Local_ARM_GetNewFXVolFromSummit",
				" RRRRRRRRRRRR",						// 10 parametres d'entree + 1 parametre de retour
                " ARM_GetNewFXVolFromSummit",
				" ForCcy,DomCcy,As of date,CvName,[domBsZc],[forBsZc],[fxSpot],[Fwds],[WhatIsInterp],[correctSplineWithLinear],[isATM]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_GetFXVolFromSummit,
                " Retrieves FX volatility curve from Summit", 
                " Foriegn Currency (EUR, USD, ...)", 
                " Domestic Currency (JPY, USD, ...)",
				" As of date",
				" CvName (MO, ...)",
				" Spreaded Domestic Zc (default: NULL)",
				" Spreaded Foreign Zc (default: NULL)",
				" FX spot (default: 0)",
				" Forwards (default: NULL)",
				" WhatIsInterpolated (default: FXINTERP_STRIKE)",
				" correctSplineWithLinear (default: 1)",
				" Is ATM (default: NO)"
        },
		{
				" Local_ARM_GetInitialFXVolFromSummit",
				" RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " ARM_GetInitialFXVolFromSummit",
				" Currency1,Currency2,As of date,[CvName],[ImpOrHist],[VolType]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves FX volatility curve from Summit", 
                " Currency1 (EUR, USD, ...)", 
                " Currency2 (EUR, USD, ...)",
				" As of date",
				" CvName (MO, ...)",
				" implied or historical Vol (default: FXVOL)",
				" Type Vol ATM, SMILE, (default: ATM)"
        },
		{
				" Local_InterpolInStrikeFwdTime",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " ARM_InterpolInStrikeFwdTime",
                " Curve,Forward,Strike,MaturityDate,Precision,SigmaATM,[y2Null]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Fx Volatility computation", 
                " Curve", 
				" Forward", 
                " Strike",
				" Maturity Date to interpolate",
				" Precision",
				" SigmaATM base 100 ex: 50 for 50%",
				" y2Null(default: 0)"
        },
		{
				" Local_ComputeFxVol",
                " RRRRRRRRR",						// 8 parametres d'entree + 1 parametre de retour
                " ARM_ComputeFxVol",
                " FxVolCurveId,Asof,Matu,CalcMatu,FxSpot,Strike,DiscountCrvId,DividendCrvId",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Fx Volatility computation", 
                " Forex Vol Curve Id", 
				" Asof", 
                " Matu",
				" CalcMatu",
				" FxSpot",
				" Strike",
				" Discount Curve Id", 
				" Dividend Curve Id"
        },
		{
				" Local_ARM_GetInitialVolFromSummit",
                " RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " ARM_GetInitialVolFromSummit",
                " Index,Currency,CvName,As of date,VolType,[MatIndex]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_GetInitialVolFromSummit,
                " Retrieves volatility curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Maturity type (default: ATM)"
        },
		{
				" Local_ARM_GetFXCorrelFromSummit",
                " RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " ARM_GetFXCorrelFromSummit",
                " Currency1,index,Currency2,As of date,CvName,tenors",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieve FX volatility curve from Summit", 
                " Currency1 (EUR, USD, ...)", 
				" Index (LIBOR,EURIB,...)",
                " Currency2 (EUR, USD, ...)",
				" As of date",
				" CvName (MO, ...)",
				" list of tenors (1M,3M,...)"
        },
		{
				" Local_PXL_ARM_GetFXCorrelFromSummit",
                " RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " PXL_ARM_GetFXCorrelFromSummit",
                " Currency1,index,Currency2,As of date,CvName,tenors",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieve FX volatility curve from Summit", 
                " Currency1 (EUR, USD, ...)", 
				" Index (LIBOR,EURIB,...)",
                " Currency2 (EUR, USD, ...)",
				" As of date",
				" CvName (MO, ...)",
				" list of tenors (1M,3M,...)"
        },
		{
				" Local_ARM_GetCorrelFromSummit",
                " RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " ARM_GetCorrelFromSummit",
                " Currency1,Index1,Currency2,Index2,As of date,CvName",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieve Y/Y correlation curve from Summit", 
                " Currency1", 
				" Index1",
				" Currency2",
                " Index2",
				" As of date",
				" CvName (MO, ...)"
        },
		{
				" Local_PXL_ARM_GetCorrelFromSummit",
                " RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " PXL_ARM_GetCorrelFromSummit",
                " Currency1,Index1,Currency2,Index2,As of date,CvName",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieve Y/Y correlation curve from Summit", 
                " Currency1", 
				" Index1",
				" Currency2",
                " Index2",
				" As of date",
				" CvName (MO, ...)"
        },
		{
				" Local_ARM_GetNthMaturity",
                " RRR",						// 2 parametres d'entree + 1 parametre de retour
                " ARM_GETNTHMATURITY",
                " Curve,[nLine]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Get the nth maturity of the volcurve", 
                " Curve", 
                " line number (default -1 : return the number of line)"
        },
		{
				" Local_ARM_CONVERTFROMBSTONORMALVOL",
                " RRRRR",						// 4 parametres d'entree + 1 parametre de retour
                " ARM_CONVERTFROMBSTONORMALVOL",
                " volCurve,zc,[isSwoptVol],[inPct]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " convert BS fwd vol in normal vol", 
                " volCurve id",
				" zerocurve Id",
                " is swaption vol? (default 1)",
				" in percentage? (default 1)"
        },
		{
				" Local_PXL_ARM_CONVERTFROMBSTONORMALVOL",
                " RRRRR",						// 4 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CONVERTFROMBSTONORMALVOL",
                " volCurve,zccurve,[isSwoptVol],[inPct]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " convert BS fwd vol in normal vol", 
                " volCurve id",
				" zerocurve Id",
                " is swaption vol? (default 1)",
				" in percentage? (default 1)"
        },
		{
				" Local_ARM_CONVERTFROMNORMALTOBSVOL",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " ARM_CONVERTFROMNORMALTOBSVOL",
                " volCurve,zc,[isSwoptVol],[inPct],[post100]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " convert normal vol in BS fwd vol", 
                " volCurve id",
				" zerocurve Id",
                " is swaption vol? (default 1)",
				" input in percentage? (default 1)",
				" output in percentage? (default 1)"
        },
		{
				" Local_PXL_ARM_CONVERTFROMNORMALTOBSVOL",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CONVERTFROMNORMALTOBSVOL",
                " volCurve,zccurve,[isSwoptVol],[inPct],[post100]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " convert normal vol in BS fwd vol", 
                " volCurve id",
				" zerocurve Id",
                " is swaption vol? (default 1)",
				" in percentage? (default 1)",
				" output in percentage? (default 1)"
        },
		{
				" Local_ARM_CONV3FFROMSPOTTOFWDVOL_IN_PRCS",
                " RRRR",						// 3 parametres d'entree + 1 parametre de retour
                " ARM_CONV3FFROMSPOTTOFWDVOL_IN_PRCS",
                " tree3F,PRCSObject,[ForwardVolDates]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Convert spot vol in forward vol", 
                " 3F Lattice model id",
                " PRCS Object id",
                " ForwardVolDates Ref Value(default PRCS Reset Dates)"
        },
		{
				" Local_PXL_ARM_CONV3FFROMSPOTTOFWDVOL_IN_PRCS",
                " RRRR",						// 3 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CONV3FFROMSPOTTOFWDVOL_IN_PRCS",
                " tree3F,PRCSObject,[ForwardVolDates]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Convert spot vol in forward vol", 
                " 3F Lattice model id",
                " PRCS Object id",
                " ForwardVolDates RefValue (default PRCS Reset Dates)"
        },
		{
        		" Local_CreateInfCurv",		/// name of the C++ function
                " RRRRRRRRRRRRRR",			/// 14 parametres = 13 d'entree + 1 parametre de retour beware to include also Returns parameter
                " ARM_INF_CreateCurv",
				" asOfDate,indexName,CPIRefVal,CPIRefDate,maturities,values,[MonthlyInterp],[DailyInterp],[DCFMonthly],[DCFDaily],[ExtrapolType],[ResetManager],[SeasonManager]",
											/// first line in excel function wizard
                " 1",						/// visible in excel
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a forward inflation curve",
											/// description in excel in the wizard
                " Date",				//// description of the various parameters
				" index Name like CPALEMU",	
				" CPI Index Value",
				" CPI Reference Date",
				" Array of Maturities",
                " Array of Values",
				" Default per index: CPILINEAR, ZCLINEAR, ZCCTFWD",
				" Default per index: STEPWISESTART, STEPWISEMID, STEPWISEEND, STEPWISE, CPILINEAR, ZCLINEAR, ZCCTFWD",
				" Default per index: ACTUAL: A365, A360, 30/360, ACTREAL, ISMA, ACT29, NOBASE",
				" Default per index: ACTUAL: A365, A360, 30/360, ACTREAL, ISMA, ACT29, NOBASE",
				" Default per index: LASTTWO, MIDDLE, FIRSTTWO",
				" ResetManager Object",
				" SeasonManager Object"
        },
		{
        		" Local_GetInfZcFromSummit_Create",		/// name of the C++ function
                " RRRRR",			/// 5 parametres = 4 d'entree + 1 parametre de retour beware to include also Returns parameter
                " ARM_INF_GetZcFromSummit",
				" indexName,ccy,cvName,asOfDate",
											/// first line in excel function wizard
                " 1",						/// visible in excel
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a forward inflation curve from Summit Datas",
											/// description in excel in the wizard
                " index Name like EMU",//// description of the various parameters
				" currency",
				" Summit curve Name like MO",
				" As Of date"
        },
		{
        		" Local_PXL_GetInfZcFromSummit_Create",		/// name of the C++ function
                " RRRRR",			/// 5 parametres = 4 d'entree + 1 parametre de retour beware to include also Returns parameter
                " PXL_ARM_INF_GetZcFromSummit",
				" indexName,ccy,cvName,asOfDate",
											/// first line in excel function wizard
                " 0",						/// visible in excel
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a forward inflation curve from Summit Datas",
											/// description in excel in the wizard
                " index Name like EMU",//// description of the various parameters
				" currency",
				" Summit curve Name like MO",
				" As Of date"
        },
        {
        		" Local_PXL_CreateInfCurv",
                " RRRRRRRRRRRRRR",			/// 14 parametres = 13 d'entree + 1 parametre de retour beware to include also Returns parameter
                " PXL_ARM_INF_CreateCurv",
				" asOfDate,indexName,CPIRefVal,CPIRefDate,maturities,values,[MonthlyInterp],[DailyInterp],[DCFMonthly],[DCFDaily],[ExtrapolType],[ResetManager],[SeasonManager]", 
                " 0",						//// visible
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a forward inflation curve",
                " Date",				//// description of the various parameters
				" index Name like CPALEMU",	
				" CPI Index Value",
				" CPI Reference Date",
				" Array of Maturities",
                " Array of Values",
				" Default per index: CPILINEAR, ZCLINEAR, ZCCTFWD",
				" Default per index: STEPWISESTART, STEPWISEMID, STEPWISEEND, STEPWISE, CPILINEAR, ZCLINEAR, ZCCTFWD",
				" Default per index: ACTUAL: A365, A360, 30/360, ACTREAL, ISMA, ACT29, NOBASE",
				" Default per index: ACTUAL: A365, A360, 30/360, ACTREAL, ISMA, ACT29, NOBASE",
				" Default per index: LASTTWO, MIDDLE, FIRSTTWO",
				" ResetManager Object",
				" SeasonManager Object"
        },
        {
        		" Local_InfCurv_CPIInterp",
                " RRRRRRR",					///  7 parametres 6 d'entree + 1 parametre de retour
                " ARM_INF_InterpCPI",
				" Crvid,CPIDate,[DCFLag],[DailyInterp],[ResetLag],[weight]",
                " 1",						//// non visible
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_INF_InterpCPI,
                " Interpolates an inflation curve", 
				" Curve id", 
                " CPI Date", 
				" DCF Lag, default per index, like 3m",
				" Default from the curve, STEPWISESTART, STEPWISEMID, STEPWISEEND, STEPWISE, CPILINEAR, ZCLINEAR, ZCCTFWD",
                " CPI Lag, default per index, like 0m",
                " weight if using CPISTEPWISE, default 0, between 0 1",
        },
        {
        		" Local_InfCurv_ZCRateInterp",
                " RRRRRRR",					///  7 parametres 6 d'entree + 1 parametre de retour
                " ARM_INF_InterpZCRate",
				" Crvid,CPIDate,[DCFLag],[DailyInterp],[ResetLag],[weight]",
                " 1",						//// non visible
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_INF_InterpZCRate,
                " Interpolates an inflation curve", 
				" Curve id", 
                " CPI Date", 
				" DCF Lag, default per index, like 3m",
				" Default from the curve, STEPWISESTART, STEPWISEMID, STEPWISEEND, STEPWISE, CPILINEAR, ZCLINEAR, ZCCTFWD",
                " CPI Lag, default per index, like 0m",
                " weight if using CPISTEPWISE, default 0 between 0 1"
        },
        {
				" Local_ARM_CONV3FFROMSPOTTOFWDVOL",
                " RRRRRRRRRRRRRRRRRR",						// 17 parametres d'entree + 1 parametre de retour
                " ARM_CONV3FFROMSPOTTOFWDVOL",
                " AsOF,ZCDom,ZCfor,ZCdom_BS,ZCfor_BS,SwoptVolDom,SwoptVolFor,FXVol,MeanRevDom,MeanRevFor,FxRdCorrel,FxRfCorrel,RdRfCorrel,CutOff,VolLongTerm,CalibWithBasis?,ForwardVolDates ",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Convert spot vol in forward vol", 
                " AsOf Date",
                " Domestic Zero Curve id",
                " Foreign Zero Curve id",
                " Domestic BS Zero Curve id",
                " Foreign BS Zero Curve id",
                " Domestic Swopt vol curve id",
                " Foreign Swopt vol curve id",
                " FX vol curve id",
                " Domestic Mean Rev",
                " Foreign Mean Rev",
                " FX Rd Correl id",
                " FX Rf Correl id",
                " Rd Rf Correl id",
                " CutOff",
                " Vol spot long terme",
                " Calibration with basis ?",
                " Forward vol dates"
        },
		{
				" Local_PXL_ARM_CONV3FFROMSPOTTOFWDVOL",
                " RRRRRRRRRRRRRRRRRR",						// 17 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CONV3FFROMSPOTTOFWDVOL",
                " AsOF,ZCDom,ZCfor,ZCdom_BS,ZCfor_BS,SwoptVolDom,SwoptVolFor,FXVol,MeanRevDom,MeanRevFor,FxRdCorrel,FxRfCorrel,RdRfCorrel,CutOff,VolLongTerm,CalibWithBasis?,ForwardVolDates ",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Convert spot vol in forward vol", 
                " AsOf Date",
                " Domestic Zero Curve id",
                " Foreign Zero Curve id",
                " Domestic BS Zero Curve id",
                " Foreign BS Zero Curve id",
                " Domestic Swopt vol curve id",
                " Foreign Swopt vol curve id",
                " FX vol curve id",
                " Domestic Mean Rev",
                " Foreign Mean Rev",
                " FX Rd Correl id",
                " FX Rf Correl id",
                " Rd Rf Correl id",
                " CutOff",
                " Vol spot long terme",
                " Calibration with basis ?",
                " Forward vol dates"
        },
        {
				" Local_ARM_CONV3FFROMFWDTOSPOTVOL_IN_PRCS",
                " RRR",						// 2 parametres d'entree + 1 parametre de retour
                " ARM_CONV3FFROMFWDTOSPOTVOL_IN_PRCS",
                " tree3F,PRCSObject",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Convert forward vol in spot vol", 
                " 3F Lattice model id",
                " PRCS Object id"
        },
		{
				" Local_PXL_ARM_CONV3FFROMFWDTOSPOTVOL_IN_PRCS",
                " RRR",						// 2 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CONV3FFROMFWDTOSPOTVOL_IN_PRCS",
                " tree3F,PRCSObject",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Convert forward vol in spot vol",
                " 3F Lattice model id",
                " PRCS Object id"
        },
        {
				" Local_ARM_CONV3FFROMFWDTOSPOTVOL",
                " RRRRRRRRRRRRRRRRR",						// 16 parametres d'entree + 1 parametre de retour
                " ARM_CONV3FFROMFWDTOSPOTVOL",
                " AsOF,ZCDom,ZCfor,ZCdom_BS,ZCfor_BS,SwoptVolDom,SwoptVolFor,FXVol,MeanRevDom,MeanRevFor,FxRdCorrel,FxRfCorrel,RdRfCorrel,CutOff,VolLongTerm,CalibWithBasis?",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Convert forward vol in spot vol",
                " AsOf Date",
                " Domestic Zero Curve id",
                " Foreign Zero Curve id",
                " Domestic BS Zero Curve id",
                " Foreign BS Zero Curve id",
                " Domestic Swopt vol curve id",
                " Foreign Swopt vol curve id",
                " FX vol curve id",
                " Domestic Mean Rev",
                " Foreign Mean Rev",
                " FX Rd Correl id",
                " FX Rf Correl id",
                " Rd Rf Correl id",
                " CutOff",
                " Vol spot long terme",
                " Calibration with basis ?"
        },
		{
				" Local_PXL_ARM_CONV3FFROMFWDTOSPOTVOL",
                " RRRRRRRRRRRRRRRRR",						// 16 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CONV3FFROMFWDTOSPOTVOL",
                " AsOF,ZCDom,ZCfor,ZCdom_BS,ZCfor_BS,SwoptVolDom,SwoptVolFor,FXVol,MeanRevDom,MeanRevFor,FxRdCorrel,FxRfCorrel,RdRfCorrel,CutOff,VolLongTerm,CalibWithBasis?",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Convert forward vol in spot vol", 
                " AsOf Date",
                " Domestic Zero Curve id",
                " Foreign Zero Curve id",
                " Domestic BS Zero Curve id",
                " Foreign BS Zero Curve id",
                " Domestic Swopt vol curve id",
                " Foreign Swopt vol curve id",
                " FX vol curve id",
                " Domestic Mean Rev",
                " Foreign Mean Rev",
                " FX Rd Correl id",
                " FX Rf Correl id",
                " Rd Rf Correl id",
                " CutOff",
                " Vol spot long terme",
                " Calibration with basis ?"
        },
		{
				" Local_GenerateBasisAdjCurve",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " ARM_GenerateBasisAdjCurve",
                " ZC1,BS_ZC1,ZC2,BS_ZC2,[RetSpreadsOnly],[maturityVec],[BS_AsSpreads]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Generate Basis Adj Curve from 2 ccy curves",
                " first Curve id",
                " first BS Curve id",
                " Second Curve id",
                " Second BS Curve id",
                " Spds Crv only? (def: N)",
				" MatuVect (def: NULL)",
				" Given BS Curves are spread curves ? (def: N)"
		},
		{
				" Local_PXL_GenerateBasisAdjCurve",
                " RRRRRRRR",						// 7 parametres d'entree + 1 parametre de retour
                " PXL_ARM_GenerateBasisAdjCurve",
                " ZC1,BS_ZC1,ZC2,BS_ZC2,[RetSpreadsOnly],[maturityVec],[BS_AsSpreads]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Generate Basis Adj Curve from 2 ccy curves",
                " first Curve id",
                " first BS Curve id",
                " Second Curve id",
                " Second BS Curve id",
                " Spds Crv only? (def: N)",
				" MatuVect (def: NULL)",
				" Given BS Curves are spread curves ? (def: N)"
		},
		{
				" Local_GenForwardYield",
                " RRRRRRR",						// 6 parametres d'entree + 1 parametre de retour
                " ARM_GenForwardYield",
                " Curve,Expiry,Tenor,[IsSwapRate],[decompFreq],[daycount]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Swap Forward yield calculation",
                " Curve",
                " Expiry (from Spot Date !!!)",
				" Tenor",
				" Swap Fwd Rate or Zc Fwd Rate (default YES corresponding to swap Rate)",
				" decompounding frequency",
				" daycount (default -1)"
        },
		{
				" Local_SetVolCurveName",
                " RRR",						// 2 parametres d'entree + 1 parametre de retour
                " ARM_SetVolCurveName",
                " Curve,Name",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Name Affectation", 
                " Volatility Curve Id", 
                " Name"
        },
		{
				" Local_HyperCube",
                " RRR",		// 2 parametres d'entree + 1 parametre de retour
                " ARM_HyperCube",
                " Vol_Cubes,Keys",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates an hyper cube", 
                " Vol Cubes", 
                " Keys"
        },
		{
				" Local_PXL_HyperCube",
                " RRR",		// 2 parametres d'entree + 1 parametre de retour
                " PXL_ARM_HyperCube",
                " Vol_Cubes,Keys",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates an hyper cube", 
                " Vol Cubes", 
                " Keys"
        },
		{
				" Local_IndexIndexCorrelCube",
                " RRRRR",		// 4 parametres d'entree + 1 parametre de retour
                " ARM_IndexIndexCorrelCube",
                " Vol_Curves,Tenors1List,Tenors2List,[IntersurfaceInterpol]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates an index-index correl cube", 
                " Correl curves", 
                " Tenors1 list",
				" Tenors2 list",
				" InterSurface interpolation ? (Default : YES)"
        },
		{
				" Local_PXL_IndexIndexCorrelCube",
                " RRRRR",		// 4 parametres d'entree + 1 parametre de retour
                " PXL_ARM_IndexIndexCorrelCube",
                " Vol_Curves,Tenors1List,Tenors2List,[IntersurfaceInterpol]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates an index-index correl cube", 
                " Correl curves", 
                " Tenors1 list",
				" Tenors2 list",
				" InterSurface interpolation ? (Default : YES)"
        },
		{
				" Local_ComputeIndexIndexCorrel",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " ARM_ComputeIndexIndexCorrel",
                " CorrelCubeId,Tenor1,Tenor2,Expiry1,Expiry2",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Index-Index Correl computation", 
                " Correl Cube Id",
				" Tenor1",
				" Tenor2",
                " Expiry1",
				" Expiry2"
        },
		{
        		" Local_CreateCorrelator",/// name of the C++ function
                " RRRRRRRRR",						/// 9 parametres = 8 d'entree + 1 parametre de retour 
                " ARM_CreateCorrelator",
				" mktTags,[HyperDiagCurves],[IndexIndexCurves],[CorrCurves],[IndexCurves],[IRVolHyperCubes],[VolVolHyperCubes],[FXVolHyperCubes]",
                " 1",							/// visible in excel
                XLLOCALARM_SEC_GROUP,
                " ",
                " ",
                " Creates a correlation manager",
				" tags of the type Ccy sorted in alphabetical order! (array)",
				" Hyper Diag Cube curves (array)",
				" IndexIndex Cube curves optional (array)",
				" CORR curves optional (array)",
				" Index curves optional (array)",
				" IR/VOL HyperCube optional (array)",
				" VOL/VOL HyperCube optional (array)",
				" FX/VOL HyperCube optional (array)"
		},
		{
        		" Local_PXL_CreateCorrelator",/// name of the C++ function
                " RRRRRRRRR",						/// 9 parametres = 8 d'entree + 1 parametre de retour 
                " PXL_ARM_CreateCorrelator",
				" mktTags,HyperDiagCurves,[IndexIndexCurves],[CorrCurves],[IndexCurves],[IRVolHyperCubes],[VolVolHyperCubes],[FXVolHyperCubes]",
                " 0",							/// visible in excel
                XLLOCALARM_SEC_GROUP,
                " ",
                " ",
                " Creates a correlation manager",
				" tags of the type Ccy sorted in alphabetical order! (array)",
				" Hyper Diag Cube curves (array)",
				" IndexIndex Cube curves optional (array)",
				" CORR curves optional (array)",
				" Index curves optional (array)",
				" IR/VOL HyperCube optional (array)",
				" VOL/VOL HyperCube optional (array)",
				" FX/VOL HyperCube optional (array)"
		},
		{
				" Local_ComputeIdIdCorrelFromManager",	/// name of the C++ function
				" RRRRRRR",								/// 7 parametres = 6 d'entree + 1 parametre de retour
				" ARM_ComputeIndexIndexCorrelFromManager",
				" correlManagerId,tenor1,tenor2,expiry1,expiry2,[currency]",
				" 1",
				XLLOCALARM_SEC_GROUP,
				" ",
				" ",
				" computes index index correlation from the correlation manager",
				" correl manager object",
				" first tenor",
				" second tenor",
				" expiry for first tenor",
				" expiry for second tenor",
				" currency : optional by default currency of default country",
		},
		{
				" Local_ComputeHyperCorrelFromManager",	/// name of the C++ function
				" RRRRRRR",								/// 7 parametres = 6 d'entree + 1 parametre de retour
				" ARM_ComputeHyperCorrelFromManager",
				" correlManagerId,tenor1,tenor2,expiry,[currency],[isByExpiry]",
				" 1",
				XLLOCALARM_SEC_GROUP,
				" ",
				" ",
				" computes Hyper correlation from the correlation manager",
				" correl manager object",
				" first tenor",
				" second tenor",
				" expiry ",
				" currency : optional by default currency of default country",
				" isByExpiry: optional [N/Y] by default (N : correlation is not by expiry)",
		},
		{
				" Local_ComputeCorrSimpleFromManager",	/// name of the C++ function
				" RRRRRR",								/// 6 parametres = 5 d'entree + 1 parametre de retour
				" ARM_ComputeCorrSimpleFromManager",
				" correlManagerId,tenor,expiry,[currency],[isCorr]",
				" 1",
				XLLOCALARM_SEC_GROUP,
				" ",
				" ",
				" computes correlation from CORR or index curve in the correlation manager",
				" correl manager object",
				" tenor",
				" expiry ",
				" currency : optional by default currency of default country",
				" isCorr: optional [N/Y] by default (Y : correlation is from CORR VolCurve)",
		},
		{
				" Local_ComputeFXCorrelFromManager",	/// name of the C++ function
				" RRRRRR",								/// 6 parametres = 5 d'entree + 1 parametre de retour
				" ARM_ComputeFXCorrelFromManager",
				" correlManagerId,currency1, currency2,tenor,expiry",
				" 1",
				XLLOCALARM_SEC_GROUP,
				" ",
				" ",
				" computes FX correlation  in the correlation manager",
				" correl manager object",
				" First currency",
				" Second currency",
				" tenor",
				" expiry ",
		},
		{
				" Local_BumpVolatilityCorrelManager",
			    " RRRRRRRRR",					// 8 parametres d'entree + 1 parametre de retour
				" ARM_BumpVolatilityCorrelManager",
				" CorrelManagerId,TypeCorrel,Value,[nthLine],[nthCol],[isCumul],[isabsolute],[Currency]",
				" 1",
				XLLOCALARM_CURVE_GROUP,
				" ",
				" ",
				" Bump Correl Manager",
				" Correl Manager Id",
				" TypeCorrel : vector of string [CorrelManager: mktTag and intraMktTag / Correlator Manager: D or DIAG,I or INDEX,C or CORR, S or SIMPLE]",
				" Bump value [in percent]",
				" nthLine : double [default = 0]",
				" nthCol  : double [default = 0]",
				" isCumul : string [YES or NO, default = NO]",
				" isabsolute : string [YES or NO, default = YES]",
				" Currency : string [default = default currency]"
		},
		{
				" Local_PXL_BumpVolatilityCorrelManager",
			    " RRRRRRRRR",					// 8 parametres d'entree + 1 parametre de retour
				" ARM_PXL_BumpVolatilityCorrelManager",
				" CorrelManagerId,TypeCorrel,Value,[nthLine],[nthCol],[isCumul],[isabsolute],[Currency]",
				" 0",
				XLLOCALARM_CURVE_GROUP,
				" ",
				" ",
				" Bump Correl Manager",
				" Correl Manager Id",
				" TypeCorrel : vector of string [CorrelManager: mktTag and intraMktTag / Correlator Manager: D or DIAG,I or INDEX,C or CORR, S or SIMPLE]",
				" Bump value",
				" nthLine : double [default = 0]",
				" nthCol  : double [default = 0]",
				" isCumul : string [YES or NO, default = NO]",
				" isabsolute : string [YES or NO, default = YES]",
				" Currency : string [default = default currency]"
		},
		{
				" Local_GetCorrelDiagFromIndex",
				" RRRR",					// 3 parametres d'entree + 1 parametre de retour
				" ARM_GetCorrelDiagFromIndex",
				" IndexIndexCubeId,Tenor,[ListTenor]",
				" 1",
				XLLOCALARM_CURVE_GROUP,
				" ",
				" ",
				" Get Correl Diag from IndexIndexCube",
				" IndexIndex Cube Id",
				" first Tenor",
				" List of tenors: single or vector of string [default = NULL]"
		},	
		{
				" Local_PXL_GetCorrelDiagFromIndex",
				" RRRR",					// 3 parametres d'entree + 1 parametre de retour
				" ARM_PXL_GetCorrelDiagFromIndex",
				" IndexIndexCubeId,Tenor,[ListTenor]",
				" 0",
				XLLOCALARM_CURVE_GROUP,
				" ",
				" ",
				" Get Correl Diag from IndexIndexCube",
				" IndexIndex Cube Id",
				" first Tenor",
				" List of tenors: single or vector of string [default = NULL]"
		},	
		{
				" Local_CreateCorrelCubeByExpiry",
                " RRRRR",						// 4 parametres d'entree + 1 parametre de retour
                " ARM_CreateCorrelCubeByExpiry",
                " HyperCubeId,[TenorList],[ExpiryList],[IntersurfaceInterpol]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a correl cube by expiry from an hyper cube", 
                " Correl Cube Id",
				" Tenor list",
                " Expiry list",
				" InterSurface interpolation ? (Default : NO)"
        },
		{
				" Local_PXL_CreateCorrelCubeByExpiry",
                " RRRRR",						// 4 parametres d'entree + 1 parametre de retour
                " PXL_ARM_CreateCorrelCubeByExpiry",
                " HyperCubeId,[TenorList],[ExpiryList],[IntersurfaceInterpol]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Creates a correl cube by expiry from an hyper cube", 
                " Correl Cube Id",
				" Tenor list",
                " Expiry list",
				" InterSurface interpolation ? (Default : NO)"
        },
		{
				" Local_ComputeCorrelByExpiry",
                " RRRRR",						// 4 parametres d'entree + 1 parametre de retour
                " ARM_ComputeCorrelByExpiry",
                " CorrelCubeId,Expiry,Tenor1,Tenor2,",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Correl computation by expiry (expiry1 = expiry2)", 
                " Correl Cube Id",
				" Expiry : double",
				" Tenor1 : double",
				" Tenor2 : double"
        },
		{
				" Local_ComputeHyperCorrel",
                " RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " ARM_ComputeHyperCorrel",
                " CorrelCubeId,Tenor1,Tenor2,Expiry,[Moneyness]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Compute correl from hyper cube", 
                " Correl Cube Id",
				" Tenor1 : double",
				" Tenor2 : double",
				" Expiry : double",
				" Moneyness : double"
        },
		{
				" Local_GetMixtureParamsFromSummit",
				" RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " ARM_GetMixtureParamsFromSummit",
                " Index,Currency,CvName,As of date,[Interp meth]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves mixture parameters from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
				" LINEAR, STEPUPRIGHT... (default: LINEAR)"
		},
		{
				" Local_PXL_GetMixtureParamsFromSummit",
				" RRRRRR",						// 5 parametres d'entree + 1 parametre de retour
                " PXL_ARM_GetMixtureParamsFromSummit",
                " Index,Currency,CvName,As of date,[Interp meth]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves mixture parameters from Summit"
		},
		{
				" Local_SABRVol",
                " RRRRRRRR",					// 7 parametres d'entree + 1 parametre de retour
                " ARM_SABRVOL",
				" SigmaOrAlpha,Rho,Nu,[Beta],[SigmaOrAlphaFlag],[ModelType],[Weight]",
                " 1",
                XLLOCALARM_SEC_GROUP,
                " ",
                " ",
                " Create a SABR structure.", 
				" Sigma or Alpha curve", 
                " Rho curve", 
				" Nu curve",
                " Beta curve (default: NULL)",
				" Sigma or Alpha Flag (default: 1 for Sigma)",
				" Smiled Model Type: LD, SABR_G, SABR_A, SABR_IMPLNVOL, SABR_WEIGHT (default: LD)",
				" Weight if model type is SABR_WEIGHT (default: 0.5)"
        },
		{
				" Local_PXL_SABRVol",
                " RRRRRRRR",					// 7 parametres d'entree + 1 parametre de retour
                " PXL_ARM_SABRVOL",
				" SigmaOrAlpha,Rho,Nu,[Beta],[SigmaOrAlphaFlag],[ModelType],[Weight]",
                " 0",
                XLLOCALARM_SEC_GROUP,
                " ",
                " ",
                " Create a SABR structure.", 
				" Sigma or Alpha curve", 
                " Rho curve", 
				" Nu curve",
                " Beta curve (default: NULL)",
				" Sigma or Alpha Flag (default: 1 for Sigma)",
				" Smiled Model Type: LD, SABR_G, SABR_A, SABR_IMPLNVOL, SABR_WEIGHT (default: LD)",
				" Weight if model type is SABR_WEIGHT (default: 0.5)"
        },
		{
				" Local_GetSABRVolFromSummit",
				" RRRRRRRRRRRR",					// 11 parametres d'entree + 1 parametre de retour
                " ARM_GetSABRVolFromSummit",
                " Index,Currency,CvName,As of date,VolType,[MatIndex],[ImpOrHist],[indexId],[SigmaOrAlpha],[ModelType],[Weight]",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves volatility curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Maturity type (default: ATM)",
				" Implied or Historical Vol (default: IRFWDVOL)",
				" id of the considered index",
				" sigma or alpha flag",
				" Smiled Model Type: LD, SABR_G, SABR_A, SABR_IMPLNVOL, SABR_WEIGHT (default: LD)",
				" Weight if model type is SABR_WEIGHT (default: 0.5)"
        },
		{
				" Local_PXL_GetSABRVolFromSummit",
				" RRRRRRRRRRRR",						// 11 parametres d'entree + 1 parametre de retour
                " PXL_GetSABRVolFromSummit",
                " Index,Currency,CvName,As of date,VolType,[MatIndex],[ImpOrHist],[indexId],[SigmaOrAlphaFlag],[ModelType],[Weight]",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                " ",
                " Retrieves volatility curve from Summit", 
                " Index (EURIB, PIBOR, ...)", 
                " Currency (EUR, USD, ...)",
				" CvName (MO, ...)",
				" As of date",
                " Volatility type",
                " Maturity type (default: ATM)",
				" Implied or Historical Vol (default: IRFWDVOL)",
				" id of the considered index",
				" sigma or alpha flag",
				" Smiled Model Type: LD, SABR_G, SABR_A, SABR_IMPLNVOL, SABR_WEIGHT (default: LD)",
				" Weight if model type is SABR_WEIGHT (default: 0.5)"
        },
		{
				" Local_OldZcCurve",
                " RRR",						// 2 parametres d'entree + 1 parametre de retour
                " ARM_OldZcCurve",
                " zcId,asOfDate",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCLINT,
                " Initial Zero Curve",
                " AsOfDate"
        },
		{
				" Local_PXL_OldZcCurve",
                " RRR",						// 2 parametres d'entree + 1 parametre de retour
                " PXL_ARM_OldZcCurve",
                " zcId,asOfDate",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCLINT,
                " Initial Zero Curve",
                " AsOfDate"
        },
		{
				" Local_OldVolCurve",
                " RRR",						// 2 parametres d'entree + 1 parametre de retour
                " ARM_OldVolCurve",
                " volId,asOfDate",
                " 1",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCLINT,
                " Initial Vol Curve",
                " AsOfDate"
        },
		{
				" Local_PXL_OldVolCurve",
                " RRR",						// 2 parametres d'entree + 1 parametre de retour
                " PXL_ARM_OldVolCurve",
                " volId,asOfDate",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
                IDH_ARM_ZCLINT,
                " Initial Vol Curve",
                " AsOfDate"
        },
		{
				" Local_ARM_ConvIndexInYearTerm",
                " RRRR",						// 3 parametres d'entree + 1 parametre de retour
                " ARM_ConvIndexInYearTerm",
                " index,asOfDate,currency",
                " 0",
                XLLOCALARM_CURVE_GROUP,
                " ",
				" ",
                " Convert an index into a year term",
                " Index (ex:EURIBOR3M,CMS2)",
                " AsOfDate (ex:36202)",
				" Currency (ex:EUR)",
        },

		// END YIELD AND VOL CURVES