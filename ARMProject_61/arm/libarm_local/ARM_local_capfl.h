#ifndef ARM_LOCAL_CAPFL_H
#define ARM_LOCAL_CAPFL_H



extern long ARMLOCAL_LIBORCF (double startDate,
							  double endDate,
							  long isItCapOrFloor,
							  long strikeType,
							  double strike,
							  long liborType,
							  double spread,
							  long resetFreq,
							  long payFreq,
						      bool ccyIsObject,
						      const CCString& ccyName,
							  ARM_result& result,
							  long objId = -1);

extern long ARMLOCAL_LIBORFLEXCF (double startDate,
								  double endDate,
								  long isItCapOrFloor,
								  double strike,
								  long nbEx,
								  long exerciseType,
								  long liborType,
								  double spread,
								  long resetFreq,
								  long payFreq,
							      bool ccyIsObject,
							      const CCString& ccyName,
								  ARM_result& result,
								  long objId = -1);

extern long ARMLOCAL_CAPFLOOR (long swapLegId,
							   long capOrFloor,
							   long strikeType,
							   double strike,
							   ARM_result& result,
							   long objId = -1);

extern long ARMLOCAL_FLEXCF (long swapLegId,
							 long isItCapOrFloor,
							 double strike,
							 long nbEx,
							 long exerciseType,
							 ARM_result& result,
							 long objId = -1);

extern long ARMLOCAL_MATCAPFLOOR (long swapLegId,
								  double annuity,
								  double initNominal,
								  long isTRI,
								  long capOrFloor,
								  double coeff,
								  double firstTRIstrike,
								  long minStrikesId,
								  long isDigitalPayoff,
								  double increasingCoef,
								  double maxMatDate,
                                  ARM_result& result,
								  long objId = -1);

extern long ARMLOCAL_STICKY (long swapLegId,
							 long capOrFloor,
							 double strike,
							 const VECTOR<double>& spreadDates,
							 const VECTOR<double>& spreadValues,
							 long kRefValId,
							 ARM_result& result,
							 long objId = -1);

extern long ARMLOCAL_SPREADOPTION (double startDate,
								   double endDate,
								   long capOrFloorId,
								   long strike_type,
								   double strike,
								   long liborType1Id,
								   long liborType2Id,
								   double weight1,
								   bool weight1IsReferenceValue,
								   long weight1Id,
								   double weight2,
								   bool weight2IsReferenceValue,
								   long weight2Id,
								   long dayCountId,
								   long resetFreqId,
								   long payFreqId,
								   long resetTimingId,
								   long payTimingId,
								   long ccyId,
                                   long resetGap,
								   long fixing1Type,
								   long fixing1Id, 
								   VECTOR<double>& fixing1,
								   long fixing2Type,
								   long fixing2Id,
								   VECTOR<double>& fixing2,
								   long intRule,
								   long stubRule,
								   int cptStrikeMethod,
								   int computedFormula,								   
								   VECTOR<double>& calibInfos,
								   ARM_result& result,
								   long objId = -1);

extern long ARMLOCAL_QUANTOSPREADOPTION (	double startDate,
											double endDate,
											long capOrFloor,
											long strike_type,
											double strike,
											long liborIdx1Id,
											long liborIdx2Id,
											double Idx1weight,
											double Idx2weight,
											long Idx1fixingsId,
											long Idx2fixingsId,
											double idx1spread,
											double idx2spread,
											int cptStrikeMethod,
											int computedFormula,
											long CcyId,
											long dayCountId,
											long resetFreqId,
											long payFreqId,
											long resetTimingId,
											long payTimingId,
											long intRuleId,
											long stubRuleId,
											long resetGap,
											char* resetCal,
											char* payCal,
											long fwdRule,
											char* RefDate,
											long notionalId,
											ARM_result& result,
											long objId = -1);

extern long ARMLOCAL_SPREADOPTIONWithLegs ( long firstlegId,
											long secondlegId,
											long capOrFloorId,
											long strike_type,
											double strike,
											double weight1,
											bool weight1IsReferenceValue,
											long weight1Id,
											double weight2,
											bool weight2IsReferenceValue,
											long weight2Id,
											long fixing1_type,
											long fixing1Id, 
											VECTOR<double>& fixing1,
											long fixing2_type,
											long fixing2Id,
											VECTOR<double>& fixing2,
											int cptStrikeMethod,
											int computedFormula,
											ARM_result& result,
											long objId=-1);

extern long ARMLOCAL_SPREADDIGITAL( double startDate,
									double endDate,
									long capOrFloorId,
									long strike_type,
									double strike,
									long payoff_type,
									double payoff,
									long liborType1Id,
									long liborType2Id,
									double weight1,
									double weight2,
									long dayCountId,
									long resetFreqId,
									long payFreqId,
									long resetTimingId,
									long payTimingId,
									long ccyId,
									long resetGap,
									double spread1,
									double spread2,
									long fixing1Type,
									long fixing1Id, 
									VECTOR<double>& fixing1,
									long fixing2Type,
									long fixing2Id,
									VECTOR<double>& fixing2,
									long intRule,
									long stubRule,
									long slopeFlag,
									int cptStrikeMethod,
									int computedFormula,
									VECTOR<double>& calibInfos,
									ARM_result& result,
									long objId=-1);

extern long ARMLOCAL_QUANTOSPREADDIGITAL (	double startDate,
											double endDate,
											long capOrFloor,
											long strike_type,
											double strikes,
											long payoff_type,
											double payoff,
											long liborIdx1Id,
											long liborIdx2Id,
											double Idx1weight,
											double Idx2weight,
											long Idx1fixingsId,
											long Idx2fixingsId,
											double idx1spread,
											double idx2spread,
											long slopeFlag,
											int cptStrikeMethod,
											int computedFormula,
											long CcyId,
											long dayCountId,
											long resetFreqId,
											long payFreqId,
											long resetTimingId,
											long payTimingId,
											long intRuleId,
											long stubRuleId,
											long resetGap,
											char* resetCal,
											char* payCal,
											long fwdRule,
											char* RefDate,
											long notionalId,
											ARM_result& result,
											long objId = -1);

extern long ARMLOCAL_SPREADDIGITALWithLegs( long firstlegId,
											long secondlegId,
											long capOrFloorId,
											long strike_type,
											double strike,
											long payoff_type,
											double payoff,
											double weight1,
											double weight2,
											double spread1,
											double spread2,
											long fixing1Type,
											long fixing1Id, 
											VECTOR<double>& fixing1,
											long fixing2Type,
											long fixing2Id,
											VECTOR<double>& fixing2,
											long slopeFlag,
											int cptStrikeMethod,
											int computedFormula,
											ARM_result& result,
											long objId=-1);

extern long ARMLOCAL_SPREADDIGITALFLT(	double startDate,
										double endDate,
										long capOrFloorId,
										long strike_type,
										double strike,
										long payoffliborType1Id,
										long liborType1Id,
										long liborType2Id,
										double weight1,
										double weight2,
										long dayCountId,
										long resetFreqId,
										long payFreqId,
										long resetTimingId,
										long payTimingId,
										long ccyId,
										long resetGap,
										double spread1,
										double spread2,
										long fixing1Type,
										long fixing1Id, 
										VECTOR<double>& fixing1,
										long fixing2Type,
										long fixing2Id,
										VECTOR<double>& fixing2,
										long intRule,
										long stubRule,
										long slopeFlag,
										int cptStrikeMethod,
										int computedFormula,
										ARM_result& result,
										long objId=-1);

extern long ARMLOCAL_QUANTOSPREADDIGITALFLT (	double startDate,
												double endDate,
												long capOrFloor,
												long strike_type,
												double strikes,
												long liborIdx1Id,
												long liborIdx2Id,
												long liborIdxPId,
												double Idx1weight,
												double Idx2weight,
												long Idx1fixingsId,
												long Idx2fixingsId,
												double idx1spread,
												double idx2spread,
												long slopeFlag,
												int cptStrikeMethod,
												int computedFormula,
												long CcyId,
												long dayCountId,
												long resetFreqId,
												long payFreqId,
												long resetTimingId,
												long payTimingId,
												long intRuleId,
												long stubRuleId,
												long resetGap,
												char* resetCal,
												char* payCal,
												long fwdRule,
												char* RefDate,
												long notionalId,
												ARM_result& result,
												long objId = -1);

extern long ARMLOCAL_SPREADCORRIDOR(double startDate,
									double endDate,
									long capOrFloorId,
									long strike_type,
									double strike,
									long payIndexId,
									long liborType1Id,
									long liborType2Id,
									double weight1,
									double weight2,
									long dayCountId,
									long resetFreqId,
									long payFreqId,
									long resetTimingId,
									long payTimingId,
									long ccyId,
									long resetGap,
									double spread1,
									double spread2,
									long fixing1Type,
									long fixing1Id, 
									VECTOR<double>& fixing1,
									long fixing2Type,
									long fixing2Id,
									VECTOR<double>& fixing2,
									long intRule,
									long stubRule,
									long slopeFlag,
									int cptStrikeMethod,
									long payMargin_type,
									double payIdxMargin,
									double payWeight,
									long fixing3Type,
									long fixing3Id,
									VECTOR<double>& fixing3,
									int freezeFixing,
									int computedFormula,
									ARM_result& result,
									long objId=-1);

extern long ARMLOCAL_SPREADCORRIDORVMS(double startDate,
									   double endDate,
									   long capOrFloorId,
									   long strike_type,
									   double strike,
									   long payIndexId,
									   long CMSIndexes1Id,
									   long CMSIndexes2Id,
									   double weight1,
									   double weight2,
									   long dayCountId,
									   long resetFreqId,
									   long payFreqId,
									   long resetTimingId,
									   long payTimingId,
									   long ccyId,
									   long resetGap,
									   double spread1,
									   double spread2,
									   long Fixing1Id, 
									   long Fixing2Id,
									   long intRule,
									   long stubRule,
									   long slopeFlag,
									   int cptStrikeMethod,
									   long payMargin_type,
									   double payMargin,
									   double payWeight,
									   long FixingPayId,
									   int freezeFixing,
									   int computedFormula,
									   ARM_result& result,
									   long objId = -1);

extern long ARMLOCAL_QUANTOSPREADCORRIDOR (	double startDate,
											double endDate,
											long capOrFloor,
											long strike_type,
											double strike,
											long liborIdx1Id,
											long liborIdx2Id,
											long liborIdxPId,
											long pFixedRate,
											double Idx1weight,
											double Idx2weight,
											double IdxPweight,
											long Idx1fixingsId,
											long Idx2fixingsId,
											long IdxPfixingsId,
											double idx1spread,
											double idx2spread,
											long slopeFlag,
											int cptStrikeMethod,
											int computedFormula,
											long CcyId,
											long dayCountId,
											long resetFreqId,
											long payFreqId,
											long resetTimingId,
											long payTimingId,
											long intRuleId,
											long stubRuleId,
											long resetGap,
											char* resetCal,
											char* payCal,
											char* payIndexResetCal,
											long fwdRule,
											char* RefDate,
											long notionalId,
											int freezeFixing,
											ARM_result& result,
											long objId = -1);


extern long ARMLOCAL_CORRIDORDBLCONDITION(double startDate,
								   double endDate,
								   long DigitalCapFloorId,
								   long SpreadCapFloorId,
								   long digitalBarrier_Type,
								   double digitalBarrier,
								   long spreadBarrier_Type,
								   double spreadBarrierId,
								   long payIndexId,
								   long payIndexMargin_Type,
								   double payIndexMargin,
								   long digitalIndex1Id,
								   long digitalIndex2Id,
								   long digitalIndex3Id,
								   long digitalIndex4Id,
								   double weight1,
								   double weight2,
								   double weight3,
								   double weight4,
								   long fixing1Id,
								   long fixing2Id,
								   long fixing3Id,
								   long fixing4Id,
								   long fixingPayId,
								   long dayCountId,
								   long resetFreqId,
								   long payFreqId,
								   long resetTimingId,
								   long payTimingId,
								   long CcyId,
								   long resetGap,
								   double spread,
								   double digitalSpread,
								   long intRuleId,
								   long stubRuleId,
								   char* resetCal,
								   char* payCal,
								   double payWeight,
								   int freezeFixing,
								   long digitalSpreadcorrelId,
								   long shiftVolCorrel_type,
								   double ShiftVolCorrelId,
								   bool isCorrelCorrection,
								   ARM_result& result,
								   long objId = -1);

extern long ARMLOCAL_CHECK_CORRELS(VECTOR<double>& expiries,
								VECTOR<long>& tenors,
								long modelId,
								VECTOR<double>& resultMatrix,
								long& resultNbRows,
								long& resultNbCols,
								ARM_result& result);

extern long ARMLOCAL_CHECK_RA2_CORRELS_STATUTS(long RA2Id,
										long modelId,
										VECTOR<double>& resultMatrix,
										long& resultNbRows,
										long& resultNbCols,
										ARM_result& result);

extern long ARMLOCAL_SPREADDIGITALFLTWithLegs(	long firstlegId,
												long secondlegId,
												long capOrFloorId,
												long strike_type,
												double strike,
												long payoffliborType1Id,
												double weight1,
												double weight2,
												double spread1,
												double spread2,
												long fixing1Type,
												long fixing1Id, 
												VECTOR<double>& fixing1,
												long fixing2Type,
												long fixing2Id,
												VECTOR<double>& fixing2,
												long slopeFlag,
												int cptStrikeMethod,
												int computedFormula,
												ARM_result& result,
												long objId=-1);

extern long ARMLOCAL_CapLetPrice (long secId,
								  long modId,
								  long numEx,
								  ARM_result& result);

extern long ARMLOCAL_RATCHET (long swapLegId,
							  long capOrFloor,
							  double strike,
							  const VECTOR<double>& spreadDates,
							  const VECTOR<double>& spreadValues,
							  const VECTOR<double>& correlDates,
							  const VECTOR<double>& correlValues,
							  const VECTOR<double>& fwdVolsDates,
							  const VECTOR<double>& fwdVolsValues,
							  ARM_result& result,
							  long objId = -1);

extern long ARMLOCAL_DIGITAL (long swapLegId,
							  long isItCapOrFloorId,
							  long strikeType,
							  double strike,
							  double spread1,
							  double spread2,
							  long payoffType,
							  double payoff,
							  ARM_result& result,
							  long objId = -1);

extern long ARMLOCAL_DUALCAP (double startDate,
							  double endDate,
							  long isItCapOrFloorId,
							  long strikeType,
							  double strike,
							  long liborType1Id,
							  long liborType2Id,
							  long daycountId,
							  long FreqId,
							  long resetTiming1Id,
							  long resetTiming2Id,
							  double resetGap1,
							  double resetGap2,
							  long ccy1Id,
							  long ccy2Id,
							  long discountCcyId,
							  CCString resetCal1Id,
							  CCString resetCal2Id,
							  ARM_result& result,
							  long objId = -1);



CCString CorrespondingCapFloorClasswId( long swapLegId );

extern long ARMLOCAL_ARM_SetLastFixing(long cfLegId,
										double rate,
										double beforeLastFixing,
										double asof,
										double resetDate,
										ARM_result& result,
										long objId);

extern long ARMLOCAL_GlobalCap (long swaplegId,
								long capOrFloor,
								double globalCapValue,
								long globalCapSpreadsId,
								long globalCapFixedRatesId,
								long globalCapBarriersId,
								double finalRatio,
								int nbIter,
								long globalCapPastFixingsId,
								ARM_result& result,
								long objId = -1);

#endif /* ARM_LOCAL_CAPFL_H */