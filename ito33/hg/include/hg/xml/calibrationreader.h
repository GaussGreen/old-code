/////////////////////////////////////////////////////////////////////////////
// Name:        hg/xml/calibrationreader.h
// Purpose:     reading HG calibration XML files
// Created:     2005/05/20
// RCS-ID:      $Id: calibrationreader.h,v 1.2 2006/08/19 23:46:52 wang Exp $
// Copyright:   (c) 2005 - Trilemma LLP
/////////////////////////////////////////////////////////////////////////////

/**
    @file hg/xml/calibrationreader.h
    @brief Classes for reading calibration XML-files generated by HG.
 */

#ifndef _HG_XML_CALIBRATIONREADER_H_
#define _HG_XML_CALIBRATIONREADER_H_

#include "ito33/sharedptr.h"

#include "ito33/xml/reader.h"

namespace ito33
{

namespace finance
{
  class Derivatives;
}

namespace hg
{

  class Parametrization;

namespace XML
{

/**
    This class reads calibration XML documents and provides easy access to the 
    data in them.

    Right now XML data can only be loaded from a file but we could also load it
    from a string if needed. Unfortunately, xmlwrapp doesn't take std::istream
    as input...
 */
class CalibrationReader : public ito33::XML::Reader
{
public:
 
  /**
     Load XML from the given file.

     If an error occurs while loading date, i.e. file is not found, couldn't be
     read or doesn't contain a valid XML document with the IHG roto tag, an
     exception is thrown.

     @param filename the name of the file to read XML from
   */
  CalibrationReader(const char *filename)
    : ito33::XML::Reader(filename)
  { }

  // Default dtor OK

  /**
     Read the parametrization from XML.

     @param visitor filled in with information we read from node
   */
  shared_ptr<Parametrization> ReadParametrization() const;

  /**
     Read the instruments used to calibrate the underlying process.
   */
  shared_ptr<finance::Derivatives> ReadDerivatives() const;


private:

  NO_COPY_CLASS(CalibrationReader);
};

} // namespace XML

} // namespace hg

} // namespace ito33

#endif // _HG_XML_CALIBRATIONREADER_H_
