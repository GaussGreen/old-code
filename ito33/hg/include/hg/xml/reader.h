/////////////////////////////////////////////////////////////////////////////
// Name:        hg/xml/reader.h
// Purpose:     reading pricing HG XML files
// Created:     2005/04/19
// RCS-ID:      $Id: reader.h,v 1.3 2006/08/19 23:46:52 wang Exp $
// Copyright:   (c) 2005 - Trilemma LLP
/////////////////////////////////////////////////////////////////////////////

/**
    @file hg/xml/reader.h
    @brief Classes for reading pricing XML-files generated by HG.
 */

#ifndef _HG_XML_READER_H_
#define _HG_XML_READER_H_

#include "ito33/sharedptr.h"

#include "ito33/xml/reader.h"

namespace ito33
{

namespace finance
{
  class ModelOutput;
}

namespace hg
{

class TheoreticalModel;


namespace XML
{

/**
    This class reads pricing XML documents and provides easy access to the 
    data in them.

    Right now XML data can only be loaded from a file but we could also load it
    from a string if needed. Unfortunately, xmlwrapp doesn't take std::istream
    as input...
 */
class Reader : public ito33::XML::Reader
{
public:
  
  /**
     Load XML from the given file.

     If an error occurs while loading date, i.e. file is not found, couldn't be
     read or doesn't contain a valid XML document with the HG root tag, an
     exception is thrown.

     @param filename the name of the file to read XML from
   */
  Reader(const char *filename) : ito33::XML::Reader(filename)
  {
  }

  Reader(const char *data, size_t len) : ito33::XML::Reader(data, len)
  {
  }

  // default dtor OK

  /**
     Fill in the passed in ModelOutput object with the data from XML.

     @param output the object to fill in
     @return true if ok, false if output tag hasn't been found
   */
  bool ReadOutput(finance::ModelOutput& output) const;

  /**
     Fill in the passed in TheoreticalModel object with model parameters.

     @param pModel the object to fill in
   */
  void ReadTheoreticalModel(shared_ptr<TheoreticalModel>& pModel) const;


private:

  NO_COPY_CLASS(Reader);
};


} // namespace XML

} // namespace hg

} // namespace ito33

#endif // #ifndef _HG_XML_READER_H_
