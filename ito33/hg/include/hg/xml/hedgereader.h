/////////////////////////////////////////////////////////////////////////////
// Name:        hg/xml/hedgereader.h
// Purpose:     reading HG XML files for hedging
// Created:     2005/06/10
// RCS-ID:      $Id: hedgereader.h,v 1.3 2006/08/19 23:46:52 wang Exp $
// Copyright:   (c) 2005 - Trilemma LLP
/////////////////////////////////////////////////////////////////////////////

/**
    @file hg/xml/hedgereader.h
    @brief Classes for reading XML-files generated by HG during hedging.
 */

#ifndef _HG_XML_HEDGEREADER_H_
#define _HG_XML_HEDGEREADER_H_

#include "ito33/sharedptr.h"

#include "hg/xml/reader.h"

namespace ito33
{

namespace finance
{
  class Derivatives;
}

namespace hg
{


namespace XML
{

/**
    This class reads pricing XML documents and provides easy access to the 
    data in them.

    Right now XML data can only be loaded from a file but we could also load it
    from a string if needed. Unfortunately, xmlwrapp doesn't take std::istream
    as input...
 */
class HedgeReader : public Reader
{
public:
  
  /**
     Load XML from the given file.

     If an error occurs while loading date, i.e. file is not found, couldn't be
     read or doesn't contain a valid XML document with the HG root tag, an
     exception is thrown.

     @param filename the name of the file to read XML from
   */
  HedgeReader(const char *filename) : Reader(filename)
  {
  }

  HedgeReader(const char *data, size_t len) : Reader(data, len)
  {
  }

  // default dtor OK

  /**
     Read the target derivative, if any.
  
     @return The target instrument, if any
   */
  shared_ptr<finance::Derivative> ReadTarget() const;

  /**
     Read the hedge instruments, if any.

     @return hedge instruments, if any 
   */
  shared_ptr<finance::Derivatives> ReadHedgeInstruments() const;

  /**
     Read the compute hero flag, if present.

     If the flag is missing, default to false

     @return compute hero false, or false if the flag is missing
   */
  bool ReadComputeHERO() const;


private:

  NO_COPY_CLASS(HedgeReader);
};


} // namespace XML

} // namespace hg

} // namespace ito33

#endif // #ifndef _HG_XML_HEDGEREADER_H_
