
// This file was generated by MIDL from the Excel's interface
// (part we are interested in, extracted using OleView).
// Should be regenerated, if more interfaces needed.
// Anton.


/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 5.01.0164 */
/* at Wed Mar 03 09:32:19 2004
 */
/* Compiler settings for G:\Prog\rtd\excel.idl:
    Os (OptLev=s), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __excel_h__
#define __excel_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __IRTDUpdateEvent_FWD_DEFINED__
#define __IRTDUpdateEvent_FWD_DEFINED__
typedef interface IRTDUpdateEvent IRTDUpdateEvent;
#endif 	/* __IRTDUpdateEvent_FWD_DEFINED__ */


#ifndef __IRtdServer_FWD_DEFINED__
#define __IRtdServer_FWD_DEFINED__
typedef interface IRtdServer IRtdServer;
#endif 	/* __IRtdServer_FWD_DEFINED__ */


/* header files for imported files */
#include "unknwn.h"
#include "oaidl.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

#ifndef __IRTDUpdateEvent_INTERFACE_DEFINED__
#define __IRTDUpdateEvent_INTERFACE_DEFINED__

/* interface IRTDUpdateEvent */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_IRTDUpdateEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A43788C1-D91B-11D3-8F39-00C04F3651B8")
    IRTDUpdateEvent : public IDispatch
    {
    public:
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE UpdateNotify( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HeartbeatInterval( 
            /* [retval][out] */ long __RPC_FAR *plRetVal) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HeartbeatInterval( 
            /* [in] */ long plRetVal) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Disconnect( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRTDUpdateEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IRTDUpdateEvent __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IRTDUpdateEvent __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IRTDUpdateEvent __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IRTDUpdateEvent __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IRTDUpdateEvent __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IRTDUpdateEvent __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IRTDUpdateEvent __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UpdateNotify )( 
            IRTDUpdateEvent __RPC_FAR * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_HeartbeatInterval )( 
            IRTDUpdateEvent __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plRetVal);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_HeartbeatInterval )( 
            IRTDUpdateEvent __RPC_FAR * This,
            /* [in] */ long plRetVal);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Disconnect )( 
            IRTDUpdateEvent __RPC_FAR * This);
        
        END_INTERFACE
    } IRTDUpdateEventVtbl;

    interface IRTDUpdateEvent
    {
        CONST_VTBL struct IRTDUpdateEventVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTDUpdateEvent_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IRTDUpdateEvent_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IRTDUpdateEvent_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IRTDUpdateEvent_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IRTDUpdateEvent_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IRTDUpdateEvent_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IRTDUpdateEvent_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IRTDUpdateEvent_UpdateNotify(This)	\
    (This)->lpVtbl -> UpdateNotify(This)

#define IRTDUpdateEvent_get_HeartbeatInterval(This,plRetVal)	\
    (This)->lpVtbl -> get_HeartbeatInterval(This,plRetVal)

#define IRTDUpdateEvent_put_HeartbeatInterval(This,plRetVal)	\
    (This)->lpVtbl -> put_HeartbeatInterval(This,plRetVal)

#define IRTDUpdateEvent_Disconnect(This)	\
    (This)->lpVtbl -> Disconnect(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE IRTDUpdateEvent_UpdateNotify_Proxy( 
    IRTDUpdateEvent __RPC_FAR * This);


void __RPC_STUB IRTDUpdateEvent_UpdateNotify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE IRTDUpdateEvent_get_HeartbeatInterval_Proxy( 
    IRTDUpdateEvent __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plRetVal);


void __RPC_STUB IRTDUpdateEvent_get_HeartbeatInterval_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE IRTDUpdateEvent_put_HeartbeatInterval_Proxy( 
    IRTDUpdateEvent __RPC_FAR * This,
    /* [in] */ long plRetVal);


void __RPC_STUB IRTDUpdateEvent_put_HeartbeatInterval_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE IRTDUpdateEvent_Disconnect_Proxy( 
    IRTDUpdateEvent __RPC_FAR * This);


void __RPC_STUB IRTDUpdateEvent_Disconnect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IRTDUpdateEvent_INTERFACE_DEFINED__ */


#ifndef __IRtdServer_INTERFACE_DEFINED__
#define __IRtdServer_INTERFACE_DEFINED__

/* interface IRtdServer */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_IRtdServer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EC0E6191-DB51-11D3-8F3E-00C04F3651B8")
    IRtdServer : public IDispatch
    {
    public:
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ServerStart( 
            /* [in] */ IRTDUpdateEvent __RPC_FAR *CallbackObject,
            /* [retval][out] */ long __RPC_FAR *pfRes) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ConnectData( 
            /* [in] */ long TopicID,
            /* [in] */ SAFEARRAY __RPC_FAR * __RPC_FAR *Strings,
            /* [out][in] */ VARIANT_BOOL __RPC_FAR *GetNewValues,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarOut) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RefreshData( 
            /* [out][in] */ long __RPC_FAR *TopicCount,
            /* [retval][out] */ SAFEARRAY __RPC_FAR * __RPC_FAR *parrayOut) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DisconnectData( 
            /* [in] */ long TopicID) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Heartbeat( 
            /* [retval][out] */ long __RPC_FAR *pfRes) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ServerTerminate( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRtdServerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            IRtdServer __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            IRtdServer __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            IRtdServer __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )( 
            IRtdServer __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )( 
            IRtdServer __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )( 
            IRtdServer __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )( 
            IRtdServer __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ServerStart )( 
            IRtdServer __RPC_FAR * This,
            /* [in] */ IRTDUpdateEvent __RPC_FAR *CallbackObject,
            /* [retval][out] */ long __RPC_FAR *pfRes);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ConnectData )( 
            IRtdServer __RPC_FAR * This,
            /* [in] */ long TopicID,
            /* [in] */ SAFEARRAY __RPC_FAR * __RPC_FAR *Strings,
            /* [out][in] */ VARIANT_BOOL __RPC_FAR *GetNewValues,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarOut);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RefreshData )( 
            IRtdServer __RPC_FAR * This,
            /* [out][in] */ long __RPC_FAR *TopicCount,
            /* [retval][out] */ SAFEARRAY __RPC_FAR * __RPC_FAR *parrayOut);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DisconnectData )( 
            IRtdServer __RPC_FAR * This,
            /* [in] */ long TopicID);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Heartbeat )( 
            IRtdServer __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *pfRes);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ServerTerminate )( 
            IRtdServer __RPC_FAR * This);
        
        END_INTERFACE
    } IRtdServerVtbl;

    interface IRtdServer
    {
        CONST_VTBL struct IRtdServerVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRtdServer_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IRtdServer_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IRtdServer_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IRtdServer_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IRtdServer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IRtdServer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IRtdServer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IRtdServer_ServerStart(This,CallbackObject,pfRes)	\
    (This)->lpVtbl -> ServerStart(This,CallbackObject,pfRes)

#define IRtdServer_ConnectData(This,TopicID,Strings,GetNewValues,pvarOut)	\
    (This)->lpVtbl -> ConnectData(This,TopicID,Strings,GetNewValues,pvarOut)

#define IRtdServer_RefreshData(This,TopicCount,parrayOut)	\
    (This)->lpVtbl -> RefreshData(This,TopicCount,parrayOut)

#define IRtdServer_DisconnectData(This,TopicID)	\
    (This)->lpVtbl -> DisconnectData(This,TopicID)

#define IRtdServer_Heartbeat(This,pfRes)	\
    (This)->lpVtbl -> Heartbeat(This,pfRes)

#define IRtdServer_ServerTerminate(This)	\
    (This)->lpVtbl -> ServerTerminate(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE IRtdServer_ServerStart_Proxy( 
    IRtdServer __RPC_FAR * This,
    /* [in] */ IRTDUpdateEvent __RPC_FAR *CallbackObject,
    /* [retval][out] */ long __RPC_FAR *pfRes);


void __RPC_STUB IRtdServer_ServerStart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE IRtdServer_ConnectData_Proxy( 
    IRtdServer __RPC_FAR * This,
    /* [in] */ long TopicID,
    /* [in] */ SAFEARRAY __RPC_FAR * __RPC_FAR *Strings,
    /* [out][in] */ VARIANT_BOOL __RPC_FAR *GetNewValues,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarOut);


void __RPC_STUB IRtdServer_ConnectData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE IRtdServer_RefreshData_Proxy( 
    IRtdServer __RPC_FAR * This,
    /* [out][in] */ long __RPC_FAR *TopicCount,
    /* [retval][out] */ SAFEARRAY __RPC_FAR * __RPC_FAR *parrayOut);


void __RPC_STUB IRtdServer_RefreshData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE IRtdServer_DisconnectData_Proxy( 
    IRtdServer __RPC_FAR * This,
    /* [in] */ long TopicID);


void __RPC_STUB IRtdServer_DisconnectData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE IRtdServer_Heartbeat_Proxy( 
    IRtdServer __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *pfRes);


void __RPC_STUB IRtdServer_Heartbeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE IRtdServer_ServerTerminate_Proxy( 
    IRtdServer __RPC_FAR * This);


void __RPC_STUB IRtdServer_ServerTerminate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IRtdServer_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  LPSAFEARRAY_UserSize(     unsigned long __RPC_FAR *, unsigned long            , LPSAFEARRAY __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  LPSAFEARRAY_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, LPSAFEARRAY __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  LPSAFEARRAY_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, LPSAFEARRAY __RPC_FAR * ); 
void                      __RPC_USER  LPSAFEARRAY_UserFree(     unsigned long __RPC_FAR *, LPSAFEARRAY __RPC_FAR * ); 

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
