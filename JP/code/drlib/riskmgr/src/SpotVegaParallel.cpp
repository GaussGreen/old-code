/**
 *
 */

#include "edginc/config.hpp"
#include "edginc/GenericScalarOneSidedShift.hpp"
#include "edginc/SpotVegaParallelTweak.hpp"

DRLIB_BEGIN_NAMESPACE


/**
 * Calculates derivative of instrument price w.r.t. shifts in the spot 
 * volatilities
 *
 * The output generated by this sensitivity is:
 * <DL>
 * <DT>SPOT_VEGA_PARALLEL
 * <DD>Change in price when the spot volatilities are shifted up by 1bp
 * </DL>
 *
 * The derivative is reported in basis point units, i.e. the value reported is 
 * 10000 times smaller than the actual partial derivative.  This is implemented 
 * by setting SENSITIVITY_UNIT to 1e-4: see GenericScalarOneSidedShift::SENSITIVITY_UNIT
 */

typedef GenericScalarOneSidedShift<SpotVegaParallelTweak> SpotVegaParallel;

template<> CClassConstSP const SpotVegaParallel::TYPE =
    CClass::registerClassLoadMethod("SpotVegaParallel",
                                    typeid(SpotVegaParallel),
                                    SpotVegaParallel::load);

template<> const string SpotVegaParallel::NAME = "SPOT_VEGA_PARALLEL";

const double ONE_BASIS_POINT = 0.0001;
template<> const double SpotVegaParallel::DEFAULT_SHIFT = ONE_BASIS_POINT;
template<> const double SpotVegaParallel::SENSITIVITY_UNIT = ONE_BASIS_POINT;


/**
 * Included in RiskMgrLib::linkInClasses() to force linkage into the exe.
 */
bool SpotVegaParallelLinkIn() {
    return SpotVegaParallel::TYPE != NULL;
}

DRLIB_END_NAMESPACE
