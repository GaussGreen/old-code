/**
 *
 */

#include "edginc/config.hpp"
#include "edginc/GenericScalarOneSidedShift.hpp"
#include "edginc/CompositeVegaParallelTweak.hpp"

DRLIB_BEGIN_NAMESPACE


/**
 * Calculates derivative of instrument price w.r.t. shifts in the composite 
 * volatilities
 *
 * The output generated by this sensitivity is:
 * <DL>
 * <DT>COMP_VEGA_PARALLEL
 * <DD>Change in price when the composite volatilities are shifted up by 1bp
 * </DL>
 *
 * The derivative is reported in basis point units, i.e. the value reported is 
 * 10000 times smaller than the actual partial derivative.  This is implemented 
 * by setting SENSITIVITY_UNIT to 1e-4: see 
 * GenericScalarOneSidedShift::SENSITIVITY_UNIT
 */

typedef GenericScalarOneSidedShift<CompositeVegaParallelTweak> 
CompositeVegaParallel;

template<> CClassConstSP const CompositeVegaParallel::TYPE =
    CClass::registerClassLoadMethod("CompositeVegaParallel",
                                    typeid(CompositeVegaParallel),
                                    CompositeVegaParallel::load);

template<> const string CompositeVegaParallel::NAME = "COMP_VEGA_PARALLEL";
const double ONE_BASIS_POINT = 0.0001;
template<> const double CompositeVegaParallel::DEFAULT_SHIFT = ONE_BASIS_POINT;
template<> const double CompositeVegaParallel::SENSITIVITY_UNIT = ONE_BASIS_POINT;


/**
 * Included in RiskMgrLib::linkInClasses() to force linkage into the Windows exe.
 */
bool CompositeVegaParallelLinkIn() {
    return CompositeVegaParallel::TYPE != NULL;
}

DRLIB_END_NAMESPACE
